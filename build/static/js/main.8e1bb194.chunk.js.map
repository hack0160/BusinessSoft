{"version":3,"sources":["authProvider.js","configuration/actions.js","themeReducer.js","layout/Logo.js","layout/AppBar.js","segments/data.js","visitors/SegmentsField.js","visitors/SegmentInput.js","visitors/AvatarField.js","visitors/FullNameField.js","visitors/CustomerLinkField.js","visitors/ColoredNumberField.js","visitors/MobileGrid.js","visitors/VisitorList.js","visitors/VisitorCreate.js","orders/NbItemsField.js","products/ProductReferenceField.js","reviews/StarRatingField.js","visitors/SegmentsInput.js","visitors/VisitorEdit.js","visitors/index.js","visitors/CustomerReferenceField.js","orders/MobileGrid.js","orders/OrderList.js","orders/Basket.js","orders/OrderEdit.js","orders/index.js","visitors/AddressField.js","invoices/InvoiceShow.js","invoices/InvoiceList.js","invoices/index.js","products/GridList.js","products/ProductList.js","products/Poster.js","products/ProductCreate.js","products/ProductEdit.js","products/index.js","categories/LinkToRelatedProducts.js","categories/CategoryList.js","products/ThumbnailField.js","products/ProductRefField.js","categories/CategoryEdit.js","categories/index.js","reviews/BulkAcceptButton.js","reviews/BulkRejectButton.js","reviews/ReviewListMobile.js","reviews/rowStyle.js","reviews/ReviewListDesktop.js","reviews/ReviewFilter.js","reviews/AcceptButton.js","reviews/RejectButton.js","reviews/ReviewEditToolbar.js","reviews/ReviewEdit.js","reviews/ReviewList.js","reviews/index.js","layout/SubMenu.js","layout/Menu.js","layout/themes.js","layout/Layout.js","layout/Login.js","dashboard/Welcome.js","dashboard/CardIcon.js","dashboard/MonthlyRevenue.js","dashboard/NbNewOrders.js","dashboard/PendingOrders.js","dashboard/PendingReviews.js","dashboard/NewCustomers.js","dashboard/Dashboard.js","dashboard/index.js","configuration/Configuration.js","segments/LinkToRelatedCustomers.js","segments/Segments.js","routes.js","i18n/en.js","dataProvider/index.js","fakeServer/index.js","App.js","index.js"],"names":["login","username","localStorage","setItem","Promise","resolve","logout","removeItem","checkError","checkAuth","getItem","reject","getPermissions","changeTheme","theme","type","payload","previousState","Logo","props","width","height","viewBox","aria-label","style","lineHeight","fontWeight","fontSize","fontFamily","letterSpacing","wordSpacing","strokeWidth","fill","d","InkscapeFontSpecification","useStyles","makeStyles","title","flex","textOverflow","whiteSpace","overflow","spacer","ConfigurationMenu","forwardRef","_","ref","translate","useTranslate","MenuItemLink","to","primaryText","leftIcon","CustomUserMenu","UserMenu","CustomAppBar","classes","AppBar","userMenu","Typography","variant","color","className","id","name","styles","main","display","flexWrap","marginTop","marginBottom","chip","margin","SegmentsField","record","groups","map","segment","Chip","key","label","segments","find","s","defaultProps","addLabel","source","input","SegmentInput","SelectInput","choices","AvatarField","size","Avatar","src","avatar","root","alignItems","marginRight","spacing","PureFullNameField","pure","first_name","last_name","CustomerLinkField","Link","ColoredNumberField","WrappedComponent","Colored","displayName","colored","NumberField","card","flexDirection","cardTitleContent","justifyContent","cardContent","typography","body1","MobileGrid","ids","data","basePath","Card","CardHeader","EditButton","resource","CardContent","DateField","parseInt","nb_commands","options","currency","length","VisitorFilter","Filter","SearchInput","resettable","alwaysOn","DateInput","NullableBooleanInput","defaultValue","VisitorList","isXsmall","useMediaQuery","breakpoints","down","List","filters","sort","field","order","perPage","Datagrid","optimized","rowClick","showTime","BooleanField","marginLeft","email","address","maxWidth","zipcode","city","comment","VisitorCreate","Create","TabbedForm","FormTab","TextInput","autoFocus","formClassName","validation","fullWidth","path","multiline","render","basket","NbItemsField","FunctionField","textAlign","ProductReferenceField","ReferenceField","reference","TextField","opacity","StarRatingField","Array","rating","i","SegmentsInput","addField","rest","SelectArrayInput","VisitorTitle","list","create","edit","Edit","ReferenceManyField","target","filter","status","cellClassName","padding","icon","VisitorIcon","CustomerReferenceField","useListStyles","cardContentRow","total","OrderFilter","ReferenceInput","AutocompleteInput","optionText","choice","useDatagridStyles","TabbedDatagrid","tabs","state","ordered","delivered","cancelled","handleChange","event","value","filterValues","setFilters","this","isXSmall","Tabs","centered","indicatorColor","onChange","Tab","Divider","React","Component","StyledTabbedDatagrid","OrderList","filterDefaultValues","container","minWidth","rightAlignedCell","boldCell","Basket","useQueryWithStore","item","product_id","productId","admin","resources","products","r","reduce","prev","next","loaded","Paper","elevation","Table","TableHead","TableRow","TableCell","TableBody","price","toLocaleString","undefined","quantity","colSpan","total_ex_taxes","delivery_fees","tax_rate","classnames","OrderTitle","useEditStyles","aside","SimpleForm","disabled","BooleanInput","OrderIcon","AddressField","CustomerField","InvoiceShow","useShowController","Grid","xs","gutterBottom","align","link","Date","date","toLocaleDateString","component","ListFilters","expand","InvoiceIcon","gridList","tileBar","background","placeholder","backgroundColor","palette","grey","getColsForWidth","LoadingGridList","nbChildren","fn","nbItems","cellHeight","cols","GridListTile","from","LoadedGridList","linkToRecord","thumbnail","alt","GridListTileBar","subtitle","withWidth","useQuickFilterStyles","QuickFilter","ProductFilter","NumberInput","ProductList","zIndex","content","img","maxHeight","Poster","image","stock","widthFormGroup","heightFormGroup","ProductCreate","validate","required","InputProps","startAdornment","InputAdornment","position","endAdornment","allowEmpty","ProductTitle","createStyles","pagination","Pagination","ProductIcon","paddingRight","LinkToRelatedProducts","Button","pathname","search","stringify","page","JSON","category_id","CategoryList","ThumbnailField","ProductRefField","CategoryTitle","smart_count","minimumFractionDigits","CategoryIcon","BulkAcceptButton","selectedIds","notify","useNotify","redirectTo","useRedirect","unselectAll","useUnselectAll","useUpdateMany","action","CRUD_UPDATE_MANY","undoable","onSuccess","onFailure","approve","loading","onClick","BulkRejectButton","textDecoration","inline","ReviewMobileList","ListItem","button","ListItemAvatar","linkType","ListItemText","primary","secondary","secondaryTypographyProps","noWrap","hasBulkActions","rowStyle","index","defaultStyle","borderLeftColor","green","borderLeftWidth","borderLeftStyle","orange","red","headerRow","ReviewListDesktop","useFilterStyles","ReviewFilter","AcceptButton","useUpdate","RejectButton","ReviewEditToolbar","handleSubmitWithRedirect","invalid","saving","SaveButton","redirect","submitOnEnter","DeleteButton","paddingTop","form","up","inlineField","ReviewEdit","onCancel","controllerProps","useEditController","IconButton","save","version","toolbar","rowsMax","ReviewsBulkActionButtons","BulkDeleteButton","flexGrow","transition","transitions","duration","enteringScreen","listWithDrawer","drawerPaper","ReviewList","history","useHistory","handleClose","useCallback","push","match","isMatch","params","bulkActionButtons","ReviewListMobile","Drawer","open","anchor","onClose","paper","ReviewIcon","sidebarIsOpen","paddingLeft","sidebarIsClosed","SubMenu","handleToggle","isOpen","children","dense","header","MenuItem","ListItemIcon","Tooltip","placement","Collapse","in","timeout","unmountOnExit","disablePadding","Menu","onMenuClick","useState","menuCatalog","menuSales","menuCustomers","setState","useSelector","ui","sidebarOpen","menu","DashboardMenuItem","invoices","categories","menuCustomer","darkTheme","lightTheme","light","dark","contrastText","overrides","MuiFilledInput","CustomSidebar","Sidebar","Layout","appBar","sidebar","minHeight","backgroundRepeat","backgroundSize","hint","actions","renderInput","meta","touched","error","inputProps","helperText","Login","location","setLoading","useLogin","onSubmit","auth","nextPathname","then","catch","message","values","errors","password","handleSubmit","noValidate","CardActions","CircularProgress","thickness","Notification","LoginWithTheme","ThemeProvider","createMuiTheme","media","mediaUrl","Math","random","Welcome","CardMedia","href","float","borderRadius","CardIcon","Icon","bgColor","MonthlyRevenue","DollarIcon","NbNewOrders","ShoppingCartIcon","cost","text","PendingOrders","orders","customers","customer_id","nb_items","customer_name","ListItemSecondaryAction","titleLink","listItemText","overflowY","WebkitLineClamp","WebkitBoxOrient","query","PendingReviews","reviews","nb","CommentIcon","NewCustomers","aMonthAgo","useMemo","setDate","getDate","setHours","setMinutes","setSeconds","setMilliseconds","has_ordered","first_seen_gte","toISOString","visitors","CustomerIcon","flexColumn","leftCol","rightCol","singleCol","Dashboard","useVersion","dataProvider","useDataProvider","isSmall","fetchOrders","a","getList","date_gte","recentOrders","aggregations","stats","revenue","nbNewOrders","pendingOrders","maximumFractionDigits","getMany","pendingOrdersCustomers","customer","fetchReviews","nbPendingReviews","pendingReviews","slice","min","review","pendingReviewsCustomers","useEffect","Configuration","locale","useLocale","setLocale","useSetLocale","dispatch","useDispatch","Title","LinkToRelatedCustomers","Segments","exact","englishMessages","pos","configuration","language","dashboard","monthly_revenue","new_orders","pending_reviews","new_customers","pending_orders","items","welcome","aor_button","demo_button","sales","catalog","fields","commands","last_seen_gte","total_spent","identity","delete","delivery","sum","unit_price","date_lte","total_gte","returned","command_id","height_gte","height_lte","stock_lte","width_gte","width_lte","details","description","detail","accept","notification","approved_success","approved_error","rejected_success","rejected_error","compulsive","collector","ordered_once","regular","returns","reviewer","factory","default","provider","i18nProvider","polyglotI18nProvider","messages","App","fakeServerFactory","process","REACT_APP_DATA_PROVIDER","restoreFetch","dataProviderFactory","Admin","customReducers","themeReducer","customRoutes","authProvider","loginPage","layout","Resource","ReactDOM","document","getElementById"],"mappings":"mWAAe,G,OAAA,CACXA,MAAO,YAAmB,IAAhBC,EAAe,EAAfA,SAGN,OAFAC,aAAaC,QAAQ,WAAYF,GAE1BG,QAAQC,WAEnBC,OAAQ,WAEJ,OADAJ,aAAaK,WAAW,YACjBH,QAAQC,WAEnBG,WAAY,kBAAMJ,QAAQC,WAC1BI,UAAW,kBACPP,aAAaQ,QAAQ,YAAcN,QAAQC,UAAYD,QAAQO,UACnEC,eAAgB,kBAAMR,QAAQO,OAAO,qBCX5BE,EAAc,SAAAC,GAAK,MAAK,CACjCC,KAHwB,eAIxBC,QAASF,ICFE,aAAiD,IAAhDG,EAA+C,uDAA/B,QAA+B,yCAApBF,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC7C,MDHwB,iBCGpBD,EACOC,EAEJC,G,qECuCIC,EA3CF,SAAAC,GAAK,OACd,uCAAKC,MAAO,QAASC,OAAQ,OAAQC,QAAQ,oBAAuBH,GAChE,uBACII,aAAW,mBACXC,MAAO,CACHC,WAAY,MAEhBC,WAAY,IACZC,SAAU,MACVC,WAAW,mBACXC,cAAe,EACfC,YAAa,EACbC,YAAa,KACbC,KAAK,QAEL,0BACIC,EAAE,6+JACFT,MAAO,CACHU,0BAA2B,wBAGnC,0BACID,EAAE,q9CACFT,MAAO,CACHU,0BAA2B,wBAGnC,0BACID,EAAE,gqLACFT,MAAO,CACHU,0BAA2B,wBAGnC,0BACID,EAAE,uiQACFT,MAAO,CACHU,0BAA2B,2BC9BzCC,EAAYC,YAAW,CACzBC,MAAO,CACHC,KAAM,EACNC,aAAc,WACdC,WAAY,SACZC,SAAU,UAEdC,OAAQ,CACJJ,KAAM,KAIRK,EAAoBC,sBAAW,SAACC,EAAGC,GACrC,IAAMC,EAAYC,cAClB,OACI,kBAACC,EAAA,EAAD,CACIH,IAAKA,EACLI,GAAG,iBACHC,YAAaJ,EAAU,qBACvBK,SAAU,kBAAC,IAAD,WAKhBC,EAAiB,SAAAlC,GAAK,OACxB,kBAACmC,EAAA,EAAanC,EACV,kBAACwB,EAAD,QAoBOY,EAhBM,SAAApC,GACjB,IAAMqC,EAAUrB,IAChB,OACI,kBAACsB,EAAA,EAAD,iBAAYtC,EAAZ,CAAmBuC,SAAU,kBAAC,EAAD,QACzB,kBAACC,EAAA,EAAD,CACIC,QAAQ,KACRC,MAAM,UACNC,UAAWN,EAAQnB,MACnB0B,GAAG,sBAEP,kBAAC,EAAD,MACA,0BAAMD,UAAWN,EAAQd,W,kMCjDtB,IACX,CAAEqB,GAAI,aAAcC,KAAM,sCAC1B,CAAED,GAAI,YAAaC,KAAM,qCACzB,CAAED,GAAI,eAAgBC,KAAM,wCAC5B,CAAED,GAAI,UAAWC,KAAM,mCACvB,CAAED,GAAI,UAAWC,KAAM,mCACvB,CAAED,GAAI,WAAYC,KAAM,qCCDtBC,GAAS,CACXC,KAAM,CACFC,QAAS,OACTC,SAAU,OACVC,WAAY,EACZC,cAAe,GAEnBC,KAAM,CAAEC,OAAQ,IAGdC,GAAgB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACf3B,EAAYC,cAClB,OACI,0BAAMxB,MAAOyC,GAAOC,MACfQ,EAAOC,QACJD,EAAOC,OAAOC,KAAI,SAAAC,GAAO,OACrB,kBAACC,GAAA,EAAD,CACIC,IAAKF,EACLrD,MAAOyC,GAAOM,KACdS,MAAOjC,EACHkC,GAASC,MAAK,SAAAC,GAAC,OAAIA,EAAEpB,KAAOc,KAASb,aAQjES,GAAcW,aAAe,CACzBC,UAAU,EACVC,OAAQ,UAGGb,U,UChCTtC,GAAYC,YAAW,CACzBmD,MAAO,CAAEnE,MAAO,OAGdoE,GAAe,SAAArE,GACjB,IAAM4B,EAAYC,cACZQ,EAAUrB,KAChB,OACI,kBAACsD,GAAA,EAAD,iBACQtE,EADR,CAEIuE,QAAST,GAASL,KAAI,SAAAC,GAAO,MAAK,CAC9Bd,GAAIc,EAAQd,GACZC,KAAMjB,EAAU8B,EAAQb,UAE5BF,UAAWN,EAAQ+B,UAK/BC,GAAaJ,aAAe,CACxBE,OAAQ,UAGGE,U,yCC1BTG,GAAc,SAAC,GAAD,IAAGjB,EAAH,EAAGA,OAAQkB,EAAX,EAAWA,KAAM9B,EAAjB,EAAiBA,UAAjB,OAChB,kBAAC+B,GAAA,EAAD,CACIC,IAAG,UAAKpB,EAAOqB,OAAZ,iBAA2BH,EAA3B,YAAmCA,GACtCA,KAAMA,EACNpE,MAAO,CAAEJ,MAAOwE,EAAMvE,OAAQuE,GAC9B9B,UAAWA,KAInB6B,GAAYP,aAAe,CACvBQ,KAAM,IAGKD,UCVTxD,GAAYC,aAAW,SAAAtB,GAAK,MAAK,CACnCkF,KAAM,CACF7B,QAAS,OACTC,SAAU,SACV6B,WAAY,UAEhBF,OAAQ,CACJG,YAAapF,EAAMqF,QAAQ,QAkB7BC,GAAoBC,MAdJ,SAAC,GAA2B,IAAD,IAAxB3B,cAAwB,MAAf,GAAe,EAAXkB,EAAW,EAAXA,KAC5BpC,EAAUrB,KAChB,OACI,yBAAK2B,UAAWN,EAAQwC,MACpB,kBAAC,GAAD,CACIlC,UAAWN,EAAQuC,OACnBrB,OAAQA,EACRkB,KAAMA,IAETlB,EAAO4B,WANZ,IAMyB5B,EAAO6B,cAOxCH,GAAkBhB,aAAe,CAC7BE,OAAQ,YACRN,MAAO,mCAGIoB,UCjCTI,GAAoB,SAAArF,GAAK,OAC3B,kBAACsF,GAAA,EAAD,CAAMvD,GAAE,qBAAgB/B,EAAMuD,OAAOX,KACjC,kBAAC,GAAkB5C,KAI3BqF,GAAkBpB,aAAe,CAC7BE,OAAQ,cACRD,UAAU,GAGCmB,UCETE,GAfU,SAAAC,GACZ,IAAMC,EAAU,SAAAzF,GAAK,OACjBA,EAAMuD,OAAOvD,EAAMmE,QAAU,IACzB,0BAAM9D,MAAO,CAAEqC,MAAO,QAClB,kBAAC8C,EAAqBxF,IAG1B,kBAACwF,EAAqBxF,IAK9B,OAFAyF,EAAQC,YAAR,kBAAiCF,EAAiBE,YAAlD,KAEOD,EAGgBE,CAAQC,KACnCL,GAAmBtB,aAAe2B,IAAY3B,aAE/BsB,U,wCCRTvE,GAAYC,aAAW,SAAAtB,GAAK,MAAK,CACnCkG,KAAM,CACF3F,OAAQ,OACR8C,QAAS,OACT8C,cAAe,SACfzC,OAAQ,YAEZ0C,iBAAkB,CACd/C,QAAS,OACT8C,cAAe,OACfhB,WAAY,SACZkB,eAAgB,iBAEpBC,YAAY,2BACLtG,EAAMuG,WAAWC,OADb,IAEPnD,QAAS,OACT8C,cAAe,eAIjBM,GAAa,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACvB3E,EAAYC,cACZQ,EAAUrB,KAChB,OACI,yBAAKX,MAAO,CAAEgD,OAAQ,QACjBgD,EAAI5C,KAAI,SAAAb,GAAE,OACP,kBAAC4D,GAAA,EAAD,CAAM5C,IAAKhB,EAAID,UAAWN,EAAQwD,MAC9B,kBAACY,GAAA,EAAD,CACIvF,MACI,yBAAKyB,UAAWN,EAAQ0D,kBACpB,sCAAQO,EAAK1D,GAAIuC,WAAjB,YACImB,EAAK1D,GAAIwC,YAEb,kBAACsB,GAAA,EAAD,CACIC,SAAS,WACTJ,SAAUA,EACVhD,OAAQ+C,EAAK1D,MAIzBgC,OAAQ,kBAAC,GAAD,CAAarB,OAAQ+C,EAAK1D,GAAK6B,KAAK,SAEhD,kBAACmC,GAAA,EAAD,CAAajE,UAAWN,EAAQ4D,aAC5B,6BACKrE,EACG,4CAFR,OAKI,kBAACiF,EAAA,EAAD,CACItD,OAAQ+C,EAAK1D,GACbuB,OAAO,YACPvE,KAAK,UAGb,6BACKgC,EACG,0BACAkF,SAASR,EAAK1D,GAAImE,YAAa,KAAO,GAH9C,YAMI,kBAACnB,EAAA,EAAD,CACIrC,OAAQ+C,EAAK1D,GACbuB,OAAO,cACPN,MAAM,sCACNlB,UAAWN,EAAQ0E,eAG3B,6BACKnF,EACG,0CAFR,SAIa,IACT,kBAAC,GAAD,CACI2B,OAAQ+C,EAAK1D,GACbuB,OAAO,cACP6C,QAAS,CAAE3G,MAAO,WAAY4G,SAAU,WAInDX,EAAK1D,GAAIY,QAAU8C,EAAK1D,GAAIY,OAAO0D,OAAS,GACzC,kBAACN,GAAA,EAAD,CAAajE,UAAWN,EAAQ4D,aAC5B,kBAAC,GAAD,CAAe1C,OAAQ+C,EAAK1D,YASxDwD,GAAWnC,aAAe,CACtBqC,KAAM,GACND,IAAK,IAGMD,UCxFTe,GAAgB,SAAAnH,GAAK,OACzB,kBAACoH,EAAA,EAAWpH,EACV,kBAACqH,EAAA,EAAD,CAAalD,OAAO,IAAImD,YAAU,EAACC,UAAQ,IAC3C,kBAACC,EAAA,EAAD,CAAWrD,OAAO,kBAClB,kBAACsD,EAAA,EAAD,CAAsBtD,OAAO,gBAC7B,kBAACsD,EAAA,EAAD,CAAsBtD,OAAO,iBAAiBuD,cAAY,IAC1D,kBAAC,GAAD,QAIE1G,GAAYC,YAAW,CAC3B8F,YAAa,CAAErE,MAAO,YAqCTiF,GAlCK,SAAA3H,GAClB,IAAMqC,EAAUrB,KACV4G,EAAWC,aAAc,SAAAlI,GAAK,OAAIA,EAAMmI,YAAYC,KAAK,SAC/D,OACE,kBAACC,EAAA,EAAD,iBACMhI,EADN,CAEEiI,QAAS,kBAAC,GAAD,MACTC,KAAM,CAAEC,MAAO,YAAaC,MAAO,QACnCC,QAAS,KAERT,EACC,kBAAC,GAAD,MAEA,kBAACU,EAAA,EAAD,CAAUC,WAAS,EAACC,SAAS,QAC3B,kBAAC,GAAD,MACA,kBAAC3B,EAAA,EAAD,CAAW1C,OAAO,YAAYvE,KAAK,SACnC,kBAACgG,EAAA,EAAD,CACEzB,OAAO,cACPN,MAAM,sCACNlB,UAAWN,EAAQ0E,cAErB,kBAAC,GAAD,CACE5C,OAAO,cACP6C,QAAS,CAAE3G,MAAO,WAAY4G,SAAU,SAE1C,kBAACJ,EAAA,EAAD,CAAW1C,OAAO,kBAAkBsE,UAAQ,IAC5C,kBAACC,EAAA,EAAD,CAAcvE,OAAO,iBAAiBN,MAAM,UAC5C,kBAAC,GAAD,S,wCCzDGf,GAAS,CACpBqC,WAAY,CAAEnC,QAAS,gBACvBoC,UAAW,CAAEpC,QAAS,eAAgB2F,WAAY,IAClDC,MAAO,CAAE3I,MAAO,KAChB4I,QAAS,CAAEC,SAAU,KACrBC,QAAS,CAAE/F,QAAS,gBACpBgG,KAAM,CAAEhG,QAAS,eAAgB2F,WAAY,IAC7CM,QAAS,CACPH,SAAU,OACVxH,SAAU,SACVF,aAAc,WACdC,WAAY,WAIVL,GAAYC,YAAW6B,IAsCdoG,GApCO,SAAAlJ,GACpB,IAAMqC,EAAUrB,KAChB,OACE,kBAACmI,GAAA,EAAWnJ,EACV,kBAACoJ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAASxF,MAAM,qCACb,kBAACyF,GAAA,EAAD,CACEC,WAAS,EACTpF,OAAO,aACPqF,cAAenH,EAAQ8C,aAEzB,kBAACmE,GAAA,EAAD,CAAWnF,OAAO,YAAYqF,cAAenH,EAAQ+C,YACrD,kBAACkE,GAAA,EAAD,CACE1J,KAAK,QACLuE,OAAO,QACPsF,WAAY,CAAEb,OAAO,GACrBc,WAAW,EACXF,cAAenH,EAAQuG,QAEzB,kBAACpB,EAAA,EAAD,CAAWrD,OAAO,cAEpB,kBAACkF,GAAA,EAAD,CAASxF,MAAM,mCAAmC8F,KAAK,WACrD,kBAACL,GAAA,EAAD,CACEnF,OAAO,UACPqF,cAAenH,EAAQwG,QACvBe,WAAW,EACXF,WAAW,IAEb,kBAACJ,GAAA,EAAD,CAAWnF,OAAO,UAAUqF,cAAenH,EAAQ0G,UACnD,kBAACO,GAAA,EAAD,CAAWnF,OAAO,OAAOqF,cAAenH,EAAQ2G,W,wCC/CpDa,GAAS,SAAAtG,GAAM,OAAIA,EAAOuG,OAAO5C,QAEjC6C,GAAe,SAAA/J,GAAK,OAAI,kBAACgK,GAAA,EAAD,iBAAmBhK,EAAnB,CAA0B6J,OAAQA,OAEhEE,GAAa9F,aAAe,CACxBJ,MAAO,WACPoG,UAAW,SAGAF,U,UCTTG,GAAwB,SAAAlK,GAAK,OAC/B,kBAACmK,GAAA,EAAD,eACItG,MAAM,UACNM,OAAO,aACPiG,UAAU,YACNpK,GAEJ,kBAACqK,GAAA,EAAD,CAAWlG,OAAO,gBAI1B+F,GAAsBjG,aAAe,CACjCE,OAAQ,aACRD,UAAU,GAGCgG,U,qBChBT7J,GAAQ,CAAEiK,QAAS,IAAMrK,MAAO,GAAIC,OAAQ,IAE5CqK,GAAkB,SAAC,GAAD,IAAGhH,EAAH,EAAGA,OAAH,OACpB,8BACKiH,MAAMjH,EAAOkH,QACT5J,MAAK,GACL4C,KAAI,SAAC/B,EAAGgJ,GAAJ,OACD,kBAAC,KAAD,CAAM9G,IAAK8G,EAAGrK,MAAOA,UAKrCkK,GAAgBtG,aAAe,CAC3BJ,MAAO,kCACPM,OAAQ,SACRD,UAAU,GAGCqG,U,mBChBTI,GAAgB,SAAC,GAA0B,EAAxBC,SAAyB,IAAZC,EAAW,6BACvCjJ,EAAYC,cAClB,OACI,kBAACiJ,GAAA,EAAD,iBACQD,EADR,CAEItG,QAAST,GAASL,KAAI,SAAAC,GAAO,MAAK,CAC9Bd,GAAIc,EAAQd,GACZC,KAAMjB,EAAU8B,EAAQb,cAMxC8H,GAAc1G,aAAe,CACzB2G,UAAU,EACVzG,OAAQ,UAGGwG,UCCT3J,GAAYC,YAAW6B,IAEvBiI,GAAe,SAAC,GAAD,IAAGxH,EAAH,EAAGA,OAAH,OACjBA,EAAS,kBAAC,GAAD,CAAeA,OAAQA,EAAQkB,KAAM,KAAS,MCrB5C,IACXuG,KAAMrD,GACNsD,OAAQ/B,GACRgC,KDoBgB,SAAAlL,GAChB,IAAMqC,EAAUrB,KAChB,OACI,kBAACmK,GAAA,EAAD,eAAMjK,MAAO,kBAAC,GAAD,OAAsBlB,GAC/B,kBAACoJ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAASxF,MAAM,qCACX,kBAACyF,GAAA,EAAD,CACInF,OAAO,aACPqF,cAAenH,EAAQ8C,aAE3B,kBAACmE,GAAA,EAAD,CACInF,OAAO,YACPqF,cAAenH,EAAQ+C,YAE3B,kBAACkE,GAAA,EAAD,CACI1J,KAAK,QACLuE,OAAO,QACPsF,WAAY,CAAEb,OAAO,GACrBc,WAAW,EACXF,cAAenH,EAAQuG,QAE3B,kBAACpB,EAAA,EAAD,CAAWrD,OAAO,cAEtB,kBAACkF,GAAA,EAAD,CACIxF,MAAM,mCACN8F,KAAK,WAEL,kBAACL,GAAA,EAAD,CACInF,OAAO,UACPqF,cAAenH,EAAQwG,QACvBe,WAAW,EACXF,WAAW,IAEf,kBAACJ,GAAA,EAAD,CACInF,OAAO,UACPqF,cAAenH,EAAQ0G,UAE3B,kBAACO,GAAA,EAAD,CAAWnF,OAAO,OAAOqF,cAAenH,EAAQ2G,QAEpD,kBAACK,GAAA,EAAD,CAASxF,MAAM,kCAAkC8F,KAAK,UAClD,kBAACyB,GAAA,EAAD,CACIlH,UAAU,EACVgE,KAAM,CAAEC,MAAO,OAAQC,MAAO,QAC9BgC,UAAU,WACViB,OAAO,eAEP,kBAAC/C,EAAA,EAAD,KACI,kBAACzB,EAAA,EAAD,CAAW1C,OAAO,SAClB,kBAACkG,GAAA,EAAD,CAAWlG,OAAO,cAClB,kBAAC,GAAD,MACA,kBAACyB,EAAA,EAAD,CACIzB,OAAO,QACP6C,QAAS,CAAE3G,MAAO,WAAY4G,SAAU,SAE5C,kBAACoD,GAAA,EAAD,CAAWlG,OAAO,WAClB,kBAACuC,GAAA,EAAD,SAIZ,kBAAC2C,GAAA,EAAD,CACIxF,MAAM,mCACN8F,KAAK,WAEL,kBAACyB,GAAA,EAAD,CACIlH,UAAU,EACVgE,KAAM,CAAEC,MAAO,OAAQC,MAAO,QAC9BgC,UAAU,UACViB,OAAO,cACP3B,WAAS,GAET,kBAACpB,EAAA,EAAD,CAAUgD,OAAQ,CAAEC,OAAQ,aACxB,kBAAC1E,EAAA,EAAD,CAAW1C,OAAO,SAClB,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAACkG,GAAA,EAAD,CACIlG,OAAO,UACPqH,cAAenJ,EAAQ4G,UAE3B,kBAACvC,GAAA,EAAD,CAAYrG,MAAO,CAAEoL,QAAS,QAI1C,kBAACpC,GAAA,EAAD,CAASxF,MAAM,iCAAiC8F,KAAK,SACjD,kBAAC,GAAD,MACA,kBAAClC,EAAA,EAAD,CAAsBtD,OAAO,mBAC7B,kBAAC0C,EAAA,EAAD,CACI1C,OAAO,aACP9D,MAAO,CAAEJ,MAAO,IAAK+C,QAAS,kBAElC,kBAAC6D,EAAA,EAAD,CACI1C,OAAO,kBACP9D,MAAO,CAAEJ,MAAO,IAAK+C,QAAS,kBAElC,kBAAC6D,EAAA,EAAD,CACI1C,OAAO,YACP9D,MAAO,CAAEJ,MAAO,IAAK+C,QAAS,sBClHlD0I,KAAMC,K,uECLJC,GAAyB,SAAA5L,GAAK,OAChC,kBAACmK,GAAA,EAAD,eAAgBhG,OAAO,cAAciG,UAAU,aAAgBpK,GAC3D,kBAAC,GAAD,QAIR4L,GAAuB3H,aAAe,CAClCE,OAAQ,cACRD,UAAU,GAGC0H,UCCTC,GAAgB5K,aAAW,SAAAtB,GAAK,MAAK,CACvCkG,KAAM,CACF3F,OAAQ,OACR8C,QAAS,OACT8C,cAAe,SACfzC,OAAQ,YAEZ0C,iBAAkB,CACd/C,QAAS,OACT8C,cAAe,OACfhB,WAAY,SACZkB,eAAgB,iBAEpBC,YAAatG,EAAMuG,WAAWC,MAC9B2F,eAAgB,CACZ9I,QAAS,OACT8C,cAAe,OACfhB,WAAY,SACZzB,OAAQ,gBAIV+C,GAAa,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACvB3E,EAAYC,cACZQ,EAAUwJ,KAChB,OACI,yBAAKxL,MAAO,CAAEgD,OAAQ,QACjBgD,EAAI5C,KAAI,SAAAb,GAAE,OACP,kBAAC4D,GAAA,EAAD,CAAM5C,IAAKhB,EAAID,UAAWN,EAAQwD,MAC9B,kBAACY,GAAA,EAAD,CACIvF,MACI,yBAAKyB,UAAWN,EAAQ0D,kBACpB,8BACKnE,EAAU,0BAA2B,GAD1C,QAGI,kBAACyI,GAAA,EAAD,CACI9G,OAAQ+C,EAAK1D,GACbuB,OAAO,eAGf,kBAACuC,GAAA,EAAD,CACIC,SAAS,WACTJ,SAAUA,EACVhD,OAAQ+C,EAAK1D,QAK7B,kBAACgE,GAAA,EAAD,CAAajE,UAAWN,EAAQ4D,aAC5B,0BAAMtD,UAAWN,EAAQyJ,gBACpBlK,EAAU,2BAA4B,GAD3C,QAEI,kBAAC,GAAD,CACI2B,OAAQ+C,EAAK1D,GACb2D,SAAUA,KAGlB,0BAAM5D,UAAWN,EAAQyJ,gBACpBlK,EAAU,iCADf,QAEI,kBAACiF,EAAA,EAAD,CACItD,OAAQ+C,EAAK1D,GACbuB,OAAO,OACPsE,UAAQ,KAGhB,0BAAM9F,UAAWN,EAAQyJ,gBACpBlK,EACG,0CAFR,QAKI,kBAACgE,EAAA,EAAD,CACIrC,OAAQ+C,EAAK1D,GACbuB,OAAO,QACP6C,QAAS,CAAE3G,MAAO,WAAY4G,SAAU,OACxCtE,UAAWN,EAAQ0J,SAG3B,0BAAMpJ,UAAWN,EAAQyJ,gBACpBlK,EAAU,oCADf,QAGI,kBAACyI,GAAA,EAAD,CAAWlG,OAAO,SAASZ,OAAQ+C,EAAK1D,MAE5C,0BAAMD,UAAWN,EAAQyJ,gBACpBlK,EAAU,sCADf,QAGI,kBAAC8G,EAAA,EAAD,CAAcnF,OAAQ+C,EAAK1D,GAAKuB,OAAO,qBASnEiC,GAAWnC,aAAe,CACtBqC,KAAM,GACND,IAAK,IAGMD,UCtFT4F,GAAc,SAAAhM,GAAK,OACvB,kBAACoH,EAAA,EAAWpH,EACV,kBAACqH,EAAA,EAAD,CAAalD,OAAO,IAAImD,YAAU,EAACC,UAAQ,IAC3C,kBAAC0E,GAAA,EAAD,CAAgB9H,OAAO,cAAciG,UAAU,aAC7C,kBAAC8B,GAAA,EAAD,CACEC,WAAY,SAAAC,GAAM,gBAAOA,EAAOjH,WAAd,YAA4BiH,EAAOhH,eAGzD,kBAACoC,EAAA,EAAD,CAAWrD,OAAO,aAClB,kBAACqD,EAAA,EAAD,CAAWrD,OAAO,aAClB,kBAACmF,GAAA,EAAD,CAAWnF,OAAO,cAClB,kBAACsD,EAAA,EAAD,CAAsBtD,OAAO,eAI3BkI,GAAoBpL,YAAW,CACnC8K,MAAO,CAAExL,WAAY,UAGjB+L,G,4MACJC,KAAO,CACL,CAAE3J,GAAI,UAAWC,KAAM,WACvB,CAAED,GAAI,YAAaC,KAAM,aACzB,CAAED,GAAI,YAAaC,KAAM,c,EAG3B2J,MAAQ,CAAEC,QAAS,GAAIC,UAAW,GAAIC,UAAW,I,EASjDC,aAAe,SAACC,EAAOC,GAAW,IAAD,EACM,EAAK9M,MAAlC+M,EADuB,EACvBA,cACRC,EAF+B,EACTA,YACX,2BAAKD,GAAN,IAAoBxB,OAAQuB,M,4CAGxC,WAAU,IAAD,EAC+CG,KAAKjN,MAAnDkN,EADD,EACCA,SAAU7K,EADX,EACWA,QAAS0K,EADpB,EACoBA,aAAiB/M,EADrC,sDAGP,OACE,kBAAC,WAAD,KACE,kBAACmN,GAAA,EAAD,CACE1K,QAAQ,YACR2K,UAAQ,EACRN,MAAOC,EAAaxB,OACpB8B,eAAe,UACfC,SAAUL,KAAKL,cAEdK,KAAKV,KAAK9I,KAAI,SAAA2I,GAAM,OACnB,kBAACmB,GAAA,EAAD,CAAK3J,IAAKwI,EAAOxJ,GAAIiB,MAAOuI,EAAOvJ,KAAMiK,MAAOV,EAAOxJ,SAG3D,kBAAC4K,GAAA,EAAD,MACCN,EACC,kBAAC,GAAD,iBAAgBlN,EAAhB,CAAuBqG,IAAK4G,KAAKT,MAAMO,EAAaxB,WAEpD,6BAC2B,YAAxBwB,EAAaxB,QACZ,kBAACjD,EAAA,EAAD,iBACMtI,EADN,CAEEqG,IAAK4G,KAAKT,MAAMC,QAChBlE,WAAS,EACTC,SAAS,SAET,kBAAC3B,EAAA,EAAD,CAAW1C,OAAO,OAAOsE,UAAQ,IACjC,kBAAC4B,GAAA,EAAD,CAAWlG,OAAO,cAClB,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAACyB,EAAA,EAAD,CACEzB,OAAO,QACP6C,QAAS,CACP3G,MAAO,WACP4G,SAAU,OAEZtE,UAAWN,EAAQ0J,SAIA,cAAxBgB,EAAaxB,QACZ,kBAACjD,EAAA,EAAD,iBAActI,EAAd,CAAqBqG,IAAK4G,KAAKT,MAAME,YACnC,kBAAC7F,EAAA,EAAD,CAAW1C,OAAO,OAAOsE,UAAQ,IACjC,kBAAC4B,GAAA,EAAD,CAAWlG,OAAO,cAClB,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAACyB,EAAA,EAAD,CACEzB,OAAO,QACP6C,QAAS,CACP3G,MAAO,WACP4G,SAAU,OAEZtE,UAAWN,EAAQ0J,QAErB,kBAACrD,EAAA,EAAD,CAAcvE,OAAO,aACrB,kBAACuC,GAAA,EAAD,OAGqB,cAAxBqG,EAAaxB,QACZ,kBAACjD,EAAA,EAAD,iBAActI,EAAd,CAAqBqG,IAAK4G,KAAKT,MAAMG,YACnC,kBAAC9F,EAAA,EAAD,CAAW1C,OAAO,OAAOsE,UAAQ,IACjC,kBAAC4B,GAAA,EAAD,CAAWlG,OAAO,cAClB,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAACyB,EAAA,EAAD,CACEzB,OAAO,QACP6C,QAAS,CACP3G,MAAO,WACP4G,SAAU,OAEZtE,UAAWN,EAAQ0J,QAErB,kBAACrD,EAAA,EAAD,CAAcvE,OAAO,aACrB,kBAACuC,GAAA,EAAD,Y,uCAvFd,SAAgC1G,EAAOwM,GACrC,OAAIxM,EAAMqG,MAAQmG,EAAMxM,EAAM+M,aAAaxB,QAClC,2BAAKiB,GAAZ,kBAAoBxM,EAAM+M,aAAaxB,OAASvL,EAAMqG,MAEjD,S,GAbkBoH,IAAMC,WA0G7BC,GAAuB,SAAA3N,GAC3B,IAAMqC,EAAUgK,KACVa,EAAWrF,aAAc,SAAAlI,GAAK,OAAIA,EAAMmI,YAAYC,KAAK,SAC/D,OAAO,kBAAC,GAAD,eAAgB1F,QAASA,EAAS6K,SAAUA,GAAclN,KAepD4N,GAZG,SAAC,GAAD,EAAGvL,QAAH,IAAerC,EAAf,mCAChB,kBAACgI,EAAA,EAAD,iBACMhI,EADN,CAEE6N,oBAAqB,CAAEtC,OAAQ,WAC/BrD,KAAM,CAAEC,MAAO,OAAQC,MAAO,QAC9BC,QAAS,GACTJ,QAAS,kBAAC,GAAD,QAET,kBAAC,GAAD,Q,4GC5JEjH,GAAYC,YAAW,CACzB6M,UAAW,CAAEC,SAAU,OAAQpF,WAAY,OAC3CqF,iBAAkB,CAAE/D,UAAW,SAC/BgE,SAAU,CAAE1N,WAAY,UAyKb2N,GAtKA,SAAC,GAAgB,IAAd3K,EAAa,EAAbA,OACRlB,EAAUrB,KACVY,EAAYC,cAFS,EAIQsM,aAC/B,CACIvO,KAAM,UACN+G,SAAU,WACV9G,QAAS,CACLwG,IAAK9C,EAASA,EAAOuG,OAAOrG,KAAI,SAAA2K,GAAI,OAAIA,EAAKC,cAAc,KAGnE,IACA,SAAA7B,GAII,OAHmBjJ,EACbA,EAAOuG,OAAOrG,KAAI,SAAA2K,GAAI,OAAIA,EAAKC,cAC/B,IAED5K,KACG,SAAA6K,GAAS,OAAI9B,EAAM+B,MAAMC,UAAUC,SAASnI,KAAKgI,MAEpDhD,QAAO,SAAAoD,GAAC,MAAiB,qBAANA,KACnBC,QAAO,SAACC,EAAMC,GAEX,OADAD,EAAKC,EAAKjM,IAAMiM,EACTD,IACR,OArBPE,EAJmB,EAInBA,OAAcL,EAJK,EAIXnI,KAyBhB,OAAKwI,GAAWvL,EAGZ,kBAACwL,GAAA,EAAD,CAAOpM,UAAWN,EAAQyL,UAAWkB,UAAW,GAC5C,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACKxN,EACG,+CAGR,kBAACwN,GAAA,EAAD,CAAWzM,UAAWN,EAAQ2L,kBACzBpM,EACG,gDAGR,kBAACwN,GAAA,EAAD,CAAWzM,UAAWN,EAAQ2L,kBACzBpM,EACG,8CAGR,kBAACwN,GAAA,EAAD,CAAWzM,UAAWN,EAAQ2L,kBACzBpM,EACG,6CAKhB,kBAACyN,GAAA,EAAD,KACK9L,EAAOuG,OAAOrG,KACX,SAAA2K,GAAI,OACAK,EAASL,EAAKC,aACV,kBAACc,GAAA,EAAD,CAAUvL,IAAKwK,EAAKC,YAChB,kBAACe,GAAA,EAAD,KACI,kBAAC9J,GAAA,EAAD,CACIvD,GAAE,oBAAeqM,EAAKC,aAGlBI,EAASL,EAAKC,YACTjE,YAIjB,kBAACgF,GAAA,EAAD,CACIzM,UAAWN,EAAQ2L,kBAElBS,EACGL,EAAKC,YACPiB,MAAMC,oBAAeC,EAAW,CAC9BnP,MAAO,WACP4G,SAAU,SAGlB,kBAACmI,GAAA,EAAD,CACIzM,UAAWN,EAAQ2L,kBAElBI,EAAKqB,UAEV,kBAACL,GAAA,EAAD,CACIzM,UAAWN,EAAQ2L,mBAGfS,EAASL,EAAKC,YAAYiB,MAC1BlB,EAAKqB,UACPF,oBAAeC,EAAW,CACxBnP,MAAO,WACP4G,SAAU,aAMlC,kBAACkI,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWM,QAAS,IACpB,kBAACN,GAAA,EAAD,KACKxN,EAAU,yCAEf,kBAACwN,GAAA,EAAD,CAAWzM,UAAWN,EAAQ2L,kBACzBzK,EAAOoM,eAAeJ,oBAAeC,EAAW,CAC7CnP,MAAO,WACP4G,SAAU,UAItB,kBAACkI,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWM,QAAS,IACpB,kBAACN,GAAA,EAAD,KACKxN,EACG,8CAGR,kBAACwN,GAAA,EAAD,CAAWzM,UAAWN,EAAQ2L,kBACzBzK,EAAOqM,cAAcL,oBAAeC,EAAW,CAC5CnP,MAAO,WACP4G,SAAU,UAItB,kBAACkI,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWM,QAAS,IACpB,kBAACN,GAAA,EAAD,KACKxN,EACG,8CAGR,kBAACwN,GAAA,EAAD,CAAWzM,UAAWN,EAAQ2L,kBACzBzK,EAAOsM,SAASN,oBAAeC,EAAW,CACvCnP,MAAO,cAInB,kBAAC8O,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWM,QAAS,IACpB,kBAACN,GAAA,EAAD,CAAWzM,UAAWN,EAAQ4L,UACzBrM,EACG,2CAGR,kBAACwN,GAAA,EAAD,CACIzM,UAAWmN,KACPzN,EAAQ4L,SACR5L,EAAQ2L,mBAGXzK,EAAOwI,MAAMwD,oBAAeC,EAAW,CACpCnP,MAAO,WACP4G,SAAU,aA/HP,MChC7B8I,GAAa,SAAC,GAAgB,IAAdxM,EAAa,EAAbA,OACZ3B,EAAYC,cAClB,OACI,8BACKD,EAAU,2BAA4B,CACnCwI,UAAW7G,EAAO6G,cAM5B4F,GAAgB/O,YAAW,CAC7B4D,KAAM,CAAEC,WAAY,gBCtBT,IACXkG,KAAM4C,GACN1C,KDuBc,SAAAlL,GACd,IAAMqC,EAAU2N,KAChB,OACI,kBAAC7E,GAAA,EAAD,eACIjK,MAAO,kBAAC,GAAD,MACP+O,MAAO,kBAAC,GAAD,MACP5N,QAASA,GACLrC,GAEJ,kBAACkQ,GAAA,EAAD,KACI,kBAAC1I,EAAA,EAAD,CAAWrD,OAAO,SAClB,kBAAC8H,GAAA,EAAD,CAAgB9H,OAAO,cAAciG,UAAU,aAC3C,kBAAC8B,GAAA,EAAD,CACIC,WAAY,SAAAC,GAAM,gBACXA,EAAOjH,WADI,YACUiH,EAAOhH,eAI3C,kBAACd,GAAA,EAAD,CACIH,OAAO,SACPI,QAAS,CACL,CAAE3B,GAAI,YAAaC,KAAM,aACzB,CAAED,GAAI,UAAWC,KAAM,WACvB,CAAED,GAAI,YAAaC,KAAM,aACzB,CACID,GAAI,UACJC,KAAM,UACNsN,UAAU,MAItB,kBAACC,GAAA,EAAD,CAAcjM,OAAO,gBCrDjCuH,KAAM2E,M,qBCAKC,GANM,SAAC,GAAD,IAAG/M,EAAH,EAAGA,OAAH,OACjB,8BACKA,EAAOsF,QADZ,KACuBtF,EAAOyF,KAD9B,IACqCzF,EAAOwF,U,oBCK1CwH,GAAgB,SAAC,GAAD,IAAGhN,EAAH,EAAGA,OAAH,OAClB,kBAACf,EAAA,EAAD,KACKe,EAAO4B,WADZ,IACyB5B,EAAO6B,UAC5B,6BACC7B,EAAOsF,QACR,6BACCtF,EAAOyF,KALZ,KAKoBzF,EAAOwF,UAqFhByH,GAjFK,SAAAxQ,GAAU,IAClBuD,EAAWkN,aAAkBzQ,GAA7BuD,OACR,OAAKA,EAED,kBAACiD,GAAA,EAAD,CAAMnG,MAAO,CAAEJ,MAAO,IAAKoD,OAAQ,SAC/B,kBAACuD,GAAA,EAAD,KACI,kBAAC8J,GAAA,EAAD,CAAM5C,WAAS,EAAC9I,QAAS,GACrB,kBAAC0L,GAAA,EAAD,CAAMtC,MAAI,EAACuC,GAAI,GACX,kBAACnO,EAAA,EAAD,CAAYC,QAAQ,KAAKmO,cAAY,GAArC,mBAIJ,kBAACF,GAAA,EAAD,CAAMtC,MAAI,EAACuC,GAAI,GACX,kBAACnO,EAAA,EAAD,CAAYC,QAAQ,KAAKmO,cAAY,EAACC,MAAM,SAA5C,WACatN,EAAOX,MAI5B,kBAAC8N,GAAA,EAAD,CAAM5C,WAAS,EAAC9I,QAAS,GACrB,kBAAC0L,GAAA,EAAD,CAAMtC,MAAI,EAACuC,GAAI,GAAIE,MAAM,SACrB,kBAAC1G,GAAA,EAAD,CACIxD,SAAS,WACTyD,UAAU,YACVjG,OAAO,cACPoC,SAAS,YACThD,OAAQA,EACRuN,MAAM,GAEN,kBAAC,GAAD,SAIZ,yBAAKzQ,MAAO,CAAEH,OAAQ,KAAtB,QACA,kBAACwQ,GAAA,EAAD,CAAM5C,WAAS,EAAC9I,QAAS,GACrB,kBAAC0L,GAAA,EAAD,CAAMtC,MAAI,EAACuC,GAAI,GACX,kBAACnO,EAAA,EAAD,CAAYC,QAAQ,KAAKmO,cAAY,EAACC,MAAM,UAA5C,OACS,KAET,kBAACrO,EAAA,EAAD,CAAYoO,cAAY,EAACC,MAAM,UAC1B,IAAIE,KAAKxN,EAAOyN,MAAMC,uBAI/B,kBAACP,GAAA,EAAD,CAAMtC,MAAI,EAACuC,GAAI,GACX,kBAACnO,EAAA,EAAD,CAAYC,QAAQ,KAAKmO,cAAY,EAACC,MAAM,UAA5C,SAGA,kBAAC1G,GAAA,EAAD,CACIxD,SAAS,WACTyD,UAAU,WACVjG,OAAO,aACPoC,SAAS,YACThD,OAAQA,EACRuN,MAAM,GAEN,kBAACzG,GAAA,EAAD,CACIlG,OAAO,YACP0M,MAAM,SACNK,UAAU,IACVN,cAAY,OAK5B,yBAAKvQ,MAAO,CAAEgD,OAAQ,WAClB,kBAAC8G,GAAA,EAAD,CACIxD,SAAS,WACTyD,UAAU,WACVjG,OAAO,aACPoC,SAAS,YACThD,OAAQA,EACRuN,MAAM,GAEN,kBAAC,GAAD,UAvEA,MCLlBK,GAAc,SAAAnR,GAAK,OACrB,kBAACoH,EAAA,EAAWpH,EACR,kBAACwH,EAAA,EAAD,CAAWrD,OAAO,WAAWoD,UAAQ,IACrC,kBAACC,EAAA,EAAD,CAAWrD,OAAO,WAAWoD,UAAQ,MCf9B,IACXyD,KDkBgB,SAAAhL,GAAK,OACrB,kBAACgI,EAAA,EAAD,iBAAUhI,EAAV,CAAiBiI,QAAS,kBAAC,GAAD,MAAiBI,QAAS,KAChD,kBAACC,EAAA,EAAD,CAAUE,SAAS,SAAS4I,OAAQ,kBAAC,GAAD,OAChC,kBAAC/G,GAAA,EAAD,CAAWlG,OAAO,OAClB,kBAAC0C,EAAA,EAAD,CAAW1C,OAAO,SAClB,kBAACgG,GAAA,EAAD,CAAgBhG,OAAO,cAAciG,UAAU,aAC3C,kBAAC,GAAD,OAEJ,kBAACD,GAAA,EAAD,CACIhG,OAAO,cACPiG,UAAU,YACV0G,MAAM,EACNjN,MAAM,qCAEN,kBAAC,GAAD,OAEJ,kBAACsG,GAAA,EAAD,CAAgBhG,OAAO,aAAaiG,UAAU,YAC1C,kBAACC,GAAA,EAAD,CAAWlG,OAAO,eAEtB,kBAACyB,EAAA,EAAD,CAAazB,OAAO,mBACpB,kBAACyB,EAAA,EAAD,CAAazB,OAAO,kBACpB,kBAACyB,EAAA,EAAD,CAAazB,OAAO,UACpB,kBAACyB,EAAA,EAAD,CAAazB,OAAO,aCvC5BuH,KAAM2F,M,0FCIJrQ,GAAYC,aAAW,SAAAtB,GAAK,MAAK,CACnCkF,KAAM,CACFxB,OAAQ,QAEZiO,SAAU,CACNrR,MAAO,OACPoD,OAAQ,GAEZkO,QAAS,CACLC,WACI,sFAERC,YAAa,CACTC,gBAAiB/R,EAAMgS,QAAQC,KAAK,KACpC1R,OAAQ,QAEZoP,MAAO,CACHtM,QAAS,SACTxC,SAAU,OAEdsQ,KAAM,CACFpO,MAAO,YAITmP,GAAkB,SAAA5R,GACpB,MAAc,OAAVA,EAAuB,EACb,OAAVA,EAAuB,EACb,OAAVA,EAAuB,EACb,OAAVA,EAAuB,EACpB,GAML6R,GAAkB,SAAC,GAA6B,IAHvCC,EAAYC,EAGA/R,EAA0B,EAA1BA,MAA0B,IAAnBgS,eAAmB,MAAT,GAAS,EAC3C5P,EAAUrB,KAChB,OACI,yBAAK2B,UAAWN,EAAQwC,MACpB,kBAAC,KAAD,CACIqN,WAAY,IACZC,KAAMN,GAAgB5R,GACtB0C,UAAWN,EAAQiP,UAElB,KAZFS,EAaQE,EAbID,EAaK,SAAApO,GAAG,OACf,kBAACwO,GAAA,EAAD,CAAcxO,IAAKA,GACf,yBAAKjB,UAAWN,EAAQoP,gBAd5CjH,MAAM6H,KAAK,CAAEnL,OAAQ6K,IAAc,SAACrQ,EAAGkC,GAAJ,OAAYoO,EAAGpO,UAsBhD0O,GAAiB,SAAC,GAAoC,IAAlCjM,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAUtG,EAAY,EAAZA,MACrCoC,EAAUrB,KAChB,OACI,yBAAK2B,UAAWN,EAAQwC,MACpB,kBAAC,KAAD,CACIqN,WAAY,IACZC,KAAMN,GAAgB5R,GACtB0C,UAAWN,EAAQiP,UAElBjL,EAAI5C,KAAI,SAAAb,GAAE,OACP,kBAACwP,GAAA,EAAD,CACIlB,UAAW5L,KACX1B,IAAKhB,EACLb,GAAIwQ,aAAahM,EAAUD,EAAK1D,GAAIA,KAEpC,yBAAK+B,IAAK2B,EAAK1D,GAAI4P,UAAWC,IAAI,KAClC,kBAACC,GAAA,EAAD,CACI/P,UAAWN,EAAQkP,QACnBrQ,MAAOoF,EAAK1D,GAAIwH,UAChBuI,SACI,8BACKrM,EAAK1D,GAAI3C,MADd,IACsBqG,EAAK1D,GAAI1C,OAD/B,IACwC,IACpC,kBAAC0F,EAAA,EAAD,CACIjD,UAAWN,EAAQiN,MACnBnL,OAAO,QACPZ,OAAQ+C,EAAK1D,GACbF,MAAM,UACNsE,QAAS,CACL3G,MAAO,WACP4G,SAAU,mBAgBvC2L,mBAHE,SAAC,GAAD,IAAG9D,EAAH,EAAGA,OAAW9O,EAAd,kCACb8O,EAAS,kBAAC,GAAmB9O,GAAY,kBAAC,GAAoBA,MC/F5D6S,GAAuB5R,aAAW,SAAAtB,GAAK,MAAK,CAChDkF,KAAM,CACJ1B,aAAcxD,EAAMqF,QAAQ,QAI1B8N,GAAc,SAAC,GAAe,IAAbjP,EAAY,EAAZA,MACfjC,EAAYC,cACZQ,EAAUwQ,KAChB,OAAO,kBAAClP,GAAA,EAAD,CAAMhB,UAAWN,EAAQwC,KAAMhB,MAAOjC,EAAUiC,MAG5CkP,GAAgB,SAAA/S,GAAK,OAChC,kBAACoH,EAAA,EAAWpH,EACV,kBAACqH,EAAA,EAAD,CAAalD,OAAO,IAAImD,YAAU,EAACC,UAAQ,IAC3C,kBAAC0E,GAAA,EAAD,CACE9H,OAAO,cACPiG,UAAU,aACVlC,KAAM,CAAEC,MAAO,KAAMC,MAAO,QAE5B,kBAAC9D,GAAA,EAAD,CAAaH,OAAO,UAEtB,kBAAC6O,GAAA,EAAD,CAAa7O,OAAO,cACpB,kBAAC6O,GAAA,EAAD,CAAa7O,OAAO,cACpB,kBAAC6O,GAAA,EAAD,CAAa7O,OAAO,eACpB,kBAAC6O,GAAA,EAAD,CAAa7O,OAAO,eACpB,kBAAC,GAAD,CACEN,MAAM,sCACNM,OAAO,YACPuD,aAAc,OAgBLuL,GAXK,SAAAjT,GAAK,OACvB,kBAACgI,EAAA,EAAD,iBACMhI,EADN,CAEEiI,QAAS,kBAAC,GAAD,MACTI,QAAS,GACTH,KAAM,CAAEC,MAAO,KAAMC,MAAO,SAE5B,kBAAC,GAAD,Q,8BClDEpH,GAAYC,YAAW,CACzB4D,KAAM,CAAE7B,QAAS,eAAgBE,UAAW,MAAOgQ,OAAQ,GAC3DC,QAAS,CAAE1H,QAAS,EAAG,eAAgB,CAAEA,QAAS,IAClD2H,IAAK,CACDnT,MAAO,UACP8N,SAAU,UACVjF,SAAU,OACVuK,UAAW,UAeJC,GAXA,SAAC,GAAgB,IAAd/P,EAAa,EAAbA,OACRlB,EAAUrB,KAChB,OACI,kBAACwF,GAAA,EAAD,CAAM7D,UAAWN,EAAQwC,MACrB,kBAAC+B,GAAA,EAAD,CAAajE,UAAWN,EAAQ8Q,SAC5B,yBAAKxO,IAAKpB,EAAOgQ,MAAOd,IAAI,GAAG9P,UAAWN,EAAQ+Q,S,UCNrDtQ,GAAS,CAClBwM,MAAO,CAAErP,MAAO,OAChBA,MAAO,CAAEA,MAAO,OAChBC,OAAQ,CAAED,MAAO,OACjBuT,MAAO,CAAEvT,MAAO,OAChBwT,eAAgB,CAAEzQ,QAAS,gBAC3B0Q,gBAAiB,CAAE1Q,QAAS,eAAgB2F,WAAY,KAGtD3H,GAAYC,YAAW6B,IAoFd6Q,GAlFO,SAAA3T,GAClB,IAAMqC,EAAUrB,KAChB,OACI,kBAACmI,GAAA,EAAWnJ,EACR,kBAACoJ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAASxF,MAAM,iCACX,kBAACyF,GAAA,EAAD,CACIC,WAAS,EACTpF,OAAO,QACPuF,WAAS,EACTkK,SAAUC,iBAEd,kBAACvK,GAAA,EAAD,CACInF,OAAO,YACPuF,WAAS,EACTkK,SAAUC,kBAGlB,kBAACxK,GAAA,EAAD,CAASxF,MAAM,kCAAkC8F,KAAK,WAClD,kBAACL,GAAA,EAAD,CAAWnF,OAAO,YAAYyP,SAAUC,iBACxC,kBAACb,GAAA,EAAD,CACI7O,OAAO,QACPyP,SAAUC,eACVlR,UAAWN,EAAQiN,MACnBwE,WAAY,CACRC,eACI,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SAAzB,mBAMZ,kBAACjB,GAAA,EAAD,CACI7O,OAAO,QACPyP,SAAUC,eACVlR,UAAWN,EAAQpC,MACnBuJ,cAAenH,EAAQoR,eACvBK,WAAY,CACRI,aACI,kBAACF,GAAA,EAAD,CAAgBC,SAAS,SAAzB,SAMZ,kBAACjB,GAAA,EAAD,CACI7O,OAAO,SACPyP,SAAUC,eACVlR,UAAWN,EAAQnC,OACnBsJ,cAAenH,EAAQqR,gBACvBI,WAAY,CACRI,aACI,kBAACF,GAAA,EAAD,CAAgBC,SAAS,SAAzB,SAMZ,kBAAChI,GAAA,EAAD,CACI9H,OAAO,cACPiG,UAAU,aACV+J,YAAU,GAEV,kBAAC7P,GAAA,EAAD,CAAaH,OAAO,UAExB,kBAAC6O,GAAA,EAAD,CACI7O,OAAO,QACPyP,SAAUC,eACVlR,UAAWN,EAAQmR,SAG3B,kBAACnK,GAAA,EAAD,CACIxF,MAAM,sCACN8F,KAAK,eAEL,kBAAC,KAAD,CAAexF,OAAO,cAAcN,MAAM,SC5ExDuQ,GAAe,SAAC,GAAD,IAAG7Q,EAAH,EAAGA,OAAH,OAAgB,yCAAeA,EAAO6G,YAErDtH,GAAM,2BACLuR,IADK,IAERpL,QAAS,CACLH,SAAU,OACVxH,SAAU,SACVF,aAAc,WACdC,WAAY,YAIdL,GAAYC,YAAW6B,IChCd,IACXkI,KAAMiI,GACNhI,OAAQ0I,GACRzI,KD+BgB,SAAAlL,GAChB,IAAMqC,EAAUrB,KAChB,OACI,kBAACmK,GAAA,EAAD,iBAAUnL,EAAV,CAAiBkB,MAAO,kBAAC,GAAD,QACpB,kBAACkI,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAASxF,MAAM,iCACX,kBAAC,GAAD,MACA,kBAACyF,GAAA,EAAD,CAAWnF,OAAO,QAAQuF,WAAS,IACnC,kBAACJ,GAAA,EAAD,CAAWnF,OAAO,YAAYuF,WAAS,KAE3C,kBAACL,GAAA,EAAD,CAASxF,MAAM,kCAAkC8F,KAAK,WAClD,kBAACL,GAAA,EAAD,CAAWnF,OAAO,cAClB,kBAAC6O,GAAA,EAAD,CACI7O,OAAO,QACPxB,UAAWN,EAAQiN,MACnBwE,WAAY,CACRC,eACI,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SAAzB,mBAMZ,kBAACjB,GAAA,EAAD,CACI7O,OAAO,QACPxB,UAAWN,EAAQpC,MACnBuJ,cAAenH,EAAQoR,eACvBK,WAAY,CACRI,aACI,kBAACF,GAAA,EAAD,CAAgBC,SAAS,SAAzB,SAMZ,kBAACjB,GAAA,EAAD,CACI7O,OAAO,SACPxB,UAAWN,EAAQnC,OACnBsJ,cAAenH,EAAQqR,gBACvBI,WAAY,CACRI,aACI,kBAACF,GAAA,EAAD,CAAgBC,SAAS,SAAzB,SAMZ,kBAAChI,GAAA,EAAD,CAAgB9H,OAAO,cAAciG,UAAU,cAC3C,kBAAC9F,GAAA,EAAD,CAAaH,OAAO,UAExB,kBAAC6O,GAAA,EAAD,CAAa7O,OAAO,QAAQxB,UAAWN,EAAQmR,SAEnD,kBAACnK,GAAA,EAAD,CACIxF,MAAM,sCACN8F,KAAK,eAEL,kBAAC,KAAD,CAAexF,OAAO,cAAcN,MAAM,MAE9C,kBAACwF,GAAA,EAAD,CAASxF,MAAM,kCAAkC8F,KAAK,WAClD,kBAACyB,GAAA,EAAD,CACIhB,UAAU,UACViB,OAAO,aACPnH,UAAU,EACVoQ,WAAY,kBAACC,GAAA,EAAD,MACZ7K,WAAS,GAET,kBAACpB,EAAA,EAAD,KACI,kBAACzB,EAAA,EAAD,CAAW1C,OAAO,SAClB,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAACkG,GAAA,EAAD,CACIlG,OAAO,UACPqH,cAAenJ,EAAQ4G,UAE3B,kBAACoB,GAAA,EAAD,CAAWlG,OAAO,WAClB,kBAACuC,GAAA,EAAD,YCzGxBgF,KAAM8I,M,wCCAJxT,GAAYC,YAAW,CACzByK,KAAM,CAAE+I,aAAc,SACtB3D,KAAM,CACF9N,QAAS,cACT8B,WAAY,YA8BL4P,GA1Be,SAAC,GAAgB,IAAdnR,EAAa,EAAbA,OACvB3B,EAAYC,cACZQ,EAAUrB,KAChB,OACI,kBAAC2T,GAAA,EAAD,CACIlQ,KAAK,QACL/B,MAAM,UACNwO,UAAW5L,KACXvD,GAAI,CACA6S,SAAU,YACVC,OAAQC,qBAAU,CACdC,KAAM,EACN1M,QAAS,GACTH,KAAM,KACNE,MAAO,OACPkD,OAAQ0J,KAAKF,UAAU,CAAEG,YAAa1R,EAAOX,QAGrDD,UAAWN,EAAQyO,MAEnB,kBAAC,GAASpF,KAAV,CAAe/I,UAAWN,EAAQqJ,OACjC9J,EAAU,0CCvBRsT,GAVM,SAAC,GAAD,EAAG7S,QAAH,IAAerC,EAAf,mCACjB,kBAACgI,EAAA,EAAD,iBAAUhI,EAAV,CAAiBkI,KAAM,CAAEC,MAAO,OAAQC,MAAO,SAC3C,kBAACE,EAAA,EAAD,KACI,kBAAC+B,GAAA,EAAD,CAAWlG,OAAO,SAClB,kBAAC,GAAD,MACA,kBAACuC,GAAA,EAAD,SCPN1F,GAAYC,YAAW,CACzB4D,KAAM,CAAE5E,MAAO,GAAI6I,SAAU,GAAIuK,UAAW,MAQjC8B,GALQ,SAAC,GAAgB,IAAd5R,EAAa,EAAbA,OAChBlB,EAAUrB,KAChB,OAAO,yBAAK2D,IAAKpB,EAAOiP,UAAW7P,UAAWN,EAAQwC,KAAM4N,IAAI,MCN9D2C,GAAkB,SAAC,GAAD,IAAG7R,EAAH,EAAGA,OAAH,OACpB,kBAAC,KAAD,CAAMxB,GAAE,mBAAcwB,EAAOX,KAAOW,EAAO6G,YAG/CgL,GAAgBnR,aAAe,CAC3BE,OAAQ,KACRN,MAAO,aAGIuR,UCGTC,GAAgB,SAAC,GAAgB,IAAd9R,EAAa,EAAbA,OACf3B,EAAYC,cAClB,OACI,8BACKD,EAAU,4BAA6B,CAAE0T,YAAa,IAD3D,KAEK/R,EAAOV,KAFZ,MCbO,IACXmI,KAAMkK,GACNhK,KDkBiB,SAAAlL,GAAK,OACtB,kBAACmL,GAAA,EAAD,eAAMjK,MAAO,kBAAC,GAAD,OAAuBlB,GAChC,kBAACkQ,GAAA,EAAD,KACI,kBAAC5G,GAAA,EAAD,CAAWnF,OAAO,SAClB,kBAACiH,GAAA,EAAD,CACIhB,UAAU,WACViB,OAAO,cACPxH,MAAM,uCACNwE,QAAS,GAET,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAiBnE,OAAO,cACxB,kBAACyB,EAAA,EAAD,CACIzB,OAAO,QACP6C,QAAS,CAAE3G,MAAO,WAAY4G,SAAU,SAE5C,kBAACrB,EAAA,EAAD,CACIzB,OAAO,QACP6C,QAAS,CAAEuO,sBAAuB,KAEtC,kBAAC3P,EAAA,EAAD,CACIzB,OAAO,SACP6C,QAAS,CAAEuO,sBAAuB,KAEtC,kBAAC3P,EAAA,EAAD,CAAazB,OAAO,UACpB,kBAACuC,GAAA,EAAD,WC3ChBgF,KAAM8J,M,kICkDKC,GA9CU,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAClBC,EAASC,eACTC,EAAaC,eACbC,EAAcC,aAAe,WAHO,EAKXC,aAC3B,UACAP,EACA,CAAEnK,OAAQ,YACV,CACI2K,OAAQC,KACRC,UAAU,EACVC,UAAW,WACPV,EACI,kDACA,OACA,IACA,GAEJE,EAAW,YACXE,KAEJO,UAAW,WACPX,EACI,gDACA,cAzB0B,mBAKnCY,EALmC,KAKxBC,EALwB,KAKxBA,QA0BlB,OACI,kBAAC,KAAD,CACI3S,MAAM,kCACN4S,QAASF,EACTpG,SAAUqG,GAEV,kBAAC,KAAD,Q,qBCSGE,GA9CU,SAAC,GAAqB,IAAnBhB,EAAkB,EAAlBA,YAClBC,EAASC,eACTC,EAAaC,eACbC,EAAcC,aAAe,WAHO,EAKZC,aAC1B,UACAP,EACA,CAAEnK,OAAQ,YACV,CACI2K,OAAQC,KACRC,UAAU,EACVC,UAAW,WACPV,EACI,kDACA,OACA,IACA,GAEJE,EAAW,YACXE,KAEJO,UAAW,WACPX,EACI,gDACA,cAzB0B,mBAKnCnW,EALmC,KAKzBgX,EALyB,KAKzBA,QA0BjB,OACI,kBAAC,KAAD,CACI3S,MAAM,kCACN4S,QAASjX,EACT2Q,SAAUqG,GAEV,kBAAC,KAAD,Q,wCChCNxV,GAAYC,YAAW,CACzB4D,KAAM,CACF5E,MAAO,SAEX6Q,KAAM,CACF6F,eAAgB,OAChBjU,MAAO,WAEXkU,OAAQ,CACJ5T,QAAS,YAIX6T,GAAmB,SAAC,GAA6C,IAA3CtQ,EAA0C,EAA1CA,SAAUD,EAAgC,EAAhCA,KAAMD,EAA0B,EAA1BA,IAAKmQ,EAAqB,EAArBA,QAASzK,EAAY,EAAZA,MAChD1J,EAAUrB,KAChB,OACKwV,GAAWzK,EAAQ,IAChB,kBAAC,KAAD,CAAMpJ,UAAWN,EAAQwC,MACpBwB,EAAI5C,KAAI,SAAAb,GAAE,OACP,kBAAC,KAAD,CACIb,GAAIwQ,aAAahM,EAAU3D,GAC3BD,UAAWN,EAAQyO,KACnBlN,IAAKhB,GAEL,kBAACkU,GAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,GAAA,EAAD,KACI,kBAAC7M,GAAA,EAAD,CACI5G,OAAQ+C,EAAK1D,GACbuB,OAAO,cACPiG,UAAU,YACV7D,SAAUA,EACV0Q,UAAU,GAEV,kBAAC,GAAD,CAAaxS,KAAM,OAG3B,kBAACyS,GAAA,EAAD,CACIC,QACI,kBAAC,WAAD,KACI,kBAAChN,GAAA,EAAD,CACI5G,OAAQ+C,EAAK1D,GACbuB,OAAO,cACPiG,UAAU,YACV7D,SAAUA,EACV0Q,UAAU,GAEV,kBAACjN,GAAA,EAAD,CACIH,OAAQ,SAAAtG,GAAM,gBACPA,EAAO4B,WADA,YAEN5B,EAAO6B,YAGf3C,QAAQ,YACRE,UAAWN,EAAQuU,UAET,IAjBtB,KAkBO,IACH,kBAACzM,GAAA,EAAD,CACI5G,OAAQ+C,EAAK1D,GACbuB,OAAO,aACPiG,UAAU,WACV7D,SAAUA,EACV0Q,UAAU,GAEV,kBAAC5M,GAAA,EAAD,CACIlG,OAAO,YACP1B,QAAQ,YACRE,UAAWN,EAAQuU,WAKnCQ,UAAW9Q,EAAK1D,GAAIqG,QACpBoO,yBAA0B,CAAEC,QAAQ,YA4BpET,GAAiB5S,aAAe,CAC5BgT,SAAU,OACVM,gBAAgB,EAChB7B,YAAa,IAGFmB,U,+DC/FAW,GAzBE,SAACjU,EAAQkU,GAA8B,IAAvBC,EAAsB,uDAAP,GAC5C,MAAsB,aAAlBnU,EAAOgI,OACA,2BACAmM,GADP,IAEIC,gBAAiBC,KAAM,KACvBC,gBAAiB,EACjBC,gBAAiB,UAEH,YAAlBvU,EAAOgI,OACA,2BACAmM,GADP,IAEIC,gBAAiBI,KAAO,KACxBF,gBAAiB,EACjBC,gBAAiB,UAEH,aAAlBvU,EAAOgI,OACA,2BACAmM,GADP,IAEIC,gBAAiBK,KAAI,KACrBH,gBAAiB,EACjBC,gBAAiB,UAElBJ,GChBL7L,GAAgB5K,YAAW,CAC7BgX,UAAW,CACPN,gBAAiB,QACjBE,gBAAiB,EACjBC,gBAAiB,SAErB7O,QAAS,CACLH,SAAU,OACVxH,SAAU,SACVF,aAAc,WACdC,WAAY,YAwBL6W,GApBW,SAAAlY,GACtB,IAAMqC,EAAUwJ,KAChB,OACI,kBAACvD,EAAA,EAAD,eACIE,SAAS,OACTgP,SAAUA,GACVnV,QAAS,CAAE4V,UAAW5V,EAAQ4V,WAC9B1P,WAAS,GACLvI,GAEJ,kBAAC6G,EAAA,EAAD,CAAW1C,OAAO,SAClB,kBAAC,GAAD,CAAwB2M,MAAM,IAC9B,kBAAC,GAAD,CAAuBA,MAAM,IAC7B,kBAAC,GAAD,MACA,kBAACzG,GAAA,EAAD,CAAWlG,OAAO,UAAUqH,cAAenJ,EAAQ4G,UACnD,kBAACoB,GAAA,EAAD,CAAWlG,OAAO,aC5BxBgU,GAAkBlX,YAAW,CACjCsK,OAAQ,CAAEtL,MAAO,OA+BJmY,GA5BM,SAAApY,GACnB,IAAMqC,EAAU8V,KAChB,OACE,kBAAC/Q,EAAA,EAAWpH,EACV,kBAACqH,EAAA,EAAD,CAAalD,OAAO,IAAImD,YAAU,EAACC,UAAQ,IAC3C,kBAACjD,GAAA,EAAD,CACEH,OAAO,SACPI,QAAS,CACP,CAAE3B,GAAI,WAAYC,KAAM,YACxB,CAAED,GAAI,UAAWC,KAAM,WACvB,CAAED,GAAI,WAAYC,KAAM,aAE1BF,UAAWN,EAAQkJ,SAErB,kBAACU,GAAA,EAAD,CAAgB9H,OAAO,cAAciG,UAAU,aAC7C,kBAAC8B,GAAA,EAAD,CACEC,WAAY,SAAAC,GAAM,gBAAOA,EAAOjH,WAAd,YAA4BiH,EAAOhH,eAGzD,kBAAC6G,GAAA,EAAD,CAAgB9H,OAAO,aAAaiG,UAAU,YAC5C,kBAAC8B,GAAA,EAAD,CAAmBC,WAAW,eAEhC,kBAAC3E,EAAA,EAAD,CAAWrD,OAAO,aAClB,kBAACqD,EAAA,EAAD,CAAWrD,OAAO,e,iFCuBTkU,GApDM,SAAC,GAAgB,IAAd9U,EAAa,EAAbA,OACd3B,EAAYC,cACZ8T,EAASC,eACTC,EAAaC,eAHc,EAKFwC,aAC3B,UACA/U,EAAOX,GACP,CAAE2I,OAAQ,YACVhI,EACA,CACI6S,UAAU,EACVC,UAAW,WACPV,EACI,kDACA,OACA,IACA,GAEJE,EAAW,aAEfS,UAAW,WACPX,EACI,gDACA,cAxBiB,mBAK1BY,EAL0B,KAKfC,EALe,KAKfA,QAwBlB,OAAOjT,GAA4B,YAAlBA,EAAOgI,OACpB,kBAACoJ,GAAA,EAAD,CACIlS,QAAQ,WACRC,MAAM,UACN+B,KAAK,QACLgS,QAASF,EACTpG,SAAUqG,GAEV,kBAAC,KAAD,CACI9T,MAAM,UACNrC,MAAO,CAAEoU,aAAc,QAAS/R,MAAO,WAE1Cd,EAAU,oCAGf,gCCSO2W,GArDM,SAAC,GAAgB,IAAdhV,EAAa,EAAbA,OACd3B,EAAYC,cACZ8T,EAASC,eACTC,EAAaC,eAHc,EAKHwC,aAC1B,UACA/U,EAAOX,GACP,CAAE2I,OAAQ,YACVhI,EACA,CACI6S,UAAU,EACVC,UAAW,WACPV,EACI,kDACA,OACA,IACA,GAEJE,EAAW,aAEfS,UAAW,WACPX,EACI,gDACA,cAxBiB,mBAK1BnW,EAL0B,KAKhBgX,EALgB,KAKhBA,QAyBjB,OAAOjT,GAA4B,YAAlBA,EAAOgI,OACpB,kBAACoJ,GAAA,EAAD,CACIlS,QAAQ,WACRC,MAAM,UACN+B,KAAK,QACLgS,QAASjX,EACT2Q,SAAUqG,GAEV,kBAAC,KAAD,CACI9T,MAAM,UACNrC,MAAO,CAAEoU,aAAc,QAAS/R,MAAO,SAE1Cd,EAAU,oCAGf,gCC9CFZ,GAAYC,YAAW,CACzB4D,KAAM,CACF6M,gBAAiB,QACjB1O,QAAS,OACTgD,eAAgB,mBAwCTwS,GApCW,SAAC,GAOpB,IANHjS,EAME,EANFA,SACAkS,EAKE,EALFA,yBACAC,EAIE,EAJFA,QACAnV,EAGE,EAHFA,OACAoD,EAEE,EAFFA,SACAgS,EACE,EADFA,OAEMtW,EAAUrB,KAChB,OACI,kBAAC,KAAD,CAAY2B,UAAWN,EAAQwC,MACR,YAAlBtB,EAAOgI,OACJ,kBAAC,WAAD,KACI,kBAAC,GAAD,CAAchI,OAAQA,IACtB,kBAAC,GAAD,CAAcA,OAAQA,KAG1B,kBAAC,WAAD,KACI,kBAACqV,GAAA,EAAD,CACIH,yBAA0BA,EAC1BC,QAASA,EACTC,OAAQA,EACRE,SAAS,OACTC,eAAe,IAEnB,kBAACC,GAAA,EAAD,CACIxS,SAAUA,EACVhD,OAAQA,EACRoD,SAAUA,OC1B5B3F,GAAYC,aAAW,SAAAtB,GAAK,YAAK,CACnCkF,KAAM,CACFmU,WAAY,IAEhB9X,MAAO,CACH8B,QAAS,OACT8B,WAAY,SACZkB,eAAgB,gBAChB3C,OAAQ,OAEZ4V,MAAI,mBACCtZ,EAAMmI,YAAYoR,GAAG,MAAQ,CAC1BjZ,MAAO,MAFX,cAICN,EAAMmI,YAAYC,KAAK,MAAQ,CAC5B9H,MAAO,QACPiD,WAAY,KANhB,GASJiW,YAAa,CACTnW,QAAS,eACT/C,MAAO,WA0CAmZ,GAtCI,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAarZ,EAAY,6BACrCqC,EAAUrB,KACVsY,EAAkBC,aAAkBvZ,GACpC4B,EAAYC,cAClB,OAAKyX,EAAgB/V,OAIjB,yBAAKZ,UAAWN,EAAQwC,MACpB,yBAAKlC,UAAWN,EAAQnB,OACpB,kBAACsB,EAAA,EAAD,CAAYC,QAAQ,MACfb,EAAU,6BAEf,kBAAC4X,GAAA,EAAD,CAAY/C,QAAS4C,GACjB,kBAAC,KAAD,QAGR,kBAACnJ,GAAA,EAAD,CACIvN,UAAWN,EAAQ4W,KACnB1S,SAAU+S,EAAgB/S,SAC1BhD,OAAQ+V,EAAgB/V,OACxBkW,KAAMH,EAAgBG,KACtBC,QAASJ,EAAgBI,QACzBb,SAAS,OACTlS,SAAS,UACTgT,QAAS,kBAAC,GAAD,OAET,kBAAC,GAAD,CAAwBnQ,cAAenH,EAAQ8W,cAE/C,kBAAC,GAAD,CAAuB3P,cAAenH,EAAQ8W,cAC9C,kBAACtS,EAAA,EAAD,CAAW1C,OAAO,OAAOqF,cAAenH,EAAQ8W,cAChD,kBAAC,GAAD,CAAiB3P,cAAenH,EAAQ8W,cACxC,kBAAC7P,GAAA,EAAD,CAAWnF,OAAO,UAAUyV,QAAS,GAAIhQ,WAAS,EAACF,WAAS,MA3B7D,MCpCTmQ,GAA2B,SAAA7Z,GAAK,OAClC,kBAAC,WAAD,KACI,kBAAC,GAAqBA,GACtB,kBAAC,GAAqBA,GACtB,kBAAC8Z,GAAA,EAAqB9Z,KAIxBgB,GAAYC,aAAW,SAAAtB,GAAK,MAAK,CACnCkF,KAAM,CACF7B,QAAS,QAEbgI,KAAM,CACF+O,SAAU,EACVC,WAAYra,EAAMsa,YAAYhP,OAAO,CAAC,OAAQ,CAC1CiP,SAAUva,EAAMsa,YAAYC,SAASC,iBAEzCpV,YAAa,GAEjBqV,eAAgB,CACZrV,YAAa,KAEjBsV,YAAa,CACTnH,OAAQ,SAmEDoH,GA/DI,SAAAta,GACf,IAAMqC,EAAUrB,KACVkM,EAAWrF,aAAc,SAAAlI,GAAK,OAAIA,EAAMmI,YAAYC,KAAK,SACzDwS,EAAUC,eAEVC,EAAcC,uBAAY,WAC5BH,EAAQI,KAAK,cACd,CAACJ,IAEJ,OACI,yBAAK5X,UAAWN,EAAQwC,MACpB,kBAAC,KAAD,CAAO8E,KAAK,iBACP,YAAgB,IAAbiR,EAAY,EAAZA,MACMC,KACFD,IACAA,EAAME,QACc,WAApBF,EAAME,OAAOlY,IAGjB,OACI,kBAAC,WAAD,KACI,kBAACoF,EAAA,EAAD,iBACQhI,EADR,CAEI2C,UAAWmN,KAAWzN,EAAQ2I,KAAT,eAChB3I,EAAQ+X,eAAiBS,IAE9BE,kBAAmB,kBAAC,GAAD,MACnB9S,QAAS,kBAAC,GAAD,MACTI,QAAS,GACTH,KAAM,CAAEC,MAAO,OAAQC,MAAO,UAE7B8E,EACG,kBAAC8N,GAAD,MAEA,kBAAC,GAAD,OAGR,kBAACC,GAAA,EAAD,CACIxY,QAAQ,aACRyY,KAAML,EACNM,OAAO,QACPC,QAASX,EACTpY,QAAS,CACLgZ,MAAOhZ,EAAQgY,cAIlBQ,EACG,kBAAC,GAAD,eACIjY,GAAIgY,EAAME,OAAOlY,GACjByW,SAAUoB,GACNza,IAER,YCzFrB,IACX0L,KAAM4P,KACNtQ,KAAMsP,I,6DCQJtZ,GAAYC,aAAW,SAAAtB,GAAK,MAAK,CACnC+L,KAAM,CAAEqC,SAAUpO,EAAMqF,QAAQ,IAChCuW,cAAe,CACXC,YAAa,GACbxB,WAAY,uDAEhByB,gBAAiB,CACbD,YAAa,EACbxB,WAAY,2DAuDL0B,GAnDC,SAAC,GAQV,IAPHC,EAOE,EAPFA,aACAJ,EAME,EANFA,cACAK,EAKE,EALFA,OACA/Y,EAIE,EAJFA,KACA6I,EAGE,EAHFA,KACAmQ,EAEE,EAFFA,SACAC,EACE,EADFA,MAEMla,EAAYC,cACZQ,EAAUrB,KAEV+a,EACF,kBAACC,GAAA,EAAD,CAAUF,MAAOA,EAAO/E,QAAM,EAACN,QAASkF,GACpC,kBAACM,GAAA,EAAD,CAActZ,UAAWN,EAAQqJ,MAC5BkQ,EAAS,kBAAC,KAAD,MAAiBlQ,GAE/B,kBAAClJ,EAAA,EAAD,CAAYC,QAAQ,UAAUC,MAAM,iBAC/Bd,EAAUiB,KAKvB,OACI,kBAAC,WAAD,KACK0Y,GAAiBK,EACdG,EAEA,kBAACG,GAAA,EAAD,CAAShb,MAAOU,EAAUiB,GAAOsZ,UAAU,SACtCJ,GAGT,kBAACK,GAAA,EAAD,CAAUC,GAAIT,EAAQU,QAAQ,OAAOC,eAAa,GAC9C,kBAAC,KAAD,CACIT,MAAOA,EACP5K,UAAU,MACVsL,gBAAc,EACd7Z,UACI4Y,EACMlZ,EAAQkZ,cACRlZ,EAAQoZ,iBAGjBI,GAEL,kBAACrO,GAAA,EAAD,SCkFDiP,GAxIF,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaZ,EAAoB,EAApBA,MAAO3c,EAAa,EAAbA,OAAa,EACnBwd,mBAAS,CAC/BC,aAAa,EACbC,WAAW,EACXC,eAAe,IAJ0B,mBACtCtQ,EADsC,KAC/BuQ,EAD+B,KAMvCnb,EAAYC,cACZ+F,EAAWC,aAAc,SAAAlI,GAAK,OAAIA,EAAMmI,YAAYC,KAAK,SACzDmT,EAAO8B,aAAY,SAAAxQ,GAAK,OAAIA,EAAM+B,MAAM0O,GAAGC,eACjDF,aAAY,SAAAxQ,GAAK,OAAIA,EAAM7M,SAE3B,IAAMgc,EAAe,SAAAwB,GACjBJ,GAAS,SAAAvQ,GAAK,kCAAUA,GAAV,kBAAkB2Q,GAAQ3Q,EAAM2Q,SAGlD,OACI,6BACK,IACD,kBAACC,EAAA,EAAD,CAAmB3G,QAASiG,EAAanB,cAAeL,IACxD,kBAAC,GAAD,CACIS,aAAc,kBAAMA,EAAa,cACjCC,OAAQpP,EAAMqQ,UACdtB,cAAeL,EACfrY,KAAK,iBACL6I,KAAM,kBAAC,GAAOA,KAAR,MACNoQ,MAAOA,GAEP,kBAACha,EAAA,EAAD,CACIC,GAAE,YACFC,YAAaJ,EAAU,0BAA2B,CAC9C0T,YAAa,IAEjBrT,SAAU,kBAAC,GAAOyJ,KAAR,MACV+K,QAASiG,EACTnB,cAAeL,EACfY,MAAOA,IAEX,kBAACha,EAAA,EAAD,CACIC,GAAE,YACFC,YAAaJ,EAAU,0BAA2B,CAC9C0T,YAAa,IAEjBrT,SAAU,kBAACob,GAAS3R,KAAV,MACV+K,QAASiG,EACTnB,cAAeL,EACfY,MAAOA,KAGf,kBAAC,GAAD,CACIH,aAAc,kBAAMA,EAAa,gBACjCC,OAAQpP,EAAMoQ,YACdrB,cAAeL,EACfrY,KAAK,mBACL6I,KAAM,kBAAC,GAASA,KAAV,MACNoQ,MAAOA,GAEP,kBAACha,EAAA,EAAD,CACIC,GAAE,YACFC,YAAaJ,EAAU,0BAA2B,CAC9C0T,YAAa,IAEjBrT,SAAU,kBAAC,GAASyJ,KAAV,MACV+K,QAASiG,EACTnB,cAAeL,EACfY,MAAOA,IAEX,kBAACha,EAAA,EAAD,CACIC,GAAE,cACFC,YAAaJ,EAAU,4BAA6B,CAChD0T,YAAa,IAEjBrT,SAAU,kBAACqb,GAAW5R,KAAZ,MACV+K,QAASiG,EACTnB,cAAeL,EACfY,MAAOA,KAGf,kBAAC,GAAD,CACIH,aAAc,kBAAMA,EAAa,iBACjCC,OAAQpP,EAAM+Q,aACdhC,cAAeL,EACfrY,KAAK,qBACL6I,KAAM,kBAAC,GAASA,KAAV,MACNoQ,MAAOA,GAEP,kBAACha,EAAA,EAAD,CACIC,GAAE,aACFC,YAAaJ,EAAU,2BAA4B,CAC/C0T,YAAa,IAEjBrT,SAAU,kBAAC,GAASyJ,KAAV,MACV+K,QAASiG,EACTnB,cAAeL,EACfY,MAAOA,IAEX,kBAACha,EAAA,EAAD,CACIC,GAAE,YACFC,YAAaJ,EAAU,0BAA2B,CAC9C0T,YAAa,IAEjBrT,SAAU,kBAAC,IAAD,MACVwU,QAASiG,EACTnB,cAAeL,EACfY,MAAOA,KAGf,kBAACha,EAAA,EAAD,CACIC,GAAE,WACFC,YAAaJ,EAAU,yBAA0B,CAC7C0T,YAAa,IAEjBrT,SAAU,kBAAC,GAAQyJ,KAAT,MACV+K,QAASiG,EACTnB,cAAeL,EACfY,MAAOA,IAEVlU,GACG,kBAAC9F,EAAA,EAAD,CACIC,GAAG,iBACHC,YAAaJ,EAAU,qBACvBK,SAAU,kBAAC,IAAD,MACVwU,QAASiG,EACTnB,cAAeL,EACfY,MAAOA,IAGdlU,GAAYzI,IC9IZqe,GAAY,CACrB7L,QAAS,CACL/R,KAAM,SAID6d,GAAa,CACtB9L,QAAS,CACLyF,UAAW,CACPsG,MAAO,UACP3a,KAAM,UACN4a,KAAM,UACNC,aAAc,SAGtBC,UAAW,CACPC,eAAgB,CACZjZ,KAAM,CACF6M,gBAAiB,sBACjB,aAAc,CACVA,gBAAiB,2BCb/BqM,GAAgB,SAAA/d,GAAK,OAAI,kBAACge,EAAA,EAAD,iBAAahe,EAAb,CAAoByE,KAAM,QAE1C,YAAAzE,GACX,IAAML,EAAQqd,aAAY,SAAAxQ,GAAK,MACX,SAAhBA,EAAM7M,MAAmB6d,GAAYC,MAEzC,OACI,kBAACQ,EAAA,EAAD,iBACQje,EADR,CAEIke,OAAQ5b,EACR6b,QAASJ,GACTZ,KAAMV,GACN9c,MAAOA,M,oGCDbqB,GAAYC,aAAW,SAAAtB,GAAK,MAAK,CACnCoD,KAAM,CACFC,QAAS,OACT8C,cAAe,SACfsY,UAAW,QACXtZ,WAAY,SACZkB,eAAgB,aAChBwL,WAAY,mDACZ6M,iBAAkB,YAClBC,eAAgB,SAEpBzY,KAAM,CACFkI,SAAU,IACV7K,UAAW,OAEf0B,OAAQ,CACJvB,OAAQ,MACRL,QAAS,OACTgD,eAAgB,UAEpB0F,KAAM,CACFgG,gBAAiB/R,EAAMgS,QAAQyF,UAAUrU,MAE7Cwb,KAAM,CACFrb,UAAW,MACXF,QAAS,OACTgD,eAAgB,SAChBtD,MAAO/C,EAAMgS,QAAQC,KAAK,MAE9BqH,KAAM,CACFxN,QAAS,iBAEbrH,MAAO,CACHlB,UAAW,OAEfsb,QAAS,CACL/S,QAAS,qBAIXgT,GAAc,SAAC,GAAD,QAChBC,KAAQC,GADQ,aACW,GADX,GACRA,QAASC,EADD,EACCA,MACLC,EAFI,mBAEhBza,OACGpE,EAHa,wCAKhB,kBAAC,KAAD,eACI4e,SAAUD,IAAWC,GACrBE,WAAYH,GAAWC,GACnBC,EACA7e,EAJR,CAKI0J,WAAS,MAIXqV,GAAQ,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACErC,oBAAS,GADX,mBACrBnG,EADqB,KACZyI,EADY,KAEtBrd,EAAYC,cACZQ,EAAUrB,KACV2U,EAASC,eACT/W,EAAQqgB,eA8Bd,OACI,kBAAC,QAAD,CACIC,SA9Ba,SAAAC,GACjBH,GAAW,GACXpgB,EAAMugB,EAAMJ,EAASxS,MAAQwS,EAASxS,MAAM6S,aAAe,KACtDC,MAAK,kBAAML,GAAW,MACtBM,OAAM,SAAAX,GACHK,GAAW,GACXtJ,EACqB,kBAAViJ,EACDA,EACiB,qBAAVA,GAA0BA,EAAMY,QAEvCZ,EAAMY,QADN,wBAEN,eAmBR5L,SAdS,SAAA6L,GACb,IAAMC,EAAS,GAOf,OANKD,EAAO3gB,WACR4gB,EAAO5gB,SAAW8C,EAAU,2BAE3B6d,EAAOE,WACRD,EAAOC,SAAW/d,EAAU,2BAEzB8d,GAOH7V,OAAQ,gBAAG+V,EAAH,EAAGA,aAAH,OACJ,0BAAMT,SAAUS,EAAcC,YAAU,GACpC,yBAAKld,UAAWN,EAAQU,MACpB,kBAACyD,GAAA,EAAD,CAAM7D,UAAWN,EAAQwD,MACrB,yBAAKlD,UAAWN,EAAQuC,QACpB,kBAACF,GAAA,EAAD,CAAQ/B,UAAWN,EAAQqJ,MACvB,kBAAC,KAAD,QAGR,yBAAK/I,UAAWN,EAAQkc,MAAxB,qBAGA,yBAAK5b,UAAWN,EAAQ4W,MACpB,yBAAKtW,UAAWN,EAAQ+B,OACpB,kBAAC,SAAD,CACImF,WAAS,EACT1G,KAAK,WACLqO,UAAWuN,GACX5a,MAAOjC,EAAU,oBACjBuO,SAAUqG,KAGlB,yBAAK7T,UAAWN,EAAQ+B,OACpB,kBAAC,SAAD,CACIvB,KAAK,WACLqO,UAAWuN,GACX5a,MAAOjC,EAAU,oBACjBhC,KAAK,WACLuQ,SAAUqG,MAItB,kBAACsJ,GAAA,EAAD,CAAand,UAAWN,EAAQmc,SAC5B,kBAAC7J,GAAA,EAAD,CACIlS,QAAQ,YACR7C,KAAK,SACL8C,MAAM,UACNyN,SAAUqG,EACV7T,UAAWN,EAAQ0U,OACnBrN,WAAS,GAER8M,GACG,kBAACuJ,GAAA,EAAD,CACItb,KAAM,GACNub,UAAW,IAGlBpe,EAAU,sBAIvB,kBAACqe,GAAA,EAAD,YAsBTC,GANQ,SAAAlgB,GAAK,OACxB,kBAACmgB,GAAA,EAAD,CAAexgB,MAAOygB,aAAe3C,KACjC,kBAAC,GAAUzd,K,uECxKbgB,GAAYC,YAAW,CACzBof,MAAO,CACHngB,OAAQ,UAIVogB,GAAQ,6CAAyCxZ,SACnC,GAAhByZ,KAAKC,SACL,IACA,EAHU,SAiCCC,GA5BC,WACZ,IAAM7e,EAAYC,cACZQ,EAAUrB,KAChB,OACI,kBAACwF,GAAA,EAAD,KACI,kBAACka,GAAA,EAAD,CAAWnN,MAAO+M,GAAU3d,UAAWN,EAAQge,QAC/C,kBAACzZ,GAAA,EAAD,KACI,kBAACpE,EAAA,EAAD,CAAYC,QAAQ,KAAKyO,UAAU,MAC9BtP,EAAU,gCAEf,kBAACY,EAAA,EAAD,CAAY0O,UAAU,KACjBtP,EAAU,oCAGnB,kBAACke,GAAA,EAAD,CAAazf,MAAO,CAAE2F,eAAgB,aAClC,kBAAC2O,GAAA,EAAD,CAAQgM,KAAK,oCACT,kBAAC,KAAD,CAAUtgB,MAAO,CAAEoU,aAAc,WAChC7S,EAAU,qCAEf,kBAAC+S,GAAA,EAAD,CAAQgM,KAAK,qEACT,kBAAC,KAAD,CAAUtgB,MAAO,CAAEoU,aAAc,WAChC7S,EAAU,yCCxCzBZ,GAAYC,YAAW,CACzB4E,KAAM,CACF+a,MAAO,OACPvd,OAAQ,oBACR6P,OAAQ,IACR2N,aAAc,GAElBnV,KAAM,CACFkV,MAAO,QACP3gB,MAAO,GACPC,OAAQ,GACRuL,QAAS,GACT/I,MAAO,UAaAoe,GATE,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAChB3e,EAAUrB,KAChB,OACI,kBAACwF,GAAA,EAAD,CAAM7D,UAAWN,EAAQwD,KAAMxF,MAAO,CAAEqR,gBAAiBsP,IACrD,kBAACD,EAAD,CAAMpe,UAAWN,EAAQqJ,SCf/B1K,GAAYC,YAAW,CACzB8B,KAAM,CACF5B,KAAM,IACN4D,YAAa,MACb7B,UAAW,IAEf2C,KAAM,CACFvE,SAAU,UACV2I,UAAW,QACXwB,QAAS,GACT2S,UAAW,MAsBJ6C,GAlBQ,SAAC,GAAe,IAAbnU,EAAY,EAAZA,MAChBlL,EAAYC,cACZQ,EAAUrB,KAChB,OACI,yBAAK2B,UAAWN,EAAQU,MACpB,kBAAC,GAAD,CAAUge,KAAMG,KAAYF,QAAQ,YACpC,kBAACxa,GAAA,EAAD,CAAM7D,UAAWN,EAAQwD,MACrB,kBAACrD,EAAA,EAAD,CAAYG,UAAWN,EAAQnB,MAAOwB,MAAM,iBACvCd,EAAU,kCAEf,kBAACY,EAAA,EAAD,CAAYC,QAAQ,KAAKyO,UAAU,MAC9BpE,M,qBCzBf9L,GAAYC,YAAW,CACzB8B,KAAM,CACF5B,KAAM,IACNwH,WAAY,MACZzF,UAAW,IAEf2C,KAAM,CACFvE,SAAU,UACV2I,UAAW,QACXwB,QAAS,GACT2S,UAAW,MAsBJ+C,GAlBK,SAAC,GAAe,IAAbrU,EAAY,EAAZA,MACblL,EAAYC,cACZQ,EAAUrB,KAChB,OACI,yBAAK2B,UAAWN,EAAQU,MACpB,kBAAC,GAAD,CAAUge,KAAMK,KAAkBJ,QAAQ,YAC1C,kBAACxa,GAAA,EAAD,CAAM7D,UAAWN,EAAQwD,MACrB,kBAACrD,EAAA,EAAD,CAAYG,UAAWN,EAAQnB,MAAOwB,MAAM,iBACvCd,EAAU,6BAEf,kBAACY,EAAA,EAAD,CAAYC,QAAQ,KAAKyO,UAAU,MAC9BpE,M,UCrBf9L,GAAYC,aAAW,SAAAtB,GAAK,MAAK,CACnCkF,KAAM,CACF1D,KAAM,GAEVkgB,KAAM,CACFtc,YAAa,MACbrC,MAAO/C,EAAMgS,QAAQ2P,KAAKnK,aA2DnBoK,GAvDO,SAAC,GAAqC,IAAD,IAAlCC,cAAkC,MAAzB,GAAyB,MAArBC,iBAAqB,MAAT,GAAS,EACjDpf,EAAUrB,KACVY,EAAYC,cAClB,OACI,kBAAC2E,GAAA,EAAD,CAAM7D,UAAWN,EAAQwC,MACrB,kBAAC4B,GAAA,EAAD,CAAYvF,MAAOU,EAAU,kCAC7B,kBAAC,KAAD,CAAMka,OAAO,GACR0F,EAAO/d,KAAI,SAAAF,GAAM,OACd,kBAACuT,GAAA,EAAD,CACIlT,IAAKL,EAAOX,GACZmU,QAAM,EACN7F,UAAW5L,KACXvD,GAAE,oBAAewB,EAAOX,KAExB,kBAACoU,GAAA,EAAD,KACKyK,EAAUle,EAAOme,aACd,kBAAChd,GAAA,EAAD,CACIC,IAAG,UACC8c,EAAUle,EAAOme,aAAa9c,OAD/B,iBAKP,kBAACF,GAAA,EAAD,OAGR,kBAACwS,GAAA,EAAD,CACIC,QAAS,IAAIpG,KAAKxN,EAAOyN,MAAMzB,eAC3B,SAEJ6H,UAAWxV,EAAU,4BAA6B,CAC9C0T,YAAa/R,EAAOuG,OAAO5C,OAC3Bya,SAAUpe,EAAOuG,OAAO5C,OACxB0a,cAAeH,EAAUle,EAAOme,aAAjB,UAELD,EAAUle,EAAOme,aACZvc,WAHA,YAKLsc,EAAUle,EAAOme,aACZtc,WAET,OAGd,kBAACyc,GAAA,EAAD,KACI,0BAAMlf,UAAWN,EAAQgf,MACpB9d,EAAOwI,MADZ,aCjDtB/K,GAAYC,aAAW,SAAAtB,GAAK,MAAK,CACnCoD,KAAM,CACF5B,KAAM,IACN4D,YAAa,MACb7B,UAAW,IAEf4e,UAAW,CAAEnL,eAAgB,OAAQjU,MAAO,WAC5CmD,KAAM,CACF4F,QAAS,SACTnK,SAAU,UACV2I,UAAW,SAEf/I,MAAO,CACHuK,QAAS,UAEbqB,MAAO,CACHrB,QAAS,SACT2S,UAAW,IAEfxZ,OAAQ,CACJ4M,WAAY7R,EAAMgS,QAAQH,WAAW5M,QAEzCmd,aAAc,CACVC,UAAW,SACX9hB,OAAQ,MACR8C,QAAS,cACTif,gBAAiB,EACjBC,gBAAiB,gBAInBlD,GAAW,CACbpK,SAAU,UACVuN,MAAO,CAAE7W,OAAQ0J,KAAKF,UAAU,CAAEvJ,OAAQ,cA2D/B6W,GAxDQ,SAAC,GAA0C,IAAD,IAAvCC,eAAuC,MAA7B,GAA6B,MAAzBZ,iBAAyB,MAAb,GAAa,EAATa,EAAS,EAATA,GAC9CjgB,EAAUrB,KACVY,EAAYC,cAClB,OACI,yBAAKc,UAAWN,EAAQU,MACpB,kBAAC,GAAD,CAAUge,KAAMwB,KAAavB,QAAQ,YACrC,kBAACxa,GAAA,EAAD,CAAM7D,UAAWN,EAAQwD,MACrB,kBAACrD,EAAA,EAAD,CAAYG,UAAWN,EAAQnB,MAAOwB,MAAM,iBACvCd,EAAU,kCAEf,kBAACY,EAAA,EAAD,CACIC,QAAQ,KACRyO,UAAU,KACVvO,UAAWN,EAAQyK,OAEnB,kBAAC,KAAD,CAAM/K,GAAIid,GAAUrc,UAAWN,EAAQyf,WAClCQ,IAGT,kBAAC9U,GAAA,EAAD,MACA,kBAAC,KAAD,KACK6U,EAAQ5e,KAAI,SAAAF,GAAM,OACf,kBAACuT,GAAA,EAAD,CACIlT,IAAKL,EAAOX,GACZmU,QAAM,EACN7F,UAAW5L,KACXvD,GAAE,mBAAcwB,EAAOX,IACvBkC,WAAW,cAEX,kBAACkS,GAAA,EAAD,KACKyK,EAAUle,EAAOme,aACd,kBAAChd,GAAA,EAAD,CACIC,IAAG,UACC8c,EAAUle,EAAOme,aAAa9c,OAD/B,eAGHjC,UAAWN,EAAQuC,SAGvB,kBAACF,GAAA,EAAD,OAIR,kBAACwS,GAAA,EAAD,CACIC,QAAS,kBAAC,GAAD,CAAiB5T,OAAQA,IAClC6T,UAAW7T,EAAO0F,QAClBtG,UAAWN,EAAQ0f,aACnB1hB,MAAO,CAAEoU,aAAc,a,qBCpFjDzT,GAAYC,YAAW,CACzB8B,KAAM,CACF5B,KAAM,IACNwH,WAAY,MACZzF,UAAW,IAEf2C,KAAM,CACF4F,QAAS,SACTnK,SAAU,UACV2I,UAAW,SAEf/I,MAAO,CACHuK,QAAS,UAEbqB,MAAO,CACHrB,QAAS,SACT2S,UAAW,MAwEJoE,GApEM,WACjB,IAAMngB,EAAUrB,KACVY,EAAYC,cACZ4gB,EAAYC,mBAAQ,WACtB,IAAM1R,EAAO,IAAID,KAMjB,OALAC,EAAK2R,QAAQ3R,EAAK4R,UAAY,IAC9B5R,EAAK6R,SAAS,GACd7R,EAAK8R,WAAW,GAChB9R,EAAK+R,WAAW,GAChB/R,EAAKgS,gBAAgB,GACdhS,IACR,IAXoB,EAaY7C,aAAkB,CACjDvO,KAAM,UACN+G,SAAU,YACV9G,QAAS,CACLyL,OAAQ,CACJ2X,aAAa,EACbC,eAAgBT,EAAUU,eAE9Bjb,KAAM,CAAEC,MAAO,aAAcC,MAAO,QACpCkM,WAAY,CAAES,KAAM,EAAG1M,QAAS,QAThCyG,EAbe,EAafA,OAAcsU,EAbC,EAaP9c,KAahB,IAAKwI,EAAQ,OAAO,KAEpB,IAAMwT,EAAKc,EAASzU,QAAO,SAAA2T,GAAE,QAAMA,IAAI,GACvC,OACI,yBAAK3f,UAAWN,EAAQU,MACpB,kBAAC,GAAD,CAAUge,KAAMsC,KAAcrC,QAAQ,YACtC,kBAACxa,GAAA,EAAD,CAAM7D,UAAWN,EAAQwD,MACrB,kBAACrD,EAAA,EAAD,CAAYG,UAAWN,EAAQnB,MAAOwB,MAAM,iBACvCd,EAAU,gCAEf,kBAACY,EAAA,EAAD,CACIC,QAAQ,KACRyO,UAAU,KACVvO,UAAWN,EAAQyK,OAElBwV,GAEL,kBAAC9U,GAAA,EAAD,MACA,kBAAC,KAAD,KACK4V,EAAS3f,KAAI,SAAAF,GAAM,OAChB,kBAACuT,GAAA,EAAD,CACIC,QAAM,EACNhV,GAAE,qBAAgBwB,EAAOX,IACzBsO,UAAW5L,KACX1B,IAAKL,EAAOX,IAEZ,kBAACoU,GAAA,EAAD,KACI,kBAACtS,GAAA,EAAD,CAAQC,IAAG,UAAKpB,EAAOqB,OAAZ,kBAEf,kBAACsS,GAAA,EAAD,CACIC,QAAO,UAAK5T,EAAO4B,WAAZ,YACH5B,EAAO6B,qBClFrCtC,GAAS,CACX3B,KAAM,CAAE6B,QAAS,QACjBsgB,WAAY,CAAEtgB,QAAS,OAAQ8C,cAAe,UAC9Cyd,QAAS,CAAEpiB,KAAM,EAAG4D,YAAa,OACjCye,SAAU,CAAEriB,KAAM,EAAGwH,WAAY,OACjC8a,UAAW,CAAEvgB,UAAW,MAAOC,aAAc,QCdpCugB,GDiBK,WAAO,IAAD,EACM/G,mBAAS,IADf,mBACbnQ,EADa,KACNuQ,EADM,KAEdrD,EAAUiK,eACVC,EAAeC,eACf3W,EAAWrF,aAAc,SAAAlI,GAAK,OAAIA,EAAMmI,YAAYC,KAAK,SACzD+b,EAAUjc,aAAc,SAAAlI,GAAK,OAAIA,EAAMmI,YAAYC,KAAK,SAExDgc,EAAcrJ,sBAAW,sBAAC,sCAAAsJ,EAAA,6DACtBvB,EAAY,IAAI1R,MACZ4R,QAAQF,EAAUG,UAAY,IAFZ,SAGSgB,EAAaK,QAAQ,WAAY,CAClE3Y,OAAQ,CAAE4Y,SAAUzB,EAAUU,eAC9Bjb,KAAM,CAAEC,MAAO,OAAQC,MAAO,QAC9BkM,WAAY,CAAES,KAAM,EAAG1M,QAAS,MANR,uBAGd8b,EAHc,EAGpB7d,KAKF8d,EAAeD,EAChB7Y,QAAO,SAAAlD,GAAK,MAAqB,cAAjBA,EAAMmD,UACtBoD,QACG,SAAC0V,EAAOjc,GAQJ,MAPqB,cAAjBA,EAAMmD,SACN8Y,EAAMC,SAAWlc,EAAM2D,MACvBsY,EAAME,eAEW,YAAjBnc,EAAMmD,QACN8Y,EAAMG,cAAc7J,KAAKvS,GAEtBic,IAEX,CACIC,QAAS,EACTC,YAAa,EACbC,cAAe,KAG3BzH,GAAS,SAAAvQ,GAAK,kCACPA,GADO,IAEV8X,QAASF,EAAaE,QAAQ/U,oBAAeC,EAAW,CACpDnP,MAAO,WACP4G,SAAU,MACVsO,sBAAuB,EACvBkP,sBAAuB,IAE3BF,YAAaH,EAAaG,YAC1BC,cAAeJ,EAAaI,mBApCJ,UAsCMZ,EAAac,QAAQ,YAAa,CAChEre,IAAK+d,EAAaI,cAAc/gB,KAAI,SAAA2E,GAAK,OAAIA,EAAMsZ,iBAvC3B,iBAsCdD,EAtCc,EAsCpBnb,KAGRyW,GAAS,SAAAvQ,GAAK,kCACPA,GADO,IAEVmY,uBAAwBlD,EAAU9S,QAAO,SAACC,EAAMgW,GAE5C,OADAhW,EAAKgW,EAAShiB,IAAMgiB,EACbhW,IACR,SA9CqB,4CAgD7B,CAACgV,IAEEiB,EAAenK,sBAAW,sBAAC,sCAAAsJ,EAAA,sEACGJ,EAAaK,QAAQ,UAAW,CAC5D3Y,OAAQ,CAAEC,OAAQ,WAClBrD,KAAM,CAAEC,MAAO,OAAQC,MAAO,QAC9BkM,WAAY,CAAES,KAAM,EAAG1M,QAAS,OAJP,uBACfga,EADe,EACrB/b,KAKFwe,EAAmBzC,EAAQ1T,QAAO,SAAA2T,GAAE,QAAMA,IAAI,GAC9CyC,EAAiB1C,EAAQ2C,MAAM,EAAGzE,KAAK0E,IAAI,GAAI5C,EAAQnb,SAC7D6V,GAAS,SAAAvQ,GAAK,kCAAUA,GAAV,IAAiBuY,iBAAgBD,wBARlB,SASKlB,EAAac,QAAQ,YAAa,CAChEre,IAAK0e,EAAethB,KAAI,SAAAyhB,GAAM,OAAIA,EAAOxD,iBAVhB,gBASfD,EATe,EASrBnb,KAGRyW,GAAS,SAAAvQ,GAAK,kCACPA,GADO,IAEV2Y,wBAAyB1D,EAAU9S,QAAO,SAACC,EAAMgW,GAE7C,OADAhW,EAAKgW,EAAShiB,IAAMgiB,EACbhW,IACR,SAjBsB,4CAmB9B,CAACgV,IAEJwB,qBAAU,WACNrB,IACAc,MACD,CAACnL,IAjFgB,IAoFhB6K,EAOA/X,EAPA+X,YACAO,EAMAtY,EANAsY,iBACAN,EAKAhY,EALAgY,cACAG,EAIAnY,EAJAmY,uBACAI,EAGAvY,EAHAuY,eACAI,EAEA3Y,EAFA2Y,wBACAb,EACA9X,EADA8X,QAEJ,OAAOpX,EACH,6BACI,yBAAK7M,MAAOyC,GAAOwgB,YACf,yBAAKjjB,MAAO,CAAE8C,aAAc,QACxB,kBAAC,GAAD,OAEJ,yBAAK9C,MAAOyC,GAAO3B,MACf,kBAAC,GAAD,CAAgB2L,MAAOwX,IACvB,kBAAC,GAAD,CAAaxX,MAAOyX,KAExB,yBAAKlkB,MAAOyC,GAAO2gB,WACf,kBAAC,GAAD,CACIjC,OAAQgD,EACR/C,UAAWkD,OAK3Bb,EACA,yBAAKzjB,MAAOyC,GAAOwgB,YACf,yBAAKjjB,MAAOyC,GAAO2gB,WACf,kBAAC,GAAD,OAEJ,yBAAKpjB,MAAOyC,GAAO3B,MACf,kBAAC,GAAD,CAAgB2L,MAAOwX,IACvB,kBAAC,GAAD,CAAaxX,MAAOyX,KAExB,yBAAKlkB,MAAOyC,GAAO2gB,WACf,kBAAC,GAAD,CACIjC,OAAQgD,EACR/C,UAAWkD,MAKvB,yBAAKtkB,MAAOyC,GAAO3B,MACf,yBAAKd,MAAOyC,GAAOygB,SACf,yBAAKljB,MAAOyC,GAAO3B,MACf,kBAAC,GAAD,CAAgB2L,MAAOwX,IACvB,kBAAC,GAAD,CAAaxX,MAAOyX,KAExB,yBAAKlkB,MAAOyC,GAAO2gB,WACf,kBAAC,GAAD,OAEJ,yBAAKpjB,MAAOyC,GAAO2gB,WACf,kBAAC,GAAD,CACIjC,OAAQgD,EACR/C,UAAWkD,MAIvB,yBAAKtkB,MAAOyC,GAAO0gB,UACf,yBAAKnjB,MAAOyC,GAAO3B,MACf,kBAAC,GAAD,CACImhB,GAAIwC,EACJzC,QAAS0C,EACTtD,UAAW0D,IAEf,kBAAC,GAAD,U,6BEhKdnkB,GAAYC,YAAW,CACzB4C,MAAO,CAAE5D,MAAO,OAAQ+C,QAAS,gBACjC+T,OAAQ,CAAE1T,OAAQ,SAyDPgiB,GAtDO,WAClB,IAAMzjB,EAAYC,cACZyjB,EAASC,eACTC,EAAYC,eACZpjB,EAAUrB,KACVrB,EAAQqd,aAAY,SAAAxQ,GAAK,OAAIA,EAAM7M,SACnC+lB,EAAWC,cACjB,OACI,kBAACnf,GAAA,EAAD,KACI,kBAACof,GAAA,EAAD,CAAO1kB,MAAOU,EAAU,uBACxB,kBAACgF,GAAA,EAAD,KACI,yBAAKjE,UAAWN,EAAQwB,OACnBjC,EAAU,mBAEf,kBAAC+S,GAAA,EAAD,CACIlS,QAAQ,YACRE,UAAWN,EAAQ0U,OACnBrU,MAAiB,UAAV/C,EAAoB,UAAY,UACvC8W,QAAS,kBAAMiP,EAAShmB,EAAY,YAEnCkC,EAAU,oBAEf,kBAAC+S,GAAA,EAAD,CACIlS,QAAQ,YACRE,UAAWN,EAAQ0U,OACnBrU,MAAiB,SAAV/C,EAAmB,UAAY,UACtC8W,QAAS,kBAAMiP,EAAShmB,EAAY,WAEnCkC,EAAU,oBAGnB,kBAACgF,GAAA,EAAD,KACI,yBAAKjE,UAAWN,EAAQwB,OAAQjC,EAAU,iBAC1C,kBAAC+S,GAAA,EAAD,CACIlS,QAAQ,YACRE,UAAWN,EAAQ0U,OACnBrU,MAAkB,OAAX4iB,EAAkB,UAAY,UACrC7O,QAAS,kBAAM+O,EAAU,QAJ7B,MAQA,kBAAC7Q,GAAA,EAAD,CACIlS,QAAQ,YACRE,UAAWN,EAAQ0U,OACnBrU,MAAkB,OAAX4iB,EAAkB,UAAY,UACrC7O,QAAS,kBAAM+O,EAAU,QAJ7B,SC9CVxkB,GAAYC,YAAW,CACzByK,KAAM,CAAE+I,aAAc,SACtB3D,KAAM,CACF9N,QAAS,cACT8B,WAAY,YA4BL+gB,GAxBgB,SAAC,GAAiB,IAAfniB,EAAc,EAAdA,QACxB9B,EAAYC,cACZQ,EAAUrB,KAChB,OACI,kBAAC2T,GAAA,EAAD,CACIlQ,KAAK,QACL/B,MAAM,UACNwO,UAAW5L,KACXvD,GAAI,CACA6S,SAAU,aACVC,OAAQC,qBAAU,CACdC,KAAM,EACN1M,QAAS,GACTiD,OAAQ0J,KAAKF,UAAU,CAAEtR,OAAQE,OAGzCf,UAAWN,EAAQyO,MAEnB,kBAAC,GAASpF,KAAV,CAAe/I,UAAWN,EAAQqJ,OACjC9J,EAAU,yCCvBjBZ,GAAYC,YAAW,CACzB4D,KAAM,CACF3B,UAAW,MAkCJ4iB,GA9BE,WACb,IAAMlkB,EAAYC,cACZQ,EAAUrB,KAChB,OACI,kBAACwF,GAAA,EAAD,CAAM7D,UAAWN,EAAQwC,MACrB,kBAAC+gB,GAAA,EAAD,CAAO1kB,MAAOU,EAAU,6BACxB,kBAACqN,GAAA,EAAD,CAAOxK,KAAK,SACR,kBAACyK,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACKxN,EAAU,mCAEf,kBAACwN,GAAA,EAAD,QAGR,kBAACC,GAAA,EAAD,KACKvL,GAASL,KAAI,SAAAC,GAAO,OACjB,kBAACyL,GAAA,EAAD,CAAUvL,IAAKF,EAAQd,IACnB,kBAACwM,GAAA,EAAD,KAAYxN,EAAU8B,EAAQb,OAC9B,kBAACuM,GAAA,EAAD,KACI,kBAAC,GAAD,CAAwB1L,QAASA,EAAQd,cClC1D,IACX,kBAAC,KAAD,CAAOmjB,OAAK,EAACpc,KAAK,iBAAiBE,OAAQ,kBAAM,kBAAC,GAAD,SACjD,kBAAC,KAAD,CAAOkc,OAAK,EAACpc,KAAK,YAAYE,OAAQ,kBAAM,kBAAC,GAAD,U,UCLjC,8BACRmc,MADP,IAEIC,IAAK,CACDpR,OAAQ,SACRqR,cAAe,gBACfC,SAAU,WACVxmB,MAAO,CACHkD,KAAM,QACN6a,MAAO,QACPC,KAAM,QAEVyI,UAAW,CACPC,gBAAiB,kBACjBC,WAAY,aACZC,gBAAiB,kBACjBC,cAAe,gBACfC,eAAgB,iBAChBre,MAAO,CACHse,MACI,6EAERC,QAAS,CACLzlB,MAAO,8BACPyR,SACI,8JACJiU,WAAY,mBACZC,YAAa,yBAGrB1J,KAAM,CACF2J,MAAO,QACPC,QAAS,UACTtF,UAAW,cAGnBjT,UAAW,CACPiT,UAAW,CACP5e,KAAM,0BACNmkB,OAAQ,CACJC,SAAU,SACVzjB,OAAQ,WACR0jB,cAAe,gBACfrkB,KAAM,OACNskB,YAAa,eAEjB5a,KAAM,CACF6a,SAAU,WACVve,QAAS,UACT2Y,OAAQ,SACRa,QAAS,UACTgC,MAAO,SAEXtP,KAAM,CACFsS,OAAQ,oBAGhBJ,SAAU,CACNpkB,KAAM,oBACN3B,MAAO,qBACP8lB,OAAQ,CACJld,OAAQ,CACJwd,SAAU,WACVld,UAAW,YACXqF,SAAU,WACV8X,IAAK,MACL1X,SAAU,WACV9D,MAAO,QACPyb,WAAY,cAEhB9F,YAAa,WACbwC,SAAU,eACVuD,SAAU,gBACVC,UAAW,aACXnc,OAAQ,SACRoc,SAAU,aAGlBtK,SAAU,CACNxa,KAAM,wBACNmkB,OAAQ,CACJhW,KAAM,eACN0Q,YAAa,WACbkG,WAAY,QACZ1D,SAAU,eACVuD,SAAU,gBACVC,UAAW,aACX7e,QAAS,YAGjB4F,SAAU,CACN5L,KAAM,sBACNmkB,OAAQ,CACJ/R,YAAa,WACb4S,WAAY,aACZC,WAAY,aACZ5nB,OAAQ,SACRqT,MAAO,QACPjE,MAAO,QACPlF,UAAW,YACX2d,UAAW,YACXvU,MAAO,QACPhB,UAAW,YACXwV,UAAW,YACXC,UAAW,YACXhoB,MAAO,SAEXsM,KAAM,CACFgH,MAAO,QACP2U,QAAS,UACTC,YAAa,cACb9F,QAAS,YAGjB/E,WAAY,CACRza,KAAM,2BACNmkB,OAAQ,CACJvY,SAAU,aAGlB4T,QAAS,CACLxf,KAAM,sBACNulB,OAAQ,gBACRpB,OAAQ,CACJtF,YAAa,WACbkG,WAAY,QACZvZ,WAAY,UACZ6V,SAAU,eACVuD,SAAU,gBACVzW,KAAM,OACN/H,QAAS,UACTwB,OAAQ,UAEZyL,OAAQ,CACJmS,OAAQ,SACR7oB,OAAQ,UAEZ8oB,aAAc,CACVC,iBAAkB,kBAClBC,eAAgB,6BAChBC,iBAAkB,kBAClBC,eAAgB,+BAGxB5kB,SAAU,CACNjB,KAAM,WACNmkB,OAAQ,CACJvF,UAAW,YACX5e,KAAM,QAEVyD,KAAM,CACFqiB,WAAY,aACZC,UAAW,YACXC,aAAc,eACdC,QAAS,UACTC,QAAS,UACTC,SAAU,gBC7JX,YAAAppB,GACX,OAAQA,GACJ,IAAK,UACD,OAAO,qDAAoB0f,MAAK,SAAA2J,GAAO,OAAIA,EAAQC,aACvD,QACI,OAAO,+BAAiB5J,MAAK,SAAA6J,GAAQ,OAAIA,EAASD,aCL/C,YAAAtpB,GACX,OAAQA,GACJ,IAAK,UACD,OAAO,6DAAoB0f,MAAK,SAAA2J,GAAO,OAAIA,EAAQC,aACvD,QACI,OAAO,6DAAiB5J,MAAK,SAAA2J,GAAO,OAAIA,EAAQC,eCkBtDE,GAAeC,aAAqB,SAAA/D,GACtC,MAAe,OAAXA,EACO,+BAAoBhG,MAAK,SAAAgK,GAAQ,OAAIA,EAASJ,WAIlDlD,KACR,MA2DYuD,G,4MAxDX/c,MAAQ,CAAEoX,aAAc,M,8FAExB,4BAAAI,EAAA,sEAC8BwF,GACtBC,+DAAYC,yBAFpB,cACIzc,KAAK0c,aADT,gBAK+BC,GACvBH,+DAAYC,yBANpB,OAKU9F,EALV,OASI3W,KAAK8P,SAAS,CAAE6G,iBATpB,gD,wFAYA,WACI3W,KAAK0c,iB,oBAGT,WAAU,IACE/F,EAAiB3W,KAAKT,MAAtBoX,aAER,OAAKA,EASD,kBAACiG,EAAA,EAAD,CACI3oB,MAAM,GACN0iB,aAAcA,EACdkG,eAAgB,CAAEnqB,MAAOoqB,GACzBC,aAAcA,GACdC,aAAcA,EACd7D,UAAW1C,GACXwG,UAAWnL,GACXoL,OAAQlM,GACRmL,aAAcA,IAEd,kBAACgB,EAAA,EAAD,eAAUvnB,KAAK,aAAgBugB,KAC/B,kBAACgH,EAAA,EAAD,eACIvnB,KAAK,YACD2e,GAFR,CAGIxa,QAAS,CAAEnD,MAAO,aAEtB,kBAACumB,EAAA,EAAD,eAAUvnB,KAAK,YAAewa,KAC9B,kBAAC+M,EAAA,EAAD,eAAUvnB,KAAK,YAAe4L,KAC9B,kBAAC2b,EAAA,EAAD,eAAUvnB,KAAK,cAAiBya,KAChC,kBAAC8M,EAAA,EAAD,eAAUvnB,KAAK,WAAcwf,MA3B7B,yBAAK1f,UAAU,oBACX,yBAAKA,UAAU,UAAf,mB,GAzBF+K,a,OC1BlB2c,IAASxgB,OAAO,kBAAC,GAAD,MAASygB,SAASC,eAAe,W","file":"static/js/main.8e1bb194.chunk.js","sourcesContent":["export default {\r\n    login: ({ username }) => {\r\n        localStorage.setItem('username', username);\r\n        // accept all username/password combinations\r\n        return Promise.resolve();\r\n    },\r\n    logout: () => {\r\n        localStorage.removeItem('username');\r\n        return Promise.resolve();\r\n    },\r\n    checkError: () => Promise.resolve(),\r\n    checkAuth: () =>\r\n        localStorage.getItem('username') ? Promise.resolve() : Promise.reject(),\r\n    getPermissions: () => Promise.reject('Unknown method'),\r\n};\r\n","export const CHANGE_THEME = 'CHANGE_THEME';\r\n\r\nexport const changeTheme = theme => ({\r\n    type: CHANGE_THEME,\r\n    payload: theme,\r\n});\r\n","import { CHANGE_THEME } from './configuration/actions';\r\n\r\nexport default (previousState = 'light', { type, payload }) => {\r\n    if (type === CHANGE_THEME) {\r\n        return payload;\r\n    }\r\n    return previousState;\r\n};\r\n","import React from 'react';\r\n\r\nconst Logo = props => (\r\n    <svg width={234.532} height={20.475} viewBox=\"0 0 62.053 5.417\" {...props}>\r\n        <g\r\n            aria-label=\"~Posters Galore~\"\r\n            style={{\r\n                lineHeight: 1.25,\r\n            }}\r\n            fontWeight={400}\r\n            fontSize={7.056}\r\n            fontFamily=\"Permanent Marker\"\r\n            letterSpacing={0}\r\n            wordSpacing={0}\r\n            strokeWidth={0.265}\r\n            fill=\"#fff\"\r\n        >\r\n            <path\r\n                d=\"M.227 3.659Q.124 3.652.062 3.61 0 3.562 0 3.486q0-.068.062-.124.041-.103.083-.165L.24 3.06q.07-.096.138-.193.069-.096.152-.193.04-.034.068-.048.076-.055.152-.103.076-.055.172-.09.173-.062.338-.062.165-.007.282 0 .097.007.18.02.09.008.151.022.103.048.165.09.07.04.131.096.076.04.118.09.048.04.082.089.02.027.083.09.062.061.151.061.083 0 .138-.075.062-.076.124-.131.055-.145.18-.22.055-.028.089-.035l.076-.014q.02-.007.041-.007l.035-.014.075-.007h.09q.117-.034.207-.034.103.007.165.055.062.041.062.117 0 .076-.062.124-.041.11-.09.172-.04.062-.09.131l-.137.193q-.069.097-.158.193-.028.035-.07.048-.068.056-.144.11-.076.049-.172.083-.18.062-.345.07-.158 0-.275-.008l-.186-.013q-.083-.014-.152-.028-.096-.048-.165-.09-.07-.04-.131-.09-.076-.047-.117-.089-.042-.048-.076-.096-.02-.028-.09-.09-.069-.069-.144-.062-.076.007-.145.083-.062.069-.124.124-.041.138-.172.22-.056.028-.097.035l-.069.014-.041.013q-.02 0-.035.007l-.075.007h-.09q-.117.035-.207.035zM4.417 3.225q.007-.028.027-.021.028 0 .048-.007-.055-.055-.068-.145-.014-.096-.07-.158.014-.035.021-.069.014-.034.062-.028-.02-.151.007-.282.028-.131.083-.248.062-.117.138-.228.082-.117.158-.234.062-.014.076.014.014.02.048-.014.11-.076.152-.165.041-.097.041-.207.062-.179.138-.351.083-.18.186-.331.103-.152.22-.262.118-.117.255-.179.097-.083.242-.152.151-.068.316-.103.173-.041.352-.041.179-.007.33.034.035.014.042-.014Q7.228 0 7.255 0q.345.041.614.138.275.096.468.269.131.206.248.447.117.235.18.496.068.255.061.531-.007.276-.117.551-.241.303-.585.49-.345.179-.745.303-.392.117-.82.193-.42.075-.82.165.007.186 0 .4-.006.206-.048.42-.034.207-.11.406-.069.2-.193.372-.138-.006-.29.028-.144.034-.261.069l-.11-.069q-.049-.028-.124-.034.02-.083-.042-.173-.055-.09-.117-.172-.055-.09-.076-.172-.013-.09.083-.159-.055-.048-.055-.151.028.027.069.027-.014-.124.027-.296.049-.172.076-.338.035-.172.014-.31-.02-.144-.165-.206zm1.791-1.613l-.048.138q-.014.055-.035.103-.02.049-.048.097l-.048.11q.014.042.055.062.041.02.055.062.097-.048.193-.069.097-.027.193-.041.096-.014.193-.035.096-.02.2-.068.103-.049.213-.076l.228-.07q.11-.034.213-.075.104-.048.18-.124-.097-.09-.29-.158-.193-.07-.42-.083-.22-.02-.448.028-.22.048-.386.2zM12.506 3.1q-.007.083.013.16.021.075.049.15.034.07.062.145.027.076.041.152.014.096 0 .214-.014.11-.048.22-.035.103-.09.193-.055.083-.13.124-.097.124-.235.193-.138.069-.255.165-.076.048-.172.07l-.186.04q-.076.042-.18.09l-.213.083q-.11.034-.22.055-.11.014-.193.007-.207.076-.407.096-.193.028-.455-.027-.248.034-.461-.021-.207-.055-.372-.172-.159-.124-.283-.29-.117-.172-.193-.358-.055-.393.028-.71.083-.323.234-.592.159-.276.358-.503.2-.234.386-.455.042.014.062 0 .028-.02.048-.048.021-.035.042-.062.027-.028.062-.035.048-.103.138-.151.096-.055.151-.152.062-.014.104-.041.04-.028.075-.062.042-.035.083-.062.041-.035.097-.048v-.076q.124-.055.179-.124l.144-.18q.062-.006.097-.006.041 0 .117-.014.055-.096.096-.145.049-.048.138-.103.083.041.18.055.103.014.178.09.007.069.042.11.034.034.076.069.041.027.075.062.042.034.056.096.027.007.034-.007.014-.013.041-.007.021.097.049.131.027.028.055.117-.035.07-.055.145-.014.07-.083.104-.007.048.027.055.035 0 .042.034.007.062-.02.09.164.268.295.572.131.296.297.565zm-.862.655q.028-.076.07-.124.048-.048.054-.145-.034-.055-.04-.082-.008-.035-.008-.104-.151-.213-.262-.454-.11-.248-.248-.462-.013.028-.048.055-.034.028-.076-.014-.013.055-.048.083-.034.02-.076.02-.041-.006-.09-.02-.04-.02-.075-.048-.2.158-.4.31-.2.151-.358.351-.028.014-.034.014-.007-.007-.042.007-.055.13-.138.241-.075.103-.151.214-.076.11-.131.234-.055.124-.062.29.117.096.276.116.158.021.323.007.173-.013.331-.041.165-.034.303-.034.29-.07.496-.18.207-.117.434-.234zM12.898 2.067q.049-.145.152-.248.11-.103.234-.172.131-.076.269-.124t.262-.083q.275-.117.585-.22.317-.11.641-.193.331-.083.676-.104.344-.027.723.083.02.069.062.13l.083.125q.048.062.082.124.035.055.042.117.069.062.11.138.041.069.014.186-.07.055-.138.103-.062.042-.138.076-.255-.062-.517-.041-.261.02-.468.034-.062-.062-.152-.062-.082 0-.179.028l-.186.055q-.09.027-.172.014-.07.055-.172.075-.097.014-.214.028-.007.034.014.048.02.007.007.042.041.048.103.068l.138.042q.076.02.13.055.056.027.076.096.104 0 .18.049.075.048.124.117.048.069.069.151.027.076.027.138.02.055.048.048.028-.007.062.028.021.09.104.186.082.09.13.2.014.172.021.31.007.13-.048.269-.103.254-.29.454-.178.2-.413.359-.227.151-.489.261-.262.11-.51.186-.027-.006-.055 0-.027.007-.014-.034-.055.048-.124.062-.062.014-.138.007-.075 0-.158-.007-.076-.007-.145.007-.048-.048-.09-.097-.034-.04-.054-.11-.035 0-.035-.034.007-.035-.02-.035.04-.069.034-.076 0-.013-.02-.02l-.028-.014q-.014-.014-.007-.034.027-.056.02-.124l-.013-.152q-.007-.076.007-.145.02-.069.103-.11.234.028.44-.014.215-.048.4-.13.187-.083.352-.18.172-.096.338-.172.02-.062.055-.103.041-.042.082-.076.042-.035.076-.076.035-.041.048-.103.007-.049-.027-.055-.028-.014-.028-.056l-.076-.02q-.13-.076-.296-.124-.165-.055-.282-.117-.076.04-.145.02-.062-.02-.165-.041-.235-.014-.455-.048-.214-.035-.414-.124-.013-.035-.034-.062-.02-.028-.076-.014-.041-.055-.082-.103-.042-.056-.076-.118.014-.082.02-.137.007-.062-.04-.118.027-.09.04-.144.014-.055 0-.145z\"\r\n                style={{\r\n                    InkscapeFontSpecification: \"'Permanent Marker'\",\r\n                }}\r\n            />\r\n            <path\r\n                d=\"M19.988 1.853q-.172 0-.372.028-.2.02-.392.048-.138.02-.27.035-.123.013-.226.02-.049.152-.097.27-.048.116-.103.226-.055.118-.104.242-.041.117-.082.255-.07.11-.117.206-.042.09-.07.207-.082.103-.123.22-.042.11-.062.193l-.028.083q-.041.041-.048.069-.007.02-.035.041-.007.076-.048.152-.014.034-.02.069-.007.027-.007.041 0 .069-.035.09.007.034 0 .075l-.014.07q-.02.082-.013.13l.034.049q.02.02.028.055.04.027.062.034.027.02.082.048l.062.07q.035.199-.062.316-.103.131-.351.131h-.083q-.034-.034-.041-.055l-.09-.034q-.034-.014-.062-.056-.09-.04-.144-.068l-.062-.035v-.083q-.049-.062-.076-.137-.02-.076-.035-.152-.013-.062-.034-.117-.014-.055-.041-.097-.014-.4.075-.675.09-.275.186-.53l.11-.276q.056-.145.097-.296l.062-.07.076-.178.069-.152q.02-.048.034-.09l.035-.082q-.042 0-.076.007-.035 0-.069.007l-.076.013h-.069q-.048 0-.069-.006-.075.034-.165.034H17.019q-.014-.007-.028-.007-.069 0-.11.02h-.228q-.013 0-.034.008h-.034q-.049 0-.104-.007-.055-.014-.117-.048-.082-.11-.11-.118l-.062-.082q-.007-.042-.02-.076-.014-.041-.028-.09-.028-.069-.055-.144-.021-.083-.021-.193.007-.055.028-.083l.034-.048.02-.104.09.007h.193q.22 0 .448-.013l.469-.042.275-.027.296-.028q.028-.062.056-.117l.068-.034q.124-.007.173.034.055.034.09.069l.302-.028q.159-.02.317-.048.235-.034.469-.062.241-.027.462-.027.096 0 .186.006.09.007.165.021l.069.048q.02.042.055.076l.083.069q.082.076.165.18.083.103.062.302-.055.083-.083.097l-.062.082-.069-.006q-.04 0-.075.013-.035.007-.07.021l-.054.028-.062.013h-.104q-.034-.007-.076-.007z\"\r\n                style={{\r\n                    InkscapeFontSpecification: \"'Permanent Marker'\",\r\n                }}\r\n            />\r\n            <path\r\n                d=\"M23.303 1.288q.007.049 0 .076 0 .02-.007.042v.048q0 .02.014.069-.145.234-.338.324-.186.082-.407.124-.22.034-.454.075-.228.042-.455.18-.09-.035-.166 0-.068.034-.206.02-.042.042-.104.062-.062.014-.124.035.028.062.021.13 0 .063.02.104.242.02.531-.007.297-.028.58-.034.006.034-.008.048-.014.007-.007.034.049.035.097.09l.096.096q.048.049.097.083.055.028.124.02.027.056.034.125.014.062-.014.13-.11.076-.22.159-.11.076-.234.138-.118.062-.255.103-.131.035-.297.028h-.055q-.014 0-.041-.02-.055.034-.159.02-.096-.014-.151.02-.076-.034-.186-.027-.104 0-.186-.028-.11.145-.2.31-.09.166-.159.352.235.034.386.027.159-.007.297-.02.137-.021.282-.035.145-.02.365-.014.138-.075.324-.096.193-.028.352-.083.055.021.096.076.041.048.076.097.041.04.082.075.042.035.104.028.027.027.034.069.014.034.02.069.008.034.022.062.02.02.062.013-.104.228-.242.352-.13.117-.303.179-.172.062-.386.096-.206.035-.461.083-.062.014-.104-.007-.04-.014-.096-.014-.158.035-.379.062-.22.028-.448.021-.227-.007-.434-.062-.207-.048-.338-.179-.055-.048-.075-.11-.014-.07-.09-.104-.007-.09-.027-.2l-.042-.227q-.02-.124-.034-.24-.007-.118.014-.215.02-.103.082-.186.07-.082.048-.179.035-.007.042-.034.007-.035.055-.028.041-.124.09-.234.048-.11.096-.214.055-.103.103-.206.055-.11.104-.241-.097-.09-.145-.193-.041-.11-.062-.214-.02-.11-.035-.22-.013-.118-.048-.235.07-.103.166-.165.103-.069.22-.11.117-.042.255-.07.138-.027.29-.061.275-.09.489-.138.22-.048.427-.076.213-.034.44-.062.228-.027.518-.083.062.062.117.062.027-.062.062-.034.041.02.034-.041.07.117.172.2.11.075.242.13zM24.185 4.451q-.076.276-.138.42-.055.138-.172.29-.09-.014-.125.02-.034.035-.075.062-.062.014-.09 0-.027-.013-.048-.034-.02-.014-.055-.034-.028-.014-.09-.014-.014-.055-.034-.104-.014-.048-.09-.034.014-.055.007-.09-.007-.041-.02-.069l-.014-.062q-.007-.034.007-.082-.035 0-.056-.048-.02-.049-.048-.097.02-.124.042-.234.02-.11.048-.207.034-.096.055-.193.02-.096-.02-.2.027.021.04-.007.014-.034.021-.082.007-.055.007-.104 0-.055-.007-.09.07-.178.11-.364.049-.193.083-.38.041-.185.083-.364.041-.18.11-.331.076-.014.165.02.097.028.118.076.179-.138.317-.33.137-.2.282-.386.145-.186.317-.331.18-.145.448-.172.138.103.303.213.172.104.282.276.056.027.09.062.041.028.097.062v.083q.082.075.13.179.056.096.097.213l.083.228q.04.11.096.213-.014.035-.014.062 0 .021.007.049.014.027.02.055.008.027 0 .076-.02.303-.199.489-.172.186-.42.31-.248.117-.53.2-.283.082-.51.179 0 .027.02.027.028 0 .02.035.166.103.262.165.097.062.18.103.09.042.186.076.103.028.282.07.18.04.276.068.103.02.186.041l.165.028.248.02q.062.063.104.152.048.083.062.172.013.083.006.166-.006.076-.048.124.007.02.028.02.027-.006.055 0-.041.028-.069.07l-.055.082q-.028.041-.062.069-.035.034-.097.041-.213.083-.537.007-.324-.069-.82-.262-.248-.096-.406-.165-.152-.076-.27-.145-.11-.075-.206-.158l-.22-.2zm.985-2.363q-.076.11-.172.2-.09.09-.18.186-.082.09-.151.206-.069.11-.097.262.242-.027.503-.13.262-.111.496-.208-.027-.213-.151-.344-.117-.13-.248-.172zM27.01 2.067q.048-.145.151-.248.11-.103.234-.172.131-.076.27-.124.137-.048.26-.083.277-.117.587-.22.317-.11.64-.193.331-.083.676-.104.344-.027.723.083.02.069.062.13l.083.125q.048.062.082.124.035.055.042.117.069.062.11.138.041.069.014.186-.07.055-.138.103-.062.042-.138.076-.255-.062-.517-.041-.261.02-.468.034-.062-.062-.152-.062-.082 0-.179.028l-.186.055q-.09.027-.172.014-.069.055-.172.075-.097.014-.214.028-.007.034.014.048.02.007.007.042.041.048.103.068l.138.042q.076.02.13.055.056.027.077.096.103 0 .179.049.076.048.124.117t.069.151q.027.076.027.138.02.055.048.048.028-.007.062.028.021.09.104.186.083.09.13.2.015.172.021.31.007.13-.048.269-.103.254-.29.454-.178.2-.413.359-.227.151-.489.261-.262.11-.51.186-.027-.006-.055 0-.027.007-.014-.034-.055.048-.124.062-.062.014-.137.007-.076 0-.159-.007-.076-.007-.145.007-.048-.048-.09-.097-.034-.04-.054-.11-.035 0-.035-.034.007-.035-.02-.035.04-.069.034-.076 0-.013-.02-.02l-.028-.014q-.014-.014-.007-.034.027-.056.02-.124l-.013-.152q-.007-.076.007-.145.02-.069.103-.11.234.028.441-.014.214-.048.4-.13.186-.083.351-.18.172-.096.338-.172.02-.062.055-.103.041-.042.082-.076.042-.035.076-.076.035-.041.048-.103.007-.049-.027-.055-.028-.014-.028-.056l-.075-.02q-.131-.076-.297-.124-.165-.055-.282-.117-.076.04-.145.02-.062-.02-.165-.041-.235-.014-.455-.048-.214-.035-.413-.124-.014-.035-.035-.062-.02-.028-.076-.014-.041-.055-.082-.103-.042-.056-.076-.118.014-.082.02-.137.007-.062-.04-.118.027-.09.04-.144.014-.055 0-.145zM32.797 3.535q0-.076.021-.138.02-.062.007-.159.213-.454.482-.84.276-.393.655-.69.062-.047.096-.096.042-.055.076-.103.041-.048.09-.083.048-.041.124-.055.172-.2.413-.365.241-.165.503-.317t.524-.31q.268-.159.482-.345.076.049.117.035.048-.02.097-.007.062.13.158.186.103.048.207.103.11.049.2.124.096.07.144.193-.048 0-.048.035.007.034.02.076.014.04.014.075 0 .035-.062.035 0 .048.049.048.048 0 .048.048 0 .042-.02.07-.015.02 0 .075-.166.11-.373.214l-.427.206q-.22.11-.455.241-.227.124-.455.29-.227.165-.461.365-.228.2-.441.427-.214.22-.4.462-.186.234-.317.461.014.035.035.062.027.028.041.063.262.013.49 0 .227-.021.454.027.028-.02.034-.055.007-.035.042-.048.468-.049.875-.152.406-.11.827-.22-.124-.049-.22-.076-.042-.041 0-.069.047-.034.075-.069-.11-.062-.186-.165-.069-.104-.083-.269.049-.041.049-.096 0-.056-.049-.09-.034-.014-.041 0l-.014.027q0 .014-.014.028-.007.014-.034 0 .007-.076.034-.124.028-.048.042-.117l.572-.38q.09.07.22.146.131.075.276.151.144.076.296.159.152.075.282.151.125.055.214.138.09.076.172.165l.166.166q.082.082.2.138-.014.11.013.179.028.069.014.165-.13.234-.317.4-.186.158-.42.275-.228.117-.49.2-.261.076-.537.152-.275.069-.558.151-.276.076-.544.18-.117 0-.2.006-.083.007-.159.021l-.151.028q-.076.013-.165.02-.035-.007-.049.014-.007.02-.027.035-.138.02-.248.02h-.186q-.097 0-.2.028-.104.027-.193.02-.62-.027-.972-.44-.351-.414-.385-1.137.006-.035-.014-.042-.02-.014-.035-.027z\"\r\n                style={{\r\n                    InkscapeFontSpecification: \"'Permanent Marker'\",\r\n                }}\r\n            />\r\n            <path\r\n                d=\"M42.01 4.589q-.042.117-.125.241-.075.117-.186.214-.103.09-.234.151-.13.062-.275.07-.09-.022-.124-.05-.028-.02-.062-.04-.021-.014-.042-.021-.014-.014-.027-.02l-.083-.035.028-.09q.013-.055-.007-.083-.021-.034-.083-.09l-.041-.04q-.021-.021-.035-.042l-.117-.13.186-.049q.172-.048.227-.124.062-.076.049-.255-.138-.027-.235-.007-.09.02-.186.048-.124.035-.255.062-.124.021-.275.021h-.104l-.103-.014-.069-.013q-.014-.076-.027-.083l-.028-.028q-.034-.034-.076-.09-.034-.061-.013-.15-.035-.063-.042-.125-.041.083-.062.172l-.027.07-.07.013q-.013.007-.02.035-.007.02-.007.034l-.034.117-.028.028q-.014.007-.027.02-.014.062-.035.124-.02.062-.041.118-.035.09-.062.179-.02.082-.014.165l-.028.076q-.034.041-.075.069l-.083.041q-.014.014-.041.028l-.035.013-.02.076-.083.014-.11.02q-.028.008-.07.008l-.068-.007-.117-.097q-.042-.041-.097-.076-.062-.082-.069-.124l-.014-.075q-.013-.042-.013-.07-.007-.027-.021-.04l-.09-.083.076-.062.007-.117q.138-.352.29-.676l.323-.661q.056-.11.104-.22l.11-.221q-.007-.02-.007-.048t.014-.062q.076-.118.124-.207l.096-.193q.055-.117.11-.227.063-.11.152-.228l.11-.048.049-.014q.027-.014.062-.014l.103.014q.193-.09.338-.248.144-.165.296-.393l.069-.096.09.055q.034.02.096.041.062.014.13.035.125.027.235.062.11.034.18.103.04.11.047.166.007.055.021.11.02.117.035.234.02.117.027.262.035.117.055.234.028.11.048.228l.07.323q.034.152.089.29.055 0 .069.007.034-.014.069-.021l.09-.014.075-.007.028.07q.007.034.069.068.09.007.13.042.042.027.076.062.028.027.055.04l.104.042-.055.104q-.07.124-.2.24-.124.111-.283.187.007.041.007.082.007.035.02.076.022.117.035.241.014.124 0 .255zm-1.992-1.192q.207-.014.372-.028.173-.02.38-.062-.049-.206-.104-.427-.055-.227-.117-.448l-.042.07q-.137.144-.268.323-.124.18-.214.338l-.083.124q-.04.062-.075.124.041-.007.075-.007.042 0 .076-.007zM44.29 5.092q-.193.062-.42.124-.228.062-.455.062-.344 0-.544-.172-.035-.076-.062-.104l-.042-.055q-.013-.034-.02-.09-.083-.096-.131-.22-.048-.13-.07-.262-.013-.138-.006-.275.014-.138.048-.262.014-.028.014-.055l.014-.062q.027-.11.055-.214.034-.103.09-.179-.028-.062 0-.138.027-.076.061-.138.097-.261.159-.44.069-.187.138-.366.117-.31.22-.613.104-.303.186-.655.055-.034.083-.048.041-.014.069-.02.124.062.29.124.165.055.275.055.055.034.069.055l.027.027q.076.09.131.186.055.09.035.242-.042.062-.062.062-.035.137-.076.234-.035.096-.076.193-.048.103-.09.206-.04.104-.068.255-.028.035-.042.062-.007.028-.02.062-.014.035-.035.076-.014.035-.048.062-.02.18-.069.29-.041.11-.09.22-.082.2-.151.4-.062.2-.076.454.035-.013.062-.013h.062q.062 0 .145.02.207-.11.448-.13.248-.021.489-.028H45q.096 0 .179-.014.062.035.076.041h.055q.048 0 .083.007.082.076.158.11.076.035.159.063.075.027.144.062.076.027.145.082l.048.297q.048.062.041.082 0 .055-.027.083l.014.076q-.104.02-.145.048-.034.027-.069.062-.055.007-.083.007h-.04q-.097 0-.235.034-.186-.062-.386-.062-.076 0-.159.007l-.165.014q-.083.014-.172.02-.083.008-.172.008zM50.25 3.1q-.007.083.014.16.02.075.048.15.035.07.062.145.028.076.041.152.014.096 0 .214-.013.11-.048.22-.034.103-.09.193-.054.083-.13.124-.097.124-.235.193-.137.069-.254.165-.076.048-.173.07l-.186.04q-.076.042-.179.09l-.213.083q-.11.034-.221.055-.11.014-.193.007-.207.076-.406.096-.193.028-.455-.027-.248.034-.462-.021-.207-.055-.372-.172-.158-.124-.282-.29-.118-.172-.193-.358-.055-.393.027-.71.083-.323.235-.592.158-.276.358-.503.2-.234.386-.455.041.014.062 0 .027-.02.048-.048.02-.035.041-.062.028-.028.062-.035.048-.103.138-.151.097-.055.152-.152.062-.014.103-.041.041-.028.076-.062.041-.035.082-.062.042-.035.097-.048v-.076q.124-.055.18-.124l.144-.18q.062-.006.096-.006.042 0 .117-.014.056-.096.097-.145.048-.048.138-.103.082.041.179.055.103.014.179.09.007.069.041.11.035.034.076.069.041.027.076.062.041.034.055.096.028.007.034-.007.014-.013.042-.007.02.097.048.131.028.028.055.117-.034.07-.055.145-.014.07-.083.104-.007.048.028.055.034 0 .041.034.007.062-.02.09.165.268.296.572.13.296.296.565zm-.861.655q.027-.076.069-.124.048-.048.055-.145-.035-.055-.041-.082-.007-.035-.007-.104-.152-.213-.262-.454-.11-.248-.248-.462-.014.028-.048.055-.035.028-.076-.014-.014.055-.048.083-.035.02-.076.02-.042-.006-.09-.02-.041-.02-.076-.048-.2.158-.4.31-.2.151-.358.351-.027.014-.034.014-.007-.007-.041.007-.055.13-.138.241-.076.103-.152.214-.076.11-.13.234-.056.124-.063.29.118.096.276.116.158.021.324.007.172-.013.33-.041.166-.034.304-.034.29-.07.496-.18.207-.117.434-.234zM51.78 4.451q-.076.276-.138.42-.055.138-.172.29-.09-.014-.124.02-.035.035-.076.062-.062.014-.09 0-.027-.013-.048-.034-.02-.014-.055-.034-.028-.014-.09-.014-.013-.055-.034-.104-.014-.048-.09-.034.014-.055.007-.09-.007-.041-.02-.069l-.014-.062q-.007-.034.007-.082-.034 0-.055-.048-.02-.049-.048-.097.02-.124.04-.234.022-.11.05-.207.034-.096.054-.193.02-.096-.02-.2.027.021.04-.007.015-.034.022-.082.007-.055.007-.104 0-.055-.007-.09.068-.178.11-.364.048-.193.082-.38l.083-.364q.041-.18.11-.331.076-.014.166.02.096.028.117.076.179-.138.317-.33.138-.2.282-.386.145-.186.317-.331.18-.145.448-.172.138.103.303.213.173.104.283.276.055.027.09.062.04.028.096.062v.083q.083.075.13.179.056.096.097.213.042.11.083.228.041.11.097.213-.014.035-.014.062 0 .021.007.049.014.027.02.055.007.027 0 .076-.02.303-.2.489-.172.186-.42.31-.248.117-.53.2-.283.082-.51.179 0 .027.02.027.028 0 .021.035.166.103.262.165.097.062.18.103.089.042.185.076.104.028.283.07.179.04.275.068.104.02.186.041l.166.028.248.02q.062.063.103.152.048.083.062.172.014.083.007.166-.007.076-.048.124.007.02.028.02.027-.006.055 0-.042.028-.07.07l-.054.082q-.028.041-.062.069-.035.034-.097.041-.213.083-.537.007-.324-.069-.82-.262-.248-.096-.407-.165-.151-.076-.268-.145-.11-.075-.207-.158l-.22-.2zm.985-2.363q-.076.11-.172.2-.09.09-.18.186-.082.09-.15.206-.07.11-.097.262.24-.027.503-.13.261-.111.496-.208-.028-.213-.152-.344-.117-.13-.248-.172zM58.332 1.288q.007.049 0 .076 0 .02-.007.042v.048q0 .02.014.069-.145.234-.337.324-.186.082-.407.124-.22.034-.455.075-.227.042-.454.18-.09-.035-.166 0-.069.034-.207.02-.04.042-.103.062-.062.014-.124.035.028.062.02.13 0 .063.021.104.242.02.531-.007.296-.028.579-.034.007.034-.007.048-.014.007-.007.034.048.035.096.09l.097.096q.048.049.096.083.055.028.124.02.028.056.035.125.014.062-.014.13-.11.076-.22.159-.11.076-.235.138-.117.062-.255.103-.13.035-.296.028h-.055q-.014 0-.041-.02-.056.034-.159.02-.096-.014-.152.02-.075-.034-.186-.027-.103 0-.186-.028-.11.145-.2.31-.089.166-.158.352.234.034.386.027.158-.007.296-.02.138-.021.283-.035.144-.02.365-.014.138-.075.324-.096.193-.028.351-.083.055.021.097.076.041.048.075.097.042.04.083.075.041.035.104.028.027.027.034.069.014.034.02.069.008.034.021.062.021.02.062.013-.103.228-.24.352-.132.117-.304.179-.172.062-.386.096-.206.035-.461.083-.062.014-.104-.007-.041-.014-.096-.014-.159.035-.38.062-.22.028-.447.021-.227-.007-.434-.062-.207-.048-.338-.179-.055-.048-.076-.11-.013-.07-.09-.104-.006-.09-.027-.2l-.041-.227q-.02-.124-.035-.24-.007-.118.014-.215.02-.103.083-.186.069-.082.048-.179.035-.007.041-.034.007-.035.056-.028.04-.124.09-.234.047-.11.096-.214.055-.103.103-.206.055-.11.103-.241-.096-.09-.144-.193-.042-.11-.062-.214-.021-.11-.035-.22-.014-.118-.048-.235.069-.103.165-.165.104-.069.22-.11.118-.042.256-.07.138-.027.29-.061.275-.09.488-.138.22-.048.427-.076.214-.034.441-.062.228-.027.517-.083.062.062.117.062.028-.062.062-.034.042.02.035-.041.069.117.172.2.11.075.241.13zM58.394 3.659q-.103-.007-.165-.049-.062-.048-.062-.124 0-.068.062-.124.041-.103.083-.165l.096-.138q.07-.096.138-.193.069-.096.152-.193.04-.034.068-.048.076-.055.152-.103.076-.055.172-.09.173-.062.338-.062.165-.007.282 0 .097.007.18.02.09.008.151.022.104.048.166.09.068.04.13.096.076.04.118.09.048.04.082.089.021.027.083.09.062.061.152.061.082 0 .137-.075.062-.076.124-.131.056-.145.18-.22.055-.028.09-.035l.075-.014q.02-.007.041-.007.021-.007.035-.014l.076-.007h.09q.116-.034.206-.034.103.007.165.055.062.041.062.117 0 .076-.062.124-.041.11-.09.172-.04.062-.089.131l-.138.193q-.069.097-.158.193-.028.035-.07.048-.068.056-.144.11-.076.049-.172.083-.18.062-.345.07-.158 0-.275-.008l-.186-.013q-.083-.014-.152-.028-.096-.048-.165-.09-.07-.04-.131-.09-.076-.047-.117-.089-.042-.048-.076-.096-.02-.028-.09-.09-.069-.069-.144-.062-.076.007-.145.083-.062.069-.124.124-.041.138-.172.22-.055.028-.097.035l-.069.014-.041.013q-.02 0-.035.007l-.075.007h-.09q-.117.035-.207.035z\"\r\n                style={{\r\n                    InkscapeFontSpecification: \"'Permanent Marker'\",\r\n                }}\r\n            />\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport default Logo;\r\n","import React, { forwardRef } from 'react';\r\nimport { AppBar, UserMenu, MenuItemLink, useTranslate } from 'react-admin';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Logo from './Logo';\r\n\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        flex: 1,\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n    },\r\n    spacer: {\r\n        flex: 1,\r\n    },\r\n});\r\n\r\nconst ConfigurationMenu = forwardRef((_, ref) => {\r\n    const translate = useTranslate();\r\n    return (\r\n        <MenuItemLink\r\n            ref={ref}\r\n            to=\"/configuration\"\r\n            primaryText={translate('pos.configuration')}\r\n            leftIcon={<SettingsIcon />}\r\n        />\r\n    );\r\n});\r\n\r\nconst CustomUserMenu = props => (\r\n    <UserMenu {...props}>\r\n        <ConfigurationMenu />\r\n    </UserMenu>\r\n);\r\n\r\nconst CustomAppBar = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar {...props} userMenu={<CustomUserMenu />}>\r\n            <Typography\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                className={classes.title}\r\n                id=\"react-admin-title\"\r\n            />\r\n            <Logo />\r\n            <span className={classes.spacer} />\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default CustomAppBar;\r\n","export default [\r\n    { id: 'compulsive', name: 'resources.segments.data.compulsive' },\r\n    { id: 'collector', name: 'resources.segments.data.collector' },\r\n    { id: 'ordered_once', name: 'resources.segments.data.ordered_once' },\r\n    { id: 'regular', name: 'resources.segments.data.regular' },\r\n    { id: 'returns', name: 'resources.segments.data.returns' },\r\n    { id: 'reviewer', name: 'resources.segments.data.reviewer' },\r\n];\r\n","import React from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { useTranslate } from 'react-admin';\r\nimport segments from '../segments/data';\r\n\r\nconst styles = {\r\n    main: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        marginTop: -8,\r\n        marginBottom: -8,\r\n    },\r\n    chip: { margin: 4 },\r\n};\r\n\r\nconst SegmentsField = ({ record }) => {\r\n    const translate = useTranslate();\r\n    return (\r\n        <span style={styles.main}>\r\n            {record.groups &&\r\n                record.groups.map(segment => (\r\n                    <Chip\r\n                        key={segment}\r\n                        style={styles.chip}\r\n                        label={translate(\r\n                            segments.find(s => s.id === segment).name\r\n                        )}\r\n                    />\r\n                ))}\r\n        </span>\r\n    );\r\n};\r\n\r\nSegmentsField.defaultProps = {\r\n    addLabel: true,\r\n    source: 'groups',\r\n};\r\n\r\nexport default SegmentsField;\r\n","import React from 'react';\r\nimport { useTranslate, SelectInput } from 'react-admin';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport segments from '../segments/data';\r\n\r\nconst useStyles = makeStyles({\r\n    input: { width: 150 },\r\n});\r\n\r\nconst SegmentInput = props => {\r\n    const translate = useTranslate();\r\n    const classes = useStyles();\r\n    return (\r\n        <SelectInput\r\n            {...props}\r\n            choices={segments.map(segment => ({\r\n                id: segment.id,\r\n                name: translate(segment.name),\r\n            }))}\r\n            className={classes.input}\r\n        />\r\n    );\r\n};\r\n\r\nSegmentInput.defaultProps = {\r\n    source: 'groups',\r\n};\r\n\r\nexport default SegmentInput;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst AvatarField = ({ record, size, className }) => (\r\n    <Avatar\r\n        src={`${record.avatar}?size=${size}x${size}`}\r\n        size={size}\r\n        style={{ width: size, height: size }}\r\n        className={className}\r\n    />\r\n);\r\n\r\nAvatarField.defaultProps = {\r\n    size: 25,\r\n};\r\n\r\nexport default AvatarField;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport pure from 'recompose/pure';\r\n\r\nimport AvatarField from './AvatarField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst FullNameField = ({ record = {}, size }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <AvatarField\r\n                className={classes.avatar}\r\n                record={record}\r\n                size={size}\r\n            />\r\n            {record.first_name} {record.last_name}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst PureFullNameField = pure(FullNameField);\r\n\r\nPureFullNameField.defaultProps = {\r\n    source: 'last_name',\r\n    label: 'resources.customers.fields.name',\r\n};\r\n\r\nexport default PureFullNameField;\r\n","import React from 'react';\r\nimport { Link } from 'react-admin';\r\n\r\nimport FullNameField from './FullNameField';\r\n\r\nconst CustomerLinkField = props => (\r\n    <Link to={`/customers/${props.record.id}`}>\r\n        <FullNameField {...props} />\r\n    </Link>\r\n);\r\n\r\nCustomerLinkField.defaultProps = {\r\n    source: 'customer_id',\r\n    addLabel: true,\r\n};\r\n\r\nexport default CustomerLinkField;\r\n","import React from 'react';\r\nimport { NumberField } from 'react-admin';\r\n\r\nconst colored = WrappedComponent => {\r\n    const Colored = props =>\r\n        props.record[props.source] > 500 ? (\r\n            <span style={{ color: 'red' }}>\r\n                <WrappedComponent {...props} />\r\n            </span>\r\n        ) : (\r\n            <WrappedComponent {...props} />\r\n        );\r\n\r\n    Colored.displayName = `Colored(${WrappedComponent.displayName})`;\r\n\r\n    return Colored;\r\n};\r\n\r\nconst ColoredNumberField = colored(NumberField);\r\nColoredNumberField.defaultProps = NumberField.defaultProps;\r\n\r\nexport default ColoredNumberField;\r\n","// in src/comments.js\r\nimport React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { DateField, EditButton, useTranslate, NumberField } from 'react-admin';\r\n\r\nimport AvatarField from './AvatarField';\r\nimport ColoredNumberField from './ColoredNumberField';\r\nimport SegmentsField from './SegmentsField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: '0.5rem 0',\r\n    },\r\n    cardTitleContent: {\r\n        display: 'flex',\r\n        flexDirection: 'rows',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n    },\r\n    cardContent: {\r\n        ...theme.typography.body1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n}));\r\n\r\nconst MobileGrid = ({ ids, data, basePath }) => {\r\n    const translate = useTranslate();\r\n    const classes = useStyles();\r\n    return (\r\n        <div style={{ margin: '1em' }}>\r\n            {ids.map(id => (\r\n                <Card key={id} className={classes.card}>\r\n                    <CardHeader\r\n                        title={\r\n                            <div className={classes.cardTitleContent}>\r\n                                <h2>{`${data[id].first_name} ${\r\n                                    data[id].last_name\r\n                                }`}</h2>\r\n                                <EditButton\r\n                                    resource=\"visitors\"\r\n                                    basePath={basePath}\r\n                                    record={data[id]}\r\n                                />\r\n                            </div>\r\n                        }\r\n                        avatar={<AvatarField record={data[id]} size=\"45\" />}\r\n                    />\r\n                    <CardContent className={classes.cardContent}>\r\n                        <div>\r\n                            {translate(\r\n                                'resources.customers.fields.last_seen_gte'\r\n                            )}\r\n                            &nbsp;\r\n                            <DateField\r\n                                record={data[id]}\r\n                                source=\"last_seen\"\r\n                                type=\"date\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            {translate(\r\n                                'resources.commands.name',\r\n                                parseInt(data[id].nb_commands, 10) || 1\r\n                            )}\r\n                            &nbsp;:&nbsp;\r\n                            <NumberField\r\n                                record={data[id]}\r\n                                source=\"nb_commands\"\r\n                                label=\"resources.customers.fields.commands\"\r\n                                className={classes.nb_commands}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            {translate(\r\n                                'resources.customers.fields.total_spent'\r\n                            )}\r\n                            &nbsp; :{' '}\r\n                            <ColoredNumberField\r\n                                record={data[id]}\r\n                                source=\"total_spent\"\r\n                                options={{ style: 'currency', currency: 'USD' }}\r\n                            />\r\n                        </div>\r\n                    </CardContent>\r\n                    {data[id].groups && data[id].groups.length > 0 && (\r\n                        <CardContent className={classes.cardContent}>\r\n                            <SegmentsField record={data[id]} />\r\n                        </CardContent>\r\n                    )}\r\n                </Card>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nMobileGrid.defaultProps = {\r\n    data: {},\r\n    ids: [],\r\n};\r\n\r\nexport default MobileGrid;\r\n","import React from \"react\";\r\nimport {\r\n  BooleanField,\r\n  Datagrid,\r\n  DateField,\r\n  DateInput,\r\n  Filter,\r\n  List,\r\n  NullableBooleanInput,\r\n  NumberField,\r\n  SearchInput\r\n} from \"react-admin\";\r\nimport { useMediaQuery, makeStyles } from \"@material-ui/core\";\r\n\r\nimport SegmentsField from \"./SegmentsField\";\r\nimport SegmentInput from \"./SegmentInput\";\r\nimport CustomerLinkField from \"./CustomerLinkField\";\r\nimport ColoredNumberField from \"./ColoredNumberField\";\r\nimport MobileGrid from \"./MobileGrid\";\r\n\r\nconst VisitorFilter = props => (\r\n  <Filter {...props}>\r\n    <SearchInput source=\"q\" resettable alwaysOn />\r\n    <DateInput source=\"last_seen_gte\" />\r\n    <NullableBooleanInput source=\"has_ordered\" />\r\n    <NullableBooleanInput source=\"has_newsletter\" defaultValue />\r\n    <SegmentInput />\r\n  </Filter>\r\n);\r\n\r\nconst useStyles = makeStyles({\r\n  nb_commands: { color: \"purple\" }\r\n});\r\n\r\nconst VisitorList = props => {\r\n  const classes = useStyles();\r\n  const isXsmall = useMediaQuery(theme => theme.breakpoints.down(\"xs\"));\r\n  return (\r\n    <List\r\n      {...props}\r\n      filters={<VisitorFilter />}\r\n      sort={{ field: \"last_seen\", order: \"DESC\" }}\r\n      perPage={25}\r\n    >\r\n      {isXsmall ? (\r\n        <MobileGrid />\r\n      ) : (\r\n        <Datagrid optimized rowClick=\"edit\">\r\n          <CustomerLinkField />\r\n          <DateField source=\"last_seen\" type=\"date\" />\r\n          <NumberField\r\n            source=\"nb_commands\"\r\n            label=\"resources.customers.fields.commands\"\r\n            className={classes.nb_commands}\r\n          />\r\n          <ColoredNumberField\r\n            source=\"total_spent\"\r\n            options={{ style: \"currency\", currency: \"USD\" }}\r\n          />\r\n          <DateField source=\"latest_purchase\" showTime />\r\n          <BooleanField source=\"has_newsletter\" label=\"News.\" />\r\n          <SegmentsField />\r\n        </Datagrid>\r\n      )}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default VisitorList;\r\n","import React from \"react\";\r\nimport { Create, DateInput, FormTab, TabbedForm, TextInput } from \"react-admin\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const styles = {\r\n  first_name: { display: \"inline-block\" },\r\n  last_name: { display: \"inline-block\", marginLeft: 32 },\r\n  email: { width: 544 },\r\n  address: { maxWidth: 544 },\r\n  zipcode: { display: \"inline-block\" },\r\n  city: { display: \"inline-block\", marginLeft: 32 },\r\n  comment: {\r\n    maxWidth: \"20em\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    whiteSpace: \"nowrap\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst VisitorCreate = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Create {...props}>\r\n      <TabbedForm>\r\n        <FormTab label=\"resources.customers.tabs.identity\">\r\n          <TextInput\r\n            autoFocus\r\n            source=\"first_name\"\r\n            formClassName={classes.first_name}\r\n          />\r\n          <TextInput source=\"last_name\" formClassName={classes.last_name} />\r\n          <TextInput\r\n            type=\"email\"\r\n            source=\"email\"\r\n            validation={{ email: true }}\r\n            fullWidth={true}\r\n            formClassName={classes.email}\r\n          />\r\n          <DateInput source=\"birthday\" />\r\n        </FormTab>\r\n        <FormTab label=\"resources.customers.tabs.address\" path=\"address\">\r\n          <TextInput\r\n            source=\"address\"\r\n            formClassName={classes.address}\r\n            multiline={true}\r\n            fullWidth={true}\r\n          />\r\n          <TextInput source=\"zipcode\" formClassName={classes.zipcode} />\r\n          <TextInput source=\"city\" formClassName={classes.city} />\r\n        </FormTab>\r\n      </TabbedForm>\r\n    </Create>\r\n  );\r\n};\r\n\r\nexport default VisitorCreate;\r\n","import React from 'react';\r\nimport { FunctionField } from 'react-admin';\r\n\r\nconst render = record => record.basket.length;\r\n\r\nconst NbItemsField = props => <FunctionField {...props} render={render} />;\r\n\r\nNbItemsField.defaultProps = {\r\n    label: 'Nb Items',\r\n    textAlign: 'right',\r\n};\r\n\r\nexport default NbItemsField;\r\n","import React from 'react';\r\nimport { ReferenceField, TextField } from 'react-admin';\r\n\r\nconst ProductReferenceField = props => (\r\n    <ReferenceField\r\n        label=\"Product\"\r\n        source=\"product_id\"\r\n        reference=\"products\"\r\n        {...props}\r\n    >\r\n        <TextField source=\"reference\" />\r\n    </ReferenceField>\r\n);\r\n\r\nProductReferenceField.defaultProps = {\r\n    source: 'product_id',\r\n    addLabel: true,\r\n};\r\n\r\nexport default ProductReferenceField;\r\n","import React from 'react';\r\nimport Icon from '@material-ui/icons/Stars';\r\n\r\nconst style = { opacity: 0.87, width: 20, height: 20 };\r\n\r\nconst StarRatingField = ({ record }) => (\r\n    <span>\r\n        {Array(record.rating)\r\n            .fill(true)\r\n            .map((_, i) => (\r\n                <Icon key={i} style={style} />\r\n            ))}\r\n    </span>\r\n);\r\n\r\nStarRatingField.defaultProps = {\r\n    label: 'resources.reviews.fields.rating',\r\n    source: 'rating',\r\n    addLabel: true,\r\n};\r\n\r\nexport default StarRatingField;\r\n","import React from 'react';\r\nimport { useTranslate, SelectArrayInput } from 'react-admin';\r\n\r\nimport segments from '../segments/data';\r\n\r\nconst SegmentsInput = ({ addField, ...rest }) => {\r\n    const translate = useTranslate();\r\n    return (\r\n        <SelectArrayInput\r\n            {...rest}\r\n            choices={segments.map(segment => ({\r\n                id: segment.id,\r\n                name: translate(segment.name),\r\n            }))}\r\n        />\r\n    );\r\n};\r\n\r\nSegmentsInput.defaultProps = {\r\n    addField: true,\r\n    source: 'groups',\r\n};\r\n\r\nexport default SegmentsInput;\r\n","import React from 'react';\r\nimport {\r\n    Datagrid,\r\n    DateField,\r\n    DateInput,\r\n    Edit,\r\n    EditButton,\r\n    FormTab,\r\n    NullableBooleanInput,\r\n    NumberField,\r\n    ReferenceManyField,\r\n    TabbedForm,\r\n    TextField,\r\n    TextInput,\r\n} from 'react-admin';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport NbItemsField from '../orders/NbItemsField';\r\nimport ProductReferenceField from '../products/ProductReferenceField';\r\nimport StarRatingField from '../reviews/StarRatingField';\r\nimport FullNameField from './FullNameField';\r\nimport SegmentsInput from './SegmentsInput';\r\nimport { styles } from './VisitorCreate';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst VisitorTitle = ({ record }) =>\r\n    record ? <FullNameField record={record} size={32} /> : null;\r\n\r\nconst VisitorEdit = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Edit title={<VisitorTitle />} {...props}>\r\n            <TabbedForm>\r\n                <FormTab label=\"resources.customers.tabs.identity\">\r\n                    <TextInput\r\n                        source=\"first_name\"\r\n                        formClassName={classes.first_name}\r\n                    />\r\n                    <TextInput\r\n                        source=\"last_name\"\r\n                        formClassName={classes.last_name}\r\n                    />\r\n                    <TextInput\r\n                        type=\"email\"\r\n                        source=\"email\"\r\n                        validation={{ email: true }}\r\n                        fullWidth={true}\r\n                        formClassName={classes.email}\r\n                    />\r\n                    <DateInput source=\"birthday\" />\r\n                </FormTab>\r\n                <FormTab\r\n                    label=\"resources.customers.tabs.address\"\r\n                    path=\"address\"\r\n                >\r\n                    <TextInput\r\n                        source=\"address\"\r\n                        formClassName={classes.address}\r\n                        multiline={true}\r\n                        fullWidth={true}\r\n                    />\r\n                    <TextInput\r\n                        source=\"zipcode\"\r\n                        formClassName={classes.zipcode}\r\n                    />\r\n                    <TextInput source=\"city\" formClassName={classes.city} />\r\n                </FormTab>\r\n                <FormTab label=\"resources.customers.tabs.orders\" path=\"orders\">\r\n                    <ReferenceManyField\r\n                        addLabel={false}\r\n                        sort={{ field: 'date', order: 'DESC' }}\r\n                        reference=\"commands\"\r\n                        target=\"customer_id\"\r\n                    >\r\n                        <Datagrid>\r\n                            <DateField source=\"date\" />\r\n                            <TextField source=\"reference\" />\r\n                            <NbItemsField />\r\n                            <NumberField\r\n                                source=\"total\"\r\n                                options={{ style: 'currency', currency: 'USD' }}\r\n                            />\r\n                            <TextField source=\"status\" />\r\n                            <EditButton />\r\n                        </Datagrid>\r\n                    </ReferenceManyField>\r\n                </FormTab>\r\n                <FormTab\r\n                    label=\"resources.customers.tabs.reviews\"\r\n                    path=\"reviews\"\r\n                >\r\n                    <ReferenceManyField\r\n                        addLabel={false}\r\n                        sort={{ field: 'date', order: 'DESC' }}\r\n                        reference=\"reviews\"\r\n                        target=\"customer_id\"\r\n                        fullWidth\r\n                    >\r\n                        <Datagrid filter={{ status: 'approved' }}>\r\n                            <DateField source=\"date\" />\r\n                            <ProductReferenceField />\r\n                            <StarRatingField />\r\n                            <TextField\r\n                                source=\"comment\"\r\n                                cellClassName={classes.comment}\r\n                            />\r\n                            <EditButton style={{ padding: 0 }} />\r\n                        </Datagrid>\r\n                    </ReferenceManyField>\r\n                </FormTab>\r\n                <FormTab label=\"resources.customers.tabs.stats\" path=\"stats\">\r\n                    <SegmentsInput />\r\n                    <NullableBooleanInput source=\"has_newsletter\" />\r\n                    <DateField\r\n                        source=\"first_seen\"\r\n                        style={{ width: 128, display: 'inline-block' }}\r\n                    />\r\n                    <DateField\r\n                        source=\"latest_purchase\"\r\n                        style={{ width: 128, display: 'inline-block' }}\r\n                    />\r\n                    <DateField\r\n                        source=\"last_seen\"\r\n                        style={{ width: 128, display: 'inline-block' }}\r\n                    />\r\n                </FormTab>\r\n            </TabbedForm>\r\n        </Edit>\r\n    );\r\n};\r\n\r\nexport default VisitorEdit;\r\n","import VisitorIcon from '@material-ui/icons/People';\r\n\r\nimport VisitorList from './VisitorList';\r\nimport VisitorCreate from './VisitorCreate';\r\nimport VisitorEdit from './VisitorEdit';\r\n\r\nexport default {\r\n    list: VisitorList,\r\n    create: VisitorCreate,\r\n    edit: VisitorEdit,\r\n    icon: VisitorIcon,\r\n};\r\n","import React from 'react';\r\nimport { ReferenceField } from 'react-admin';\r\n\r\nimport FullNameField from './FullNameField';\r\n\r\nconst CustomerReferenceField = props => (\r\n    <ReferenceField source=\"customer_id\" reference=\"customers\" {...props}>\r\n        <FullNameField />\r\n    </ReferenceField>\r\n);\r\n\r\nCustomerReferenceField.defaultProps = {\r\n    source: 'customer_id',\r\n    addLabel: true,\r\n};\r\n\r\nexport default CustomerReferenceField;\r\n","// in src/comments.js\r\nimport React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    DateField,\r\n    EditButton,\r\n    NumberField,\r\n    TextField,\r\n    BooleanField,\r\n    useTranslate,\r\n} from 'react-admin';\r\n\r\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\r\n\r\nconst useListStyles = makeStyles(theme => ({\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: '0.5rem 0',\r\n    },\r\n    cardTitleContent: {\r\n        display: 'flex',\r\n        flexDirection: 'rows',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n    },\r\n    cardContent: theme.typography.body1,\r\n    cardContentRow: {\r\n        display: 'flex',\r\n        flexDirection: 'rows',\r\n        alignItems: 'center',\r\n        margin: '0.5rem 0',\r\n    },\r\n}));\r\n\r\nconst MobileGrid = ({ ids, data, basePath }) => {\r\n    const translate = useTranslate();\r\n    const classes = useListStyles();\r\n    return (\r\n        <div style={{ margin: '1em' }}>\r\n            {ids.map(id => (\r\n                <Card key={id} className={classes.card}>\r\n                    <CardHeader\r\n                        title={\r\n                            <div className={classes.cardTitleContent}>\r\n                                <span>\r\n                                    {translate('resources.commands.name', 1)}\r\n                                    :&nbsp;\r\n                                    <TextField\r\n                                        record={data[id]}\r\n                                        source=\"reference\"\r\n                                    />\r\n                                </span>\r\n                                <EditButton\r\n                                    resource=\"commands\"\r\n                                    basePath={basePath}\r\n                                    record={data[id]}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    />\r\n                    <CardContent className={classes.cardContent}>\r\n                        <span className={classes.cardContentRow}>\r\n                            {translate('resources.customers.name', 1)}:&nbsp;\r\n                            <CustomerReferenceField\r\n                                record={data[id]}\r\n                                basePath={basePath}\r\n                            />\r\n                        </span>\r\n                        <span className={classes.cardContentRow}>\r\n                            {translate('resources.reviews.fields.date')}:&nbsp;\r\n                            <DateField\r\n                                record={data[id]}\r\n                                source=\"date\"\r\n                                showTime\r\n                            />\r\n                        </span>\r\n                        <span className={classes.cardContentRow}>\r\n                            {translate(\r\n                                'resources.commands.fields.basket.total'\r\n                            )}\r\n                            :&nbsp;\r\n                            <NumberField\r\n                                record={data[id]}\r\n                                source=\"total\"\r\n                                options={{ style: 'currency', currency: 'USD' }}\r\n                                className={classes.total}\r\n                            />\r\n                        </span>\r\n                        <span className={classes.cardContentRow}>\r\n                            {translate('resources.commands.fields.status')}\r\n                            :&nbsp;\r\n                            <TextField source=\"status\" record={data[id]} />\r\n                        </span>\r\n                        <span className={classes.cardContentRow}>\r\n                            {translate('resources.commands.fields.returned')}\r\n                            :&nbsp;\r\n                            <BooleanField record={data[id]} source=\"returned\" />\r\n                        </span>\r\n                    </CardContent>\r\n                </Card>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nMobileGrid.defaultProps = {\r\n    data: {},\r\n    ids: [],\r\n};\r\n\r\nexport default MobileGrid;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  AutocompleteInput,\r\n  BooleanField,\r\n  Datagrid,\r\n  DateField,\r\n  DateInput,\r\n  EditButton,\r\n  Filter,\r\n  List,\r\n  NullableBooleanInput,\r\n  NumberField,\r\n  ReferenceInput,\r\n  SearchInput,\r\n  TextField,\r\n  TextInput\r\n} from \"react-admin\";\r\nimport {\r\n  makeStyles,\r\n  useMediaQuery,\r\n  Divider,\r\n  Tabs,\r\n  Tab\r\n} from \"@material-ui/core\";\r\n\r\nimport NbItemsField from \"./NbItemsField\";\r\nimport CustomerReferenceField from \"../visitors/CustomerReferenceField\";\r\nimport MobileGrid from \"./MobileGrid\";\r\n\r\nconst OrderFilter = props => (\r\n  <Filter {...props}>\r\n    <SearchInput source=\"q\" resettable alwaysOn />\r\n    <ReferenceInput source=\"customer_id\" reference=\"customers\">\r\n      <AutocompleteInput\r\n        optionText={choice => `${choice.first_name} ${choice.last_name}`}\r\n      />\r\n    </ReferenceInput>\r\n    <DateInput source=\"date_gte\" />\r\n    <DateInput source=\"date_lte\" />\r\n    <TextInput source=\"total_gte\" />\r\n    <NullableBooleanInput source=\"returned\" />\r\n  </Filter>\r\n);\r\n\r\nconst useDatagridStyles = makeStyles({\r\n  total: { fontWeight: \"bold\" }\r\n});\r\n\r\nclass TabbedDatagrid extends React.Component {\r\n  tabs = [\r\n    { id: \"ordered\", name: \"ordered\" },\r\n    { id: \"delivered\", name: \"delivered\" },\r\n    { id: \"cancelled\", name: \"cancelled\" }\r\n  ];\r\n\r\n  state = { ordered: [], delivered: [], cancelled: [] };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.ids !== state[props.filterValues.status]) {\r\n      return { ...state, [props.filterValues.status]: props.ids };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n    const { filterValues, setFilters } = this.props;\r\n    setFilters({ ...filterValues, status: value });\r\n  };\r\n\r\n  render() {\r\n    const { isXSmall, classes, filterValues, ...props } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Tabs\r\n          variant=\"fullWidth\"\r\n          centered\r\n          value={filterValues.status}\r\n          indicatorColor=\"primary\"\r\n          onChange={this.handleChange}\r\n        >\r\n          {this.tabs.map(choice => (\r\n            <Tab key={choice.id} label={choice.name} value={choice.id} />\r\n          ))}\r\n        </Tabs>\r\n        <Divider />\r\n        {isXSmall ? (\r\n          <MobileGrid {...props} ids={this.state[filterValues.status]} />\r\n        ) : (\r\n          <div>\r\n            {filterValues.status === \"ordered\" && (\r\n              <Datagrid\r\n                {...props}\r\n                ids={this.state.ordered}\r\n                optimized\r\n                rowClick=\"edit\"\r\n              >\r\n                <DateField source=\"date\" showTime />\r\n                <TextField source=\"reference\" />\r\n                <CustomerReferenceField />\r\n                <NbItemsField />\r\n                <NumberField\r\n                  source=\"total\"\r\n                  options={{\r\n                    style: \"currency\",\r\n                    currency: \"USD\"\r\n                  }}\r\n                  className={classes.total}\r\n                />\r\n              </Datagrid>\r\n            )}\r\n            {filterValues.status === \"delivered\" && (\r\n              <Datagrid {...props} ids={this.state.delivered}>\r\n                <DateField source=\"date\" showTime />\r\n                <TextField source=\"reference\" />\r\n                <CustomerReferenceField />\r\n                <NbItemsField />\r\n                <NumberField\r\n                  source=\"total\"\r\n                  options={{\r\n                    style: \"currency\",\r\n                    currency: \"USD\"\r\n                  }}\r\n                  className={classes.total}\r\n                />\r\n                <BooleanField source=\"returned\" />\r\n                <EditButton />\r\n              </Datagrid>\r\n            )}\r\n            {filterValues.status === \"cancelled\" && (\r\n              <Datagrid {...props} ids={this.state.cancelled}>\r\n                <DateField source=\"date\" showTime />\r\n                <TextField source=\"reference\" />\r\n                <CustomerReferenceField />\r\n                <NbItemsField />\r\n                <NumberField\r\n                  source=\"total\"\r\n                  options={{\r\n                    style: \"currency\",\r\n                    currency: \"USD\"\r\n                  }}\r\n                  className={classes.total}\r\n                />\r\n                <BooleanField source=\"returned\" />\r\n                <EditButton />\r\n              </Datagrid>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledTabbedDatagrid = props => {\r\n  const classes = useDatagridStyles();\r\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down(\"xs\"));\r\n  return <TabbedDatagrid classes={classes} isXSmall={isXSmall} {...props} />;\r\n};\r\n\r\nconst OrderList = ({ classes, ...props }) => (\r\n  <List\r\n    {...props}\r\n    filterDefaultValues={{ status: \"ordered\" }}\r\n    sort={{ field: \"date\", order: \"DESC\" }}\r\n    perPage={25}\r\n    filters={<OrderFilter />}\r\n  >\r\n    <StyledTabbedDatagrid />\r\n  </List>\r\n);\r\n\r\nexport default OrderList;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link, useTranslate, useQueryWithStore } from 'react-admin';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    container: { minWidth: '35em', marginLeft: '1em' },\r\n    rightAlignedCell: { textAlign: 'right' },\r\n    boldCell: { fontWeight: 'bold' },\r\n});\r\n\r\nconst Basket = ({ record }) => {\r\n    const classes = useStyles();\r\n    const translate = useTranslate();\r\n\r\n    const { loaded, data: products } = useQueryWithStore(\r\n        {\r\n            type: 'getMany',\r\n            resource: 'products',\r\n            payload: {\r\n                ids: record ? record.basket.map(item => item.product_id) : [],\r\n            },\r\n        },\r\n        {},\r\n        state => {\r\n            const productIds = record\r\n                ? record.basket.map(item => item.product_id)\r\n                : [];\r\n            return productIds\r\n                .map(\r\n                    productId => state.admin.resources.products.data[productId]\r\n                )\r\n                .filter(r => typeof r !== 'undefined')\r\n                .reduce((prev, next) => {\r\n                    prev[next.id] = next;\r\n                    return prev;\r\n                }, {});\r\n        }\r\n    );\r\n\r\n    if (!loaded || !record) return null;\r\n\r\n    return (\r\n        <Paper className={classes.container} elevation={2}>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            {translate(\r\n                                'resources.commands.fields.basket.reference'\r\n                            )}\r\n                        </TableCell>\r\n                        <TableCell className={classes.rightAlignedCell}>\r\n                            {translate(\r\n                                'resources.commands.fields.basket.unit_price'\r\n                            )}\r\n                        </TableCell>\r\n                        <TableCell className={classes.rightAlignedCell}>\r\n                            {translate(\r\n                                'resources.commands.fields.basket.quantity'\r\n                            )}\r\n                        </TableCell>\r\n                        <TableCell className={classes.rightAlignedCell}>\r\n                            {translate(\r\n                                'resources.commands.fields.basket.total'\r\n                            )}\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {record.basket.map(\r\n                        item =>\r\n                            products[item.product_id] && (\r\n                                <TableRow key={item.product_id}>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            to={`/products/${item.product_id}`}\r\n                                        >\r\n                                            {\r\n                                                products[item.product_id]\r\n                                                    .reference\r\n                                            }\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell\r\n                                        className={classes.rightAlignedCell}\r\n                                    >\r\n                                        {products[\r\n                                            item.product_id\r\n                                        ].price.toLocaleString(undefined, {\r\n                                            style: 'currency',\r\n                                            currency: 'USD',\r\n                                        })}\r\n                                    </TableCell>\r\n                                    <TableCell\r\n                                        className={classes.rightAlignedCell}\r\n                                    >\r\n                                        {item.quantity}\r\n                                    </TableCell>\r\n                                    <TableCell\r\n                                        className={classes.rightAlignedCell}\r\n                                    >\r\n                                        {(\r\n                                            products[item.product_id].price *\r\n                                            item.quantity\r\n                                        ).toLocaleString(undefined, {\r\n                                            style: 'currency',\r\n                                            currency: 'USD',\r\n                                        })}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            )\r\n                    )}\r\n                    <TableRow>\r\n                        <TableCell colSpan={2} />\r\n                        <TableCell>\r\n                            {translate('resources.commands.fields.basket.sum')}\r\n                        </TableCell>\r\n                        <TableCell className={classes.rightAlignedCell}>\r\n                            {record.total_ex_taxes.toLocaleString(undefined, {\r\n                                style: 'currency',\r\n                                currency: 'USD',\r\n                            })}\r\n                        </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell colSpan={2} />\r\n                        <TableCell>\r\n                            {translate(\r\n                                'resources.commands.fields.basket.delivery'\r\n                            )}\r\n                        </TableCell>\r\n                        <TableCell className={classes.rightAlignedCell}>\r\n                            {record.delivery_fees.toLocaleString(undefined, {\r\n                                style: 'currency',\r\n                                currency: 'USD',\r\n                            })}\r\n                        </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell colSpan={2} />\r\n                        <TableCell>\r\n                            {translate(\r\n                                'resources.commands.fields.basket.tax_rate'\r\n                            )}\r\n                        </TableCell>\r\n                        <TableCell className={classes.rightAlignedCell}>\r\n                            {record.tax_rate.toLocaleString(undefined, {\r\n                                style: 'percent',\r\n                            })}\r\n                        </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell colSpan={2} />\r\n                        <TableCell className={classes.boldCell}>\r\n                            {translate(\r\n                                'resources.commands.fields.basket.total'\r\n                            )}\r\n                        </TableCell>\r\n                        <TableCell\r\n                            className={classnames(\r\n                                classes.boldCell,\r\n                                classes.rightAlignedCell\r\n                            )}\r\n                        >\r\n                            {record.total.toLocaleString(undefined, {\r\n                                style: 'currency',\r\n                                currency: 'USD',\r\n                            })}\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Basket;\r\n","import React from 'react';\r\nimport {\r\n    AutocompleteInput,\r\n    BooleanInput,\r\n    DateInput,\r\n    Edit,\r\n    ReferenceInput,\r\n    SelectInput,\r\n    SimpleForm,\r\n    useTranslate,\r\n} from 'react-admin';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Basket from './Basket';\r\n\r\nconst OrderTitle = ({ record }) => {\r\n    const translate = useTranslate();\r\n    return (\r\n        <span>\r\n            {translate('resources.commands.title', {\r\n                reference: record.reference,\r\n            })}\r\n        </span>\r\n    );\r\n};\r\n\r\nconst useEditStyles = makeStyles({\r\n    root: { alignItems: 'flex-start' },\r\n});\r\n\r\nconst OrderEdit = props => {\r\n    const classes = useEditStyles();\r\n    return (\r\n        <Edit\r\n            title={<OrderTitle />}\r\n            aside={<Basket />}\r\n            classes={classes}\r\n            {...props}\r\n        >\r\n            <SimpleForm>\r\n                <DateInput source=\"date\" />\r\n                <ReferenceInput source=\"customer_id\" reference=\"customers\">\r\n                    <AutocompleteInput\r\n                        optionText={choice =>\r\n                            `${choice.first_name} ${choice.last_name}`\r\n                        }\r\n                    />\r\n                </ReferenceInput>\r\n                <SelectInput\r\n                    source=\"status\"\r\n                    choices={[\r\n                        { id: 'delivered', name: 'delivered' },\r\n                        { id: 'ordered', name: 'ordered' },\r\n                        { id: 'cancelled', name: 'cancelled' },\r\n                        {\r\n                            id: 'unknown',\r\n                            name: 'unknown',\r\n                            disabled: true,\r\n                        },\r\n                    ]}\r\n                />\r\n                <BooleanInput source=\"returned\" />\r\n            </SimpleForm>\r\n        </Edit>\r\n    );\r\n};\r\n\r\nexport default OrderEdit;\r\n","import OrderIcon from '@material-ui/icons/AttachMoney';\r\n\r\nimport OrderList from './OrderList';\r\nimport OrderEdit from './OrderEdit';\r\n\r\nexport default {\r\n    list: OrderList,\r\n    edit: OrderEdit,\r\n    icon: OrderIcon,\r\n};\r\n","import React from 'react';\r\n\r\nconst AddressField = ({ record }) => (\r\n    <span>\r\n        {record.address}, {record.city} {record.zipcode}\r\n    </span>\r\n);\r\n\r\nexport default AddressField;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useShowController, ReferenceField, TextField } from 'react-admin';\r\n\r\nimport Basket from '../orders/Basket';\r\n\r\nconst CustomerField = ({ record }) => (\r\n    <Typography>\r\n        {record.first_name} {record.last_name}\r\n        <br />\r\n        {record.address}\r\n        <br />\r\n        {record.city}, {record.zipcode}\r\n    </Typography>\r\n);\r\n\r\nconst InvoiceShow = props => {\r\n    const { record } = useShowController(props);\r\n    if (!record) return null;\r\n    return (\r\n        <Card style={{ width: 600, margin: 'auto' }}>\r\n            <CardContent>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Posters Galore\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Typography variant=\"h6\" gutterBottom align=\"right\">\r\n                            Invoice {record.id}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} align=\"right\">\r\n                        <ReferenceField\r\n                            resource=\"invoices\"\r\n                            reference=\"customers\"\r\n                            source=\"customer_id\"\r\n                            basePath=\"/invoices\"\r\n                            record={record}\r\n                            link={false}\r\n                        >\r\n                            <CustomerField />\r\n                        </ReferenceField>\r\n                    </Grid>\r\n                </Grid>\r\n                <div style={{ height: 20 }}>&nbsp;</div>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <Typography variant=\"h6\" gutterBottom align=\"center\">\r\n                            Date{' '}\r\n                        </Typography>\r\n                        <Typography gutterBottom align=\"center\">\r\n                            {new Date(record.date).toLocaleDateString()}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={5}>\r\n                        <Typography variant=\"h6\" gutterBottom align=\"center\">\r\n                            Order\r\n                        </Typography>\r\n                        <ReferenceField\r\n                            resource=\"invoices\"\r\n                            reference=\"commands\"\r\n                            source=\"command_id\"\r\n                            basePath=\"/invoices\"\r\n                            record={record}\r\n                            link={false}\r\n                        >\r\n                            <TextField\r\n                                source=\"reference\"\r\n                                align=\"center\"\r\n                                component=\"p\"\r\n                                gutterBottom\r\n                            />\r\n                        </ReferenceField>\r\n                    </Grid>\r\n                </Grid>\r\n                <div style={{ margin: '10px 0' }}>\r\n                    <ReferenceField\r\n                        resource=\"invoices\"\r\n                        reference=\"commands\"\r\n                        source=\"command_id\"\r\n                        basePath=\"/invoices\"\r\n                        record={record}\r\n                        link={false}\r\n                    >\r\n                        <Basket />\r\n                    </ReferenceField>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default InvoiceShow;\r\n","import React from 'react';\r\nimport {\r\n    List,\r\n    Datagrid,\r\n    TextField,\r\n    DateField,\r\n    ReferenceField,\r\n    NumberField,\r\n    Filter,\r\n    DateInput,\r\n} from 'react-admin';\r\n\r\nimport FullNameField from '../visitors/FullNameField';\r\nimport AddressField from '../visitors/AddressField';\r\nimport InvoiceShow from './InvoiceShow';\r\n\r\nconst ListFilters = props => (\r\n    <Filter {...props}>\r\n        <DateInput source=\"date_gte\" alwaysOn />\r\n        <DateInput source=\"date_lte\" alwaysOn />\r\n    </Filter>\r\n);\r\n\r\nconst InvoiceList = props => (\r\n    <List {...props} filters={<ListFilters />} perPage={25}>\r\n        <Datagrid rowClick=\"expand\" expand={<InvoiceShow />}>\r\n            <TextField source=\"id\" />\r\n            <DateField source=\"date\" />\r\n            <ReferenceField source=\"customer_id\" reference=\"customers\">\r\n                <FullNameField />\r\n            </ReferenceField>\r\n            <ReferenceField\r\n                source=\"customer_id\"\r\n                reference=\"customers\"\r\n                link={false}\r\n                label=\"resources.invoices.fields.address\"\r\n            >\r\n                <AddressField />\r\n            </ReferenceField>\r\n            <ReferenceField source=\"command_id\" reference=\"commands\">\r\n                <TextField source=\"reference\" />\r\n            </ReferenceField>\r\n            <NumberField source=\"total_ex_taxes\" />\r\n            <NumberField source=\"delivery_fees\" />\r\n            <NumberField source=\"taxes\" />\r\n            <NumberField source=\"total\" />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport default InvoiceList;\r\n","import InvoiceIcon from '@material-ui/icons/LibraryBooks';\r\n\r\nimport InvoiceList from './InvoiceList';\r\n\r\nexport default {\r\n    list: InvoiceList,\r\n    icon: InvoiceIcon,\r\n};\r\n","import React from 'react';\r\nimport MuiGridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { Link } from 'react-router-dom';\r\nimport { NumberField } from 'react-admin';\r\nimport { linkToRecord } from 'ra-core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: '-2px',\r\n    },\r\n    gridList: {\r\n        width: '100%',\r\n        margin: 0,\r\n    },\r\n    tileBar: {\r\n        background:\r\n            'linear-gradient(to top, rgba(0,0,0,0.8) 0%,rgba(0,0,0,0.4) 70%,rgba(0,0,0,0) 100%)',\r\n    },\r\n    placeholder: {\r\n        backgroundColor: theme.palette.grey[300],\r\n        height: '100%',\r\n    },\r\n    price: {\r\n        display: 'inline',\r\n        fontSize: '1em',\r\n    },\r\n    link: {\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nconst getColsForWidth = width => {\r\n    if (width === 'xs') return 2;\r\n    if (width === 'sm') return 3;\r\n    if (width === 'md') return 4;\r\n    if (width === 'lg') return 5;\r\n    return 6;\r\n};\r\n\r\nconst times = (nbChildren, fn) =>\r\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\r\n\r\nconst LoadingGridList = ({ width, nbItems = 10 }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <MuiGridList\r\n                cellHeight={180}\r\n                cols={getColsForWidth(width)}\r\n                className={classes.gridList}\r\n            >\r\n                {' '}\r\n                {times(nbItems, key => (\r\n                    <GridListTile key={key}>\r\n                        <div className={classes.placeholder} />\r\n                    </GridListTile>\r\n                ))}\r\n            </MuiGridList>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst LoadedGridList = ({ ids, data, basePath, width }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <MuiGridList\r\n                cellHeight={180}\r\n                cols={getColsForWidth(width)}\r\n                className={classes.gridList}\r\n            >\r\n                {ids.map(id => (\r\n                    <GridListTile\r\n                        component={Link}\r\n                        key={id}\r\n                        to={linkToRecord(basePath, data[id].id)}\r\n                    >\r\n                        <img src={data[id].thumbnail} alt=\"\" />\r\n                        <GridListTileBar\r\n                            className={classes.tileBar}\r\n                            title={data[id].reference}\r\n                            subtitle={\r\n                                <span>\r\n                                    {data[id].width}x{data[id].height},{' '}\r\n                                    <NumberField\r\n                                        className={classes.price}\r\n                                        source=\"price\"\r\n                                        record={data[id]}\r\n                                        color=\"inherit\"\r\n                                        options={{\r\n                                            style: 'currency',\r\n                                            currency: 'USD',\r\n                                        }}\r\n                                    />\r\n                                </span>\r\n                            }\r\n                        />\r\n                    </GridListTile>\r\n                ))}\r\n            </MuiGridList>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst GridList = ({ loaded, ...props }) =>\r\n    loaded ? <LoadedGridList {...props} /> : <LoadingGridList {...props} />;\r\n\r\nexport default withWidth()(GridList);\r\n","import React from \"react\";\r\nimport {\r\n  Filter,\r\n  List,\r\n  NumberInput,\r\n  ReferenceInput,\r\n  SearchInput,\r\n  SelectInput,\r\n  useTranslate\r\n} from \"react-admin\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"./GridList\";\r\n\r\nconst useQuickFilterStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginBottom: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst QuickFilter = ({ label }) => {\r\n  const translate = useTranslate();\r\n  const classes = useQuickFilterStyles();\r\n  return <Chip className={classes.root} label={translate(label)} />;\r\n};\r\n\r\nexport const ProductFilter = props => (\r\n  <Filter {...props}>\r\n    <SearchInput source=\"q\" resettable alwaysOn />\r\n    <ReferenceInput\r\n      source=\"category_id\"\r\n      reference=\"categories\"\r\n      sort={{ field: \"id\", order: \"ASC\" }}\r\n    >\r\n      <SelectInput source=\"name\" />\r\n    </ReferenceInput>\r\n    <NumberInput source=\"width_gte\" />\r\n    <NumberInput source=\"width_lte\" />\r\n    <NumberInput source=\"height_gte\" />\r\n    <NumberInput source=\"height_lte\" />\r\n    <QuickFilter\r\n      label=\"resources.products.fields.stock_lte\"\r\n      source=\"stock_lte\"\r\n      defaultValue={10}\r\n    />\r\n  </Filter>\r\n);\r\n\r\nconst ProductList = props => (\r\n  <List\r\n    {...props}\r\n    filters={<ProductFilter />}\r\n    perPage={20}\r\n    sort={{ field: \"id\", order: \"ASC\" }}\r\n  >\r\n    <GridList />\r\n  </List>\r\n);\r\n\r\nexport default ProductList;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: { display: 'inline-block', marginTop: '1em', zIndex: 2 },\r\n    content: { padding: 0, '&:last-child': { padding: 0 } },\r\n    img: {\r\n        width: 'initial',\r\n        minWidth: 'initial',\r\n        maxWidth: '42em',\r\n        maxHeight: '15em',\r\n    },\r\n});\r\n\r\nconst Poster = ({ record }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent className={classes.content}>\r\n                <img src={record.image} alt=\"\" className={classes.img} />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Poster;\r\n","import React from 'react';\r\nimport {\r\n    Create,\r\n    FormTab,\r\n    NumberInput,\r\n    ReferenceInput,\r\n    SelectInput,\r\n    TabbedForm,\r\n    TextInput,\r\n    required,\r\n} from 'react-admin';\r\nimport { InputAdornment } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RichTextInput from 'ra-input-rich-text';\r\n\r\nexport const styles = {\r\n    price: { width: '7em' },\r\n    width: { width: '7em' },\r\n    height: { width: '7em' },\r\n    stock: { width: '7em' },\r\n    widthFormGroup: { display: 'inline-block' },\r\n    heightFormGroup: { display: 'inline-block', marginLeft: 32 },\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst ProductCreate = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Create {...props}>\r\n            <TabbedForm>\r\n                <FormTab label=\"resources.products.tabs.image\">\r\n                    <TextInput\r\n                        autoFocus\r\n                        source=\"image\"\r\n                        fullWidth\r\n                        validate={required()}\r\n                    />\r\n                    <TextInput\r\n                        source=\"thumbnail\"\r\n                        fullWidth\r\n                        validate={required()}\r\n                    />\r\n                </FormTab>\r\n                <FormTab label=\"resources.products.tabs.details\" path=\"details\">\r\n                    <TextInput source=\"reference\" validate={required()} />\r\n                    <NumberInput\r\n                        source=\"price\"\r\n                        validate={required()}\r\n                        className={classes.price}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    â¬\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    <NumberInput\r\n                        source=\"width\"\r\n                        validate={required()}\r\n                        className={classes.width}\r\n                        formClassName={classes.widthFormGroup}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    cm\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    <NumberInput\r\n                        source=\"height\"\r\n                        validate={required()}\r\n                        className={classes.height}\r\n                        formClassName={classes.heightFormGroup}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    cm\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    <ReferenceInput\r\n                        source=\"category_id\"\r\n                        reference=\"categories\"\r\n                        allowEmpty\r\n                    >\r\n                        <SelectInput source=\"name\" />\r\n                    </ReferenceInput>\r\n                    <NumberInput\r\n                        source=\"stock\"\r\n                        validate={required()}\r\n                        className={classes.stock}\r\n                    />\r\n                </FormTab>\r\n                <FormTab\r\n                    label=\"resources.products.tabs.description\"\r\n                    path=\"description\"\r\n                >\r\n                    <RichTextInput source=\"description\" label=\"\" />\r\n                </FormTab>\r\n            </TabbedForm>\r\n        </Create>\r\n    );\r\n};\r\n\r\nexport default ProductCreate;\r\n","import React from 'react';\r\nimport {\r\n    Datagrid,\r\n    DateField,\r\n    Edit,\r\n    EditButton,\r\n    FormTab,\r\n    NumberInput,\r\n    Pagination,\r\n    ReferenceInput,\r\n    ReferenceManyField,\r\n    SelectInput,\r\n    TabbedForm,\r\n    TextField,\r\n    TextInput,\r\n} from 'react-admin';\r\nimport { InputAdornment } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RichTextInput from 'ra-input-rich-text';\r\n\r\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\r\nimport StarRatingField from '../reviews/StarRatingField';\r\nimport Poster from './Poster';\r\nimport { styles as createStyles } from './ProductCreate';\r\n\r\nconst ProductTitle = ({ record }) => <span>Poster #{record.reference}</span>;\r\n\r\nconst styles = {\r\n    ...createStyles,\r\n    comment: {\r\n        maxWidth: '20em',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n    },\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst ProductEdit = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Edit {...props} title={<ProductTitle />}>\r\n            <TabbedForm>\r\n                <FormTab label=\"resources.products.tabs.image\">\r\n                    <Poster />\r\n                    <TextInput source=\"image\" fullWidth />\r\n                    <TextInput source=\"thumbnail\" fullWidth />\r\n                </FormTab>\r\n                <FormTab label=\"resources.products.tabs.details\" path=\"details\">\r\n                    <TextInput source=\"reference\" />\r\n                    <NumberInput\r\n                        source=\"price\"\r\n                        className={classes.price}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    â¬\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    <NumberInput\r\n                        source=\"width\"\r\n                        className={classes.width}\r\n                        formClassName={classes.widthFormGroup}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    cm\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    <NumberInput\r\n                        source=\"height\"\r\n                        className={classes.height}\r\n                        formClassName={classes.heightFormGroup}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    cm\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    <ReferenceInput source=\"category_id\" reference=\"categories\">\r\n                        <SelectInput source=\"name\" />\r\n                    </ReferenceInput>\r\n                    <NumberInput source=\"stock\" className={classes.stock} />\r\n                </FormTab>\r\n                <FormTab\r\n                    label=\"resources.products.tabs.description\"\r\n                    path=\"description\"\r\n                >\r\n                    <RichTextInput source=\"description\" label=\"\" />\r\n                </FormTab>\r\n                <FormTab label=\"resources.products.tabs.reviews\" path=\"reviews\">\r\n                    <ReferenceManyField\r\n                        reference=\"reviews\"\r\n                        target=\"product_id\"\r\n                        addLabel={false}\r\n                        pagination={<Pagination />}\r\n                        fullWidth\r\n                    >\r\n                        <Datagrid>\r\n                            <DateField source=\"date\" />\r\n                            <CustomerReferenceField />\r\n                            <StarRatingField />\r\n                            <TextField\r\n                                source=\"comment\"\r\n                                cellClassName={classes.comment}\r\n                            />\r\n                            <TextField source=\"status\" />\r\n                            <EditButton />\r\n                        </Datagrid>\r\n                    </ReferenceManyField>\r\n                </FormTab>\r\n            </TabbedForm>\r\n        </Edit>\r\n    );\r\n};\r\n\r\nexport default ProductEdit;\r\n","import ProductIcon from '@material-ui/icons/Collections';\r\nimport ProductList from './ProductList';\r\nimport ProductEdit from './ProductEdit';\r\nimport ProductCreate from './ProductCreate';\r\n\r\nexport default {\r\n    list: ProductList,\r\n    create: ProductCreate,\r\n    edit: ProductEdit,\r\n    icon: ProductIcon,\r\n};\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslate } from 'react-admin';\r\nimport { stringify } from 'query-string';\r\n\r\nimport products from '../products';\r\n\r\nconst useStyles = makeStyles({\r\n    icon: { paddingRight: '0.5em' },\r\n    link: {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nconst LinkToRelatedProducts = ({ record }) => {\r\n    const translate = useTranslate();\r\n    const classes = useStyles();\r\n    return (\r\n        <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            component={Link}\r\n            to={{\r\n                pathname: '/products',\r\n                search: stringify({\r\n                    page: 1,\r\n                    perPage: 25,\r\n                    sort: 'id',\r\n                    order: 'DESC',\r\n                    filter: JSON.stringify({ category_id: record.id }),\r\n                }),\r\n            }}\r\n            className={classes.link}\r\n        >\r\n            <products.icon className={classes.icon} />\r\n            {translate('resources.categories.fields.products')}\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default LinkToRelatedProducts;\r\n","import React from 'react';\r\nimport { Datagrid, EditButton, List, TextField } from 'react-admin';\r\n\r\nimport LinkToRelatedProducts from './LinkToRelatedProducts';\r\n\r\nconst CategoryList = ({ classes, ...props }) => (\r\n    <List {...props} sort={{ field: 'name', order: 'ASC' }}>\r\n        <Datagrid>\r\n            <TextField source=\"name\" />\r\n            <LinkToRelatedProducts />\r\n            <EditButton />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport default CategoryList;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: { width: 25, maxWidth: 25, maxHeight: 25 },\r\n});\r\n\r\nconst ThumbnailField = ({ record }) => {\r\n    const classes = useStyles();\r\n    return <img src={record.thumbnail} className={classes.root} alt=\"\" />;\r\n};\r\n\r\nexport default ThumbnailField;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProductRefField = ({ record }) => (\r\n    <Link to={`products/${record.id}`}>{record.reference}</Link>\r\n);\r\n\r\nProductRefField.defaultProps = {\r\n    source: 'id',\r\n    label: 'Reference',\r\n};\r\n\r\nexport default ProductRefField;\r\n","import React from 'react';\r\nimport {\r\n    Datagrid,\r\n    Edit,\r\n    EditButton,\r\n    NumberField,\r\n    ReferenceManyField,\r\n    SimpleForm,\r\n    TextInput,\r\n    useTranslate,\r\n} from 'react-admin';\r\n\r\nimport ThumbnailField from '../products/ThumbnailField';\r\nimport ProductRefField from '../products/ProductRefField';\r\n\r\nconst CategoryTitle = ({ record }) => {\r\n    const translate = useTranslate();\r\n    return (\r\n        <span>\r\n            {translate('resources.categories.name', { smart_count: 1 })} &quot;\r\n            {record.name}&quot;\r\n        </span>\r\n    );\r\n};\r\n\r\nconst CategoryEdit = props => (\r\n    <Edit title={<CategoryTitle />} {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"name\" />\r\n            <ReferenceManyField\r\n                reference=\"products\"\r\n                target=\"category_id\"\r\n                label=\"resources.categories.fields.products\"\r\n                perPage={5}\r\n            >\r\n                <Datagrid>\r\n                    <ThumbnailField />\r\n                    <ProductRefField source=\"reference\" />\r\n                    <NumberField\r\n                        source=\"price\"\r\n                        options={{ style: 'currency', currency: 'USD' }}\r\n                    />\r\n                    <NumberField\r\n                        source=\"width\"\r\n                        options={{ minimumFractionDigits: 2 }}\r\n                    />\r\n                    <NumberField\r\n                        source=\"height\"\r\n                        options={{ minimumFractionDigits: 2 }}\r\n                    />\r\n                    <NumberField source=\"stock\" />\r\n                    <EditButton />\r\n                </Datagrid>\r\n            </ReferenceManyField>\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport default CategoryEdit;\r\n","import CategoryIcon from '@material-ui/icons/Bookmark';\r\n\r\nimport CategoryList from './CategoryList';\r\nimport CategoryEdit from './CategoryEdit';\r\n\r\nexport default {\r\n    list: CategoryList,\r\n    edit: CategoryEdit,\r\n    icon: CategoryIcon,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ThumbUp from '@material-ui/icons/ThumbUp';\r\nimport {\r\n    Button,\r\n    useUpdateMany,\r\n    useNotify,\r\n    useRedirect,\r\n    useUnselectAll,\r\n    CRUD_UPDATE_MANY,\r\n} from 'react-admin';\r\n\r\nconst BulkAcceptButton = ({ selectedIds }) => {\r\n    const notify = useNotify();\r\n    const redirectTo = useRedirect();\r\n    const unselectAll = useUnselectAll('reviews');\r\n\r\n    const [approve, { loading }] = useUpdateMany(\r\n        'reviews',\r\n        selectedIds,\r\n        { status: 'accepted' },\r\n        {\r\n            action: CRUD_UPDATE_MANY,\r\n            undoable: true,\r\n            onSuccess: () => {\r\n                notify(\r\n                    'resources.reviews.notification.approved_success',\r\n                    'info',\r\n                    {},\r\n                    true\r\n                );\r\n                redirectTo('/reviews');\r\n                unselectAll();\r\n            },\r\n            onFailure: () => {\r\n                notify(\r\n                    'resources.reviews.notification.approved_error',\r\n                    'warning'\r\n                );\r\n            },\r\n        }\r\n    );\r\n\r\n    return (\r\n        <Button\r\n            label=\"resources.reviews.action.accept\"\r\n            onClick={approve}\r\n            disabled={loading}\r\n        >\r\n            <ThumbUp />\r\n        </Button>\r\n    );\r\n};\r\n\r\nBulkAcceptButton.propTypes = {\r\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n};\r\n\r\nexport default BulkAcceptButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ThumbDown from '@material-ui/icons/ThumbDown';\r\nimport {\r\n    Button,\r\n    useUpdateMany,\r\n    useNotify,\r\n    useRedirect,\r\n    useUnselectAll,\r\n    CRUD_UPDATE_MANY,\r\n} from 'react-admin';\r\n\r\nconst BulkRejectButton = ({ selectedIds }) => {\r\n    const notify = useNotify();\r\n    const redirectTo = useRedirect();\r\n    const unselectAll = useUnselectAll('reviews');\r\n\r\n    const [reject, { loading }] = useUpdateMany(\r\n        'reviews',\r\n        selectedIds,\r\n        { status: 'rejected' },\r\n        {\r\n            action: CRUD_UPDATE_MANY,\r\n            undoable: true,\r\n            onSuccess: () => {\r\n                notify(\r\n                    'resources.reviews.notification.approved_success',\r\n                    'info',\r\n                    {},\r\n                    true\r\n                );\r\n                redirectTo('/reviews');\r\n                unselectAll();\r\n            },\r\n            onFailure: () => {\r\n                notify(\r\n                    'resources.reviews.notification.approved_error',\r\n                    'warning'\r\n                );\r\n            },\r\n        }\r\n    );\r\n\r\n    return (\r\n        <Button\r\n            label=\"resources.reviews.action.reject\"\r\n            onClick={reject}\r\n            disabled={loading}\r\n        >\r\n            <ThumbDown />\r\n        </Button>\r\n    );\r\n};\r\n\r\nBulkRejectButton.propTypes = {\r\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n};\r\n\r\nexport default BulkRejectButton;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    linkToRecord,\r\n    ReferenceField,\r\n    FunctionField,\r\n    TextField,\r\n} from 'react-admin';\r\n\r\nimport AvatarField from '../visitors/AvatarField';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100vw',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: 'inherit',\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n});\r\n\r\nconst ReviewMobileList = ({ basePath, data, ids, loading, total }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        (loading || total > 0) && (\r\n            <List className={classes.root}>\r\n                {ids.map(id => (\r\n                    <Link\r\n                        to={linkToRecord(basePath, id)}\r\n                        className={classes.link}\r\n                        key={id}\r\n                    >\r\n                        <ListItem button>\r\n                            <ListItemAvatar>\r\n                                <ReferenceField\r\n                                    record={data[id]}\r\n                                    source=\"customer_id\"\r\n                                    reference=\"customers\"\r\n                                    basePath={basePath}\r\n                                    linkType={false}\r\n                                >\r\n                                    <AvatarField size={40} />\r\n                                </ReferenceField>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={\r\n                                    <Fragment>\r\n                                        <ReferenceField\r\n                                            record={data[id]}\r\n                                            source=\"customer_id\"\r\n                                            reference=\"customers\"\r\n                                            basePath={basePath}\r\n                                            linkType={false}\r\n                                        >\r\n                                            <FunctionField\r\n                                                render={record =>\r\n                                                    `${record.first_name} ${\r\n                                                        record.last_name\r\n                                                    }`\r\n                                                }\r\n                                                variant=\"subtitle1\"\r\n                                                className={classes.inline}\r\n                                            />\r\n                                        </ReferenceField>{' '}\r\n                                        on{' '}\r\n                                        <ReferenceField\r\n                                            record={data[id]}\r\n                                            source=\"product_id\"\r\n                                            reference=\"products\"\r\n                                            basePath={basePath}\r\n                                            linkType={false}\r\n                                        >\r\n                                            <TextField\r\n                                                source=\"reference\"\r\n                                                variant=\"subtitle1\"\r\n                                                className={classes.inline}\r\n                                            />\r\n                                        </ReferenceField>\r\n                                    </Fragment>\r\n                                }\r\n                                secondary={data[id].comment}\r\n                                secondaryTypographyProps={{ noWrap: true }}\r\n                            />\r\n                        </ListItem>\r\n                    </Link>\r\n                ))}\r\n            </List>\r\n        )\r\n    );\r\n};\r\n\r\nReviewMobileList.propTypes = {\r\n    basePath: PropTypes.string,\r\n    data: PropTypes.object,\r\n    hasBulkActions: PropTypes.bool.isRequired,\r\n    ids: PropTypes.array,\r\n    leftAvatar: PropTypes.func,\r\n    leftIcon: PropTypes.func,\r\n    linkType: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\r\n        .isRequired,\r\n    onToggleItem: PropTypes.func,\r\n    primaryText: PropTypes.func,\r\n    rightAvatar: PropTypes.func,\r\n    rightIcon: PropTypes.func,\r\n    secondaryText: PropTypes.func,\r\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n    tertiaryText: PropTypes.func,\r\n};\r\n\r\nReviewMobileList.defaultProps = {\r\n    linkType: 'edit',\r\n    hasBulkActions: false,\r\n    selectedIds: [],\r\n};\r\n\r\nexport default ReviewMobileList;\r\n","import green from '@material-ui/core/colors/green';\r\nimport orange from '@material-ui/core/colors/orange';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nconst rowStyle = (record, index, defaultStyle = {}) => {\r\n    if (record.status === 'accepted')\r\n        return {\r\n            ...defaultStyle,\r\n            borderLeftColor: green[500],\r\n            borderLeftWidth: 5,\r\n            borderLeftStyle: 'solid',\r\n        };\r\n    if (record.status === 'pending')\r\n        return {\r\n            ...defaultStyle,\r\n            borderLeftColor: orange[500],\r\n            borderLeftWidth: 5,\r\n            borderLeftStyle: 'solid',\r\n        };\r\n    if (record.status === 'rejected')\r\n        return {\r\n            ...defaultStyle,\r\n            borderLeftColor: red[500],\r\n            borderLeftWidth: 5,\r\n            borderLeftStyle: 'solid',\r\n        };\r\n    return defaultStyle;\r\n};\r\n\r\nexport default rowStyle;\r\n","import React from 'react';\r\nimport { Datagrid, DateField, TextField } from 'react-admin';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ProductReferenceField from '../products/ProductReferenceField';\r\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\r\nimport StarRatingField from './StarRatingField';\r\n\r\nimport rowStyle from './rowStyle';\r\n\r\nconst useListStyles = makeStyles({\r\n    headerRow: {\r\n        borderLeftColor: 'white',\r\n        borderLeftWidth: 5,\r\n        borderLeftStyle: 'solid',\r\n    },\r\n    comment: {\r\n        maxWidth: '18em',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n    },\r\n});\r\n\r\nconst ReviewListDesktop = props => {\r\n    const classes = useListStyles();\r\n    return (\r\n        <Datagrid\r\n            rowClick=\"edit\"\r\n            rowStyle={rowStyle}\r\n            classes={{ headerRow: classes.headerRow }}\r\n            optimized\r\n            {...props}\r\n        >\r\n            <DateField source=\"date\" />\r\n            <CustomerReferenceField link={false} />\r\n            <ProductReferenceField link={false} />\r\n            <StarRatingField />\r\n            <TextField source=\"comment\" cellClassName={classes.comment} />\r\n            <TextField source=\"status\" />\r\n        </Datagrid>\r\n    );\r\n};\r\n\r\nexport default ReviewListDesktop;\r\n","import React from \"react\";\r\nimport {\r\n  AutocompleteInput,\r\n  DateInput,\r\n  Filter,\r\n  ReferenceInput,\r\n  SearchInput,\r\n  SelectInput\r\n} from \"react-admin\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useFilterStyles = makeStyles({\r\n  status: { width: 150 }\r\n});\r\n\r\nconst ReviewFilter = props => {\r\n  const classes = useFilterStyles();\r\n  return (\r\n    <Filter {...props}>\r\n      <SearchInput source=\"q\" resettable alwaysOn />\r\n      <SelectInput\r\n        source=\"status\"\r\n        choices={[\r\n          { id: \"accepted\", name: \"Accepted\" },\r\n          { id: \"pending\", name: \"Pending\" },\r\n          { id: \"rejected\", name: \"Rejected\" }\r\n        ]}\r\n        className={classes.status}\r\n      />\r\n      <ReferenceInput source=\"customer_id\" reference=\"customers\">\r\n        <AutocompleteInput\r\n          optionText={choice => `${choice.first_name} ${choice.last_name}`}\r\n        />\r\n      </ReferenceInput>\r\n      <ReferenceInput source=\"product_id\" reference=\"products\">\r\n        <AutocompleteInput optionText=\"reference\" />\r\n      </ReferenceInput>\r\n      <DateInput source=\"date_gte\" />\r\n      <DateInput source=\"date_lte\" />\r\n    </Filter>\r\n  );\r\n};\r\n\r\nexport default ReviewFilter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport ThumbUp from '@material-ui/icons/ThumbUp';\r\nimport { useTranslate, useUpdate, useNotify, useRedirect } from 'react-admin';\r\n\r\n/**\r\n * This custom button demonstrate using useUpdate to update data\r\n */\r\nconst AcceptButton = ({ record }) => {\r\n    const translate = useTranslate();\r\n    const notify = useNotify();\r\n    const redirectTo = useRedirect();\r\n\r\n    const [approve, { loading }] = useUpdate(\r\n        'reviews',\r\n        record.id,\r\n        { status: 'accepted' },\r\n        record,\r\n        {\r\n            undoable: true,\r\n            onSuccess: () => {\r\n                notify(\r\n                    'resources.reviews.notification.approved_success',\r\n                    'info',\r\n                    {},\r\n                    true\r\n                );\r\n                redirectTo('/reviews');\r\n            },\r\n            onFailure: () => {\r\n                notify(\r\n                    'resources.reviews.notification.approved_error',\r\n                    'warning'\r\n                );\r\n            },\r\n        }\r\n    );\r\n    return record && record.status === 'pending' ? (\r\n        <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            onClick={approve}\r\n            disabled={loading}\r\n        >\r\n            <ThumbUp\r\n                color=\"primary\"\r\n                style={{ paddingRight: '0.5em', color: 'green' }}\r\n            />\r\n            {translate('resources.reviews.action.accept')}\r\n        </Button>\r\n    ) : (\r\n        <span />\r\n    );\r\n};\r\n\r\nAcceptButton.propTypes = {\r\n    record: PropTypes.object,\r\n};\r\n\r\nexport default AcceptButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport ThumbDown from '@material-ui/icons/ThumbDown';\r\nimport { useTranslate, useUpdate, useNotify, useRedirect } from 'react-admin';\r\n\r\n/**\r\n * This custom button demonstrate using a custom action to update data\r\n */\r\nconst RejectButton = ({ record }) => {\r\n    const translate = useTranslate();\r\n    const notify = useNotify();\r\n    const redirectTo = useRedirect();\r\n\r\n    const [reject, { loading }] = useUpdate(\r\n        'reviews',\r\n        record.id,\r\n        { status: 'rejected' },\r\n        record,\r\n        {\r\n            undoable: true,\r\n            onSuccess: () => {\r\n                notify(\r\n                    'resources.reviews.notification.rejected_success',\r\n                    'info',\r\n                    {},\r\n                    true\r\n                );\r\n                redirectTo('/reviews');\r\n            },\r\n            onFailure: () => {\r\n                notify(\r\n                    'resources.reviews.notification.rejected_error',\r\n                    'warning'\r\n                );\r\n            },\r\n        }\r\n    );\r\n\r\n    return record && record.status === 'pending' ? (\r\n        <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            onClick={reject}\r\n            disabled={loading}\r\n        >\r\n            <ThumbDown\r\n                color=\"primary\"\r\n                style={{ paddingRight: '0.5em', color: 'red' }}\r\n            />\r\n            {translate('resources.reviews.action.reject')}\r\n        </Button>\r\n    ) : (\r\n        <span />\r\n    );\r\n};\r\n\r\nRejectButton.propTypes = {\r\n    record: PropTypes.object,\r\n};\r\n\r\nexport default RejectButton;\r\n","import React, { Fragment } from 'react';\r\nimport MuiToolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { SaveButton, DeleteButton } from 'react-admin';\r\nimport AcceptButton from './AcceptButton';\r\nimport RejectButton from './RejectButton';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: 'white',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n});\r\n\r\nconst ReviewEditToolbar = ({\r\n    basePath,\r\n    handleSubmitWithRedirect,\r\n    invalid,\r\n    record,\r\n    resource,\r\n    saving,\r\n}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <MuiToolbar className={classes.root}>\r\n            {record.status === 'pending' ? (\r\n                <Fragment>\r\n                    <AcceptButton record={record} />\r\n                    <RejectButton record={record} />\r\n                </Fragment>\r\n            ) : (\r\n                <Fragment>\r\n                    <SaveButton\r\n                        handleSubmitWithRedirect={handleSubmitWithRedirect}\r\n                        invalid={invalid}\r\n                        saving={saving}\r\n                        redirect=\"list\"\r\n                        submitOnEnter={true}\r\n                    />\r\n                    <DeleteButton\r\n                        basePath={basePath}\r\n                        record={record}\r\n                        resource={resource}\r\n                    />\r\n                </Fragment>\r\n            )}\r\n        </MuiToolbar>\r\n    );\r\n};\r\n\r\nexport default ReviewEditToolbar;\r\n","import React from 'react';\r\nimport {\r\n    useEditController,\r\n    useTranslate,\r\n    TextInput,\r\n    SimpleForm,\r\n    DateField,\r\n} from 'react-admin';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport ProductReferenceField from '../products/ProductReferenceField';\r\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\r\nimport StarRatingField from './StarRatingField';\r\nimport ReviewEditToolbar from './ReviewEditToolbar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        paddingTop: 40,\r\n    },\r\n    title: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        margin: '1em',\r\n    },\r\n    form: {\r\n        [theme.breakpoints.up('xs')]: {\r\n            width: 400,\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '100vw',\r\n            marginTop: -30,\r\n        },\r\n    },\r\n    inlineField: {\r\n        display: 'inline-block',\r\n        width: '50%',\r\n    },\r\n}));\r\n\r\nconst ReviewEdit = ({ onCancel, ...props }) => {\r\n    const classes = useStyles();\r\n    const controllerProps = useEditController(props);\r\n    const translate = useTranslate();\r\n    if (!controllerProps.record) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.title}>\r\n                <Typography variant=\"h6\">\r\n                    {translate('resources.reviews.detail')}\r\n                </Typography>\r\n                <IconButton onClick={onCancel}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </div>\r\n            <SimpleForm\r\n                className={classes.form}\r\n                basePath={controllerProps.basePath}\r\n                record={controllerProps.record}\r\n                save={controllerProps.save}\r\n                version={controllerProps.version}\r\n                redirect=\"list\"\r\n                resource=\"reviews\"\r\n                toolbar={<ReviewEditToolbar />}\r\n            >\r\n                <CustomerReferenceField formClassName={classes.inlineField} />\r\n\r\n                <ProductReferenceField formClassName={classes.inlineField} />\r\n                <DateField source=\"date\" formClassName={classes.inlineField} />\r\n                <StarRatingField formClassName={classes.inlineField} />\r\n                <TextInput source=\"comment\" rowsMax={15} multiline fullWidth />\r\n            </SimpleForm>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReviewEdit;\r\n","import React, { Fragment, useCallback } from 'react';\r\nimport classnames from 'classnames';\r\nimport { BulkDeleteButton, List } from 'react-admin';\r\nimport { Route, useHistory } from 'react-router-dom';\r\nimport { Drawer, useMediaQuery, makeStyles } from '@material-ui/core';\r\nimport BulkAcceptButton from './BulkAcceptButton';\r\nimport BulkRejectButton from './BulkRejectButton';\r\nimport ReviewListMobile from './ReviewListMobile';\r\nimport ReviewListDesktop from './ReviewListDesktop';\r\nimport ReviewFilter from './ReviewFilter';\r\nimport ReviewEdit from './ReviewEdit';\r\n\r\nconst ReviewsBulkActionButtons = props => (\r\n    <Fragment>\r\n        <BulkAcceptButton {...props} />\r\n        <BulkRejectButton {...props} />\r\n        <BulkDeleteButton {...props} />\r\n    </Fragment>\r\n);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    list: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create(['all'], {\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: 0,\r\n    },\r\n    listWithDrawer: {\r\n        marginRight: 400,\r\n    },\r\n    drawerPaper: {\r\n        zIndex: 100,\r\n    },\r\n}));\r\n\r\nconst ReviewList = props => {\r\n    const classes = useStyles();\r\n    const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\r\n    const history = useHistory();\r\n\r\n    const handleClose = useCallback(() => {\r\n        history.push('/reviews');\r\n    }, [history]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Route path=\"/reviews/:id\">\r\n                {({ match }) => {\r\n                    const isMatch = !!(\r\n                        match &&\r\n                        match.params &&\r\n                        match.params.id !== 'create'\r\n                    );\r\n\r\n                    return (\r\n                        <Fragment>\r\n                            <List\r\n                                {...props}\r\n                                className={classnames(classes.list, {\r\n                                    [classes.listWithDrawer]: isMatch,\r\n                                })}\r\n                                bulkActionButtons={<ReviewsBulkActionButtons />}\r\n                                filters={<ReviewFilter />}\r\n                                perPage={25}\r\n                                sort={{ field: 'date', order: 'DESC' }}\r\n                            >\r\n                                {isXSmall ? (\r\n                                    <ReviewListMobile />\r\n                                ) : (\r\n                                    <ReviewListDesktop />\r\n                                )}\r\n                            </List>\r\n                            <Drawer\r\n                                variant=\"persistent\"\r\n                                open={isMatch}\r\n                                anchor=\"right\"\r\n                                onClose={handleClose}\r\n                                classes={{\r\n                                    paper: classes.drawerPaper,\r\n                                }}\r\n                            >\r\n                                {/* To avoid any errors if the route does not match, we don't render at all the component in this case */}\r\n                                {isMatch ? (\r\n                                    <ReviewEdit\r\n                                        id={match.params.id}\r\n                                        onCancel={handleClose}\r\n                                        {...props}\r\n                                    />\r\n                                ) : null}\r\n                            </Drawer>\r\n                        </Fragment>\r\n                    );\r\n                }}\r\n            </Route>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReviewList;\r\n","import ReviewIcon from '@material-ui/icons/Comment';\r\nimport ReviewList from './ReviewList';\r\n\r\nexport default {\r\n    icon: ReviewIcon,\r\n    list: ReviewList,\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { useTranslate } from 'react-admin';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: { minWidth: theme.spacing(5) },\r\n    sidebarIsOpen: {\r\n        paddingLeft: 25,\r\n        transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\r\n    },\r\n    sidebarIsClosed: {\r\n        paddingLeft: 0,\r\n        transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\r\n    },\r\n}));\r\n\r\nconst SubMenu = ({\r\n    handleToggle,\r\n    sidebarIsOpen,\r\n    isOpen,\r\n    name,\r\n    icon,\r\n    children,\r\n    dense,\r\n}) => {\r\n    const translate = useTranslate();\r\n    const classes = useStyles();\r\n\r\n    const header = (\r\n        <MenuItem dense={dense} button onClick={handleToggle}>\r\n            <ListItemIcon className={classes.icon}>\r\n                {isOpen ? <ExpandMore /> : icon}\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                {translate(name)}\r\n            </Typography>\r\n        </MenuItem>\r\n    );\r\n\r\n    return (\r\n        <Fragment>\r\n            {sidebarIsOpen || isOpen ? (\r\n                header\r\n            ) : (\r\n                <Tooltip title={translate(name)} placement=\"right\">\r\n                    {header}\r\n                </Tooltip>\r\n            )}\r\n            <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\r\n                <List\r\n                    dense={dense}\r\n                    component=\"div\"\r\n                    disablePadding\r\n                    className={\r\n                        sidebarIsOpen\r\n                            ? classes.sidebarIsOpen\r\n                            : classes.sidebarIsClosed\r\n                    }\r\n                >\r\n                    {children}\r\n                </List>\r\n                <Divider />\r\n            </Collapse>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SubMenu;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport { useTranslate, DashboardMenuItem, MenuItemLink } from 'react-admin';\r\n\r\nimport visitors from '../visitors';\r\nimport orders from '../orders';\r\nimport invoices from '../invoices';\r\nimport products from '../products';\r\nimport categories from '../categories';\r\nimport reviews from '../reviews';\r\nimport SubMenu from './SubMenu';\r\n\r\nconst Menu = ({ onMenuClick, dense, logout }) => {\r\n    const [state, setState] = useState({\r\n        menuCatalog: false,\r\n        menuSales: false,\r\n        menuCustomers: false,\r\n    });\r\n    const translate = useTranslate();\r\n    const isXsmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\r\n    const open = useSelector(state => state.admin.ui.sidebarOpen);\r\n    useSelector(state => state.theme); // force rerender on theme change\r\n\r\n    const handleToggle = menu => {\r\n        setState(state => ({ ...state, [menu]: !state[menu] }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {' '}\r\n            <DashboardMenuItem onClick={onMenuClick} sidebarIsOpen={open} />\r\n            <SubMenu\r\n                handleToggle={() => handleToggle('menuSales')}\r\n                isOpen={state.menuSales}\r\n                sidebarIsOpen={open}\r\n                name=\"pos.menu.sales\"\r\n                icon={<orders.icon />}\r\n                dense={dense}\r\n            >\r\n                <MenuItemLink\r\n                    to={`/commands`}\r\n                    primaryText={translate(`resources.commands.name`, {\r\n                        smart_count: 2,\r\n                    })}\r\n                    leftIcon={<orders.icon />}\r\n                    onClick={onMenuClick}\r\n                    sidebarIsOpen={open}\r\n                    dense={dense}\r\n                />\r\n                <MenuItemLink\r\n                    to={`/invoices`}\r\n                    primaryText={translate(`resources.invoices.name`, {\r\n                        smart_count: 2,\r\n                    })}\r\n                    leftIcon={<invoices.icon />}\r\n                    onClick={onMenuClick}\r\n                    sidebarIsOpen={open}\r\n                    dense={dense}\r\n                />\r\n            </SubMenu>\r\n            <SubMenu\r\n                handleToggle={() => handleToggle('menuCatalog')}\r\n                isOpen={state.menuCatalog}\r\n                sidebarIsOpen={open}\r\n                name=\"pos.menu.catalog\"\r\n                icon={<products.icon />}\r\n                dense={dense}\r\n            >\r\n                <MenuItemLink\r\n                    to={`/products`}\r\n                    primaryText={translate(`resources.products.name`, {\r\n                        smart_count: 2,\r\n                    })}\r\n                    leftIcon={<products.icon />}\r\n                    onClick={onMenuClick}\r\n                    sidebarIsOpen={open}\r\n                    dense={dense}\r\n                />\r\n                <MenuItemLink\r\n                    to={`/categories`}\r\n                    primaryText={translate(`resources.categories.name`, {\r\n                        smart_count: 2,\r\n                    })}\r\n                    leftIcon={<categories.icon />}\r\n                    onClick={onMenuClick}\r\n                    sidebarIsOpen={open}\r\n                    dense={dense}\r\n                />\r\n            </SubMenu>\r\n            <SubMenu\r\n                handleToggle={() => handleToggle('menuCustomer')}\r\n                isOpen={state.menuCustomer}\r\n                sidebarIsOpen={open}\r\n                name=\"pos.menu.customers\"\r\n                icon={<visitors.icon />}\r\n                dense={dense}\r\n            >\r\n                <MenuItemLink\r\n                    to={`/customers`}\r\n                    primaryText={translate(`resources.customers.name`, {\r\n                        smart_count: 2,\r\n                    })}\r\n                    leftIcon={<visitors.icon />}\r\n                    onClick={onMenuClick}\r\n                    sidebarIsOpen={open}\r\n                    dense={dense}\r\n                />\r\n                <MenuItemLink\r\n                    to={`/segments`}\r\n                    primaryText={translate(`resources.segments.name`, {\r\n                        smart_count: 2,\r\n                    })}\r\n                    leftIcon={<LabelIcon />}\r\n                    onClick={onMenuClick}\r\n                    sidebarIsOpen={open}\r\n                    dense={dense}\r\n                />\r\n            </SubMenu>\r\n            <MenuItemLink\r\n                to={`/reviews`}\r\n                primaryText={translate(`resources.reviews.name`, {\r\n                    smart_count: 2,\r\n                })}\r\n                leftIcon={<reviews.icon />}\r\n                onClick={onMenuClick}\r\n                sidebarIsOpen={open}\r\n                dense={dense}\r\n            />\r\n            {isXsmall && (\r\n                <MenuItemLink\r\n                    to=\"/configuration\"\r\n                    primaryText={translate('pos.configuration')}\r\n                    leftIcon={<SettingsIcon />}\r\n                    onClick={onMenuClick}\r\n                    sidebarIsOpen={open}\r\n                    dense={dense}\r\n                />\r\n            )}\r\n            {isXsmall && logout}\r\n        </div>\r\n    );\r\n};\r\n\r\nMenu.propTypes = {\r\n    onMenuClick: PropTypes.func,\r\n    logout: PropTypes.object,\r\n};\r\n\r\nexport default Menu;\r\n","export const darkTheme = {\r\n    palette: {\r\n        type: 'dark', // Switching the dark mode on is a single property value change.\r\n    },\r\n};\r\n\r\nexport const lightTheme = {\r\n    palette: {\r\n        secondary: {\r\n            light: '#5f5fc4',\r\n            main: '#283593',\r\n            dark: '#001064',\r\n            contrastText: '#fff',\r\n        },\r\n    },\r\n    overrides: {\r\n        MuiFilledInput: {\r\n            root: {\r\n                backgroundColor: 'rgba(0, 0, 0, 0.04)',\r\n                '&$disabled': {\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.04)',\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Layout, Sidebar } from 'react-admin';\r\nimport AppBar from './AppBar';\r\nimport Menu from './Menu';\r\nimport { darkTheme, lightTheme } from './themes';\r\n\r\nconst CustomSidebar = props => <Sidebar {...props} size={200} />;\r\n\r\nexport default props => {\r\n    const theme = useSelector(state =>\r\n        state.theme === 'dark' ? darkTheme : lightTheme\r\n    );\r\n    return (\r\n        <Layout\r\n            {...props}\r\n            appBar={AppBar}\r\n            sidebar={CustomSidebar}\r\n            menu={Menu}\r\n            theme={theme}\r\n        />\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Field, Form } from 'react-final-form';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\n\r\nimport { Notification, useTranslate, useLogin, useNotify } from 'react-admin';\r\n\r\nimport { lightTheme } from './themes';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    main: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minHeight: '100vh',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        background: 'url(https://source.unsplash.com/random/1600x900)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n    },\r\n    card: {\r\n        minWidth: 300,\r\n        marginTop: '6em',\r\n    },\r\n    avatar: {\r\n        margin: '1em',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    icon: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    hint: {\r\n        marginTop: '1em',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        color: theme.palette.grey[500],\r\n    },\r\n    form: {\r\n        padding: '0 1em 1em 1em',\r\n    },\r\n    input: {\r\n        marginTop: '1em',\r\n    },\r\n    actions: {\r\n        padding: '0 1em 1em 1em',\r\n    },\r\n}));\r\n\r\nconst renderInput = ({\r\n    meta: { touched, error } = {},\r\n    input: { ...inputProps },\r\n    ...props\r\n}) => (\r\n    <TextField\r\n        error={!!(touched && error)}\r\n        helperText={touched && error}\r\n        {...inputProps}\r\n        {...props}\r\n        fullWidth\r\n    />\r\n);\r\n\r\nconst Login = ({ location }) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const translate = useTranslate();\r\n    const classes = useStyles();\r\n    const notify = useNotify();\r\n    const login = useLogin();\r\n\r\n    const handleSubmit = auth => {\r\n        setLoading(true);\r\n        login(auth, location.state ? location.state.nextPathname : '/')\r\n            .then(() => setLoading(false))\r\n            .catch(error => {\r\n                setLoading(false);\r\n                notify(\r\n                    typeof error === 'string'\r\n                        ? error\r\n                        : typeof error === 'undefined' || !error.message\r\n                        ? 'ra.auth.sign_in_error'\r\n                        : error.message,\r\n                    'warning'\r\n                );\r\n            });\r\n    };\r\n\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.username) {\r\n            errors.username = translate('ra.validation.required');\r\n        }\r\n        if (!values.password) {\r\n            errors.password = translate('ra.validation.required');\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={handleSubmit}\r\n            validate={validate}\r\n            render={({ handleSubmit }) => (\r\n                <form onSubmit={handleSubmit} noValidate>\r\n                    <div className={classes.main}>\r\n                        <Card className={classes.card}>\r\n                            <div className={classes.avatar}>\r\n                                <Avatar className={classes.icon}>\r\n                                    <LockIcon />\r\n                                </Avatar>\r\n                            </div>\r\n                            <div className={classes.hint}>\r\n                                Hint: demo / demo\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <div className={classes.input}>\r\n                                    <Field\r\n                                        autoFocus\r\n                                        name=\"username\"\r\n                                        component={renderInput}\r\n                                        label={translate('ra.auth.username')}\r\n                                        disabled={loading}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.input}>\r\n                                    <Field\r\n                                        name=\"password\"\r\n                                        component={renderInput}\r\n                                        label={translate('ra.auth.password')}\r\n                                        type=\"password\"\r\n                                        disabled={loading}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <CardActions className={classes.actions}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\"\r\n                                    color=\"primary\"\r\n                                    disabled={loading}\r\n                                    className={classes.button}\r\n                                    fullWidth\r\n                                >\r\n                                    {loading && (\r\n                                        <CircularProgress\r\n                                            size={25}\r\n                                            thickness={2}\r\n                                        />\r\n                                    )}\r\n                                    {translate('ra.auth.sign_in')}\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                        <Notification />\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nLogin.propTypes = {\r\n    authProvider: PropTypes.func,\r\n    previousRoute: PropTypes.string,\r\n};\r\n\r\n// We need to put the ThemeProvider decoration in another component\r\n// Because otherwise the useStyles() hook used in Login won't get\r\n// the right theme\r\nconst LoginWithTheme = props => (\r\n    <ThemeProvider theme={createMuiTheme(lightTheme)}>\r\n        <Login {...props} />\r\n    </ThemeProvider>\r\n);\r\n\r\nexport default LoginWithTheme;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTranslate } from 'react-admin';\r\n\r\nconst useStyles = makeStyles({\r\n    media: {\r\n        height: '18em',\r\n    },\r\n});\r\n\r\nconst mediaUrl = `https://marmelab.com/posters/beard-${parseInt(\r\n    Math.random() * 10,\r\n    10\r\n) + 1}.jpeg`;\r\n\r\nconst Welcome = () => {\r\n    const translate = useTranslate();\r\n    const classes = useStyles();\r\n    return (\r\n        <Card>\r\n            <CardMedia image={mediaUrl} className={classes.media} />\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    {translate('pos.dashboard.welcome.title')}\r\n                </Typography>\r\n                <Typography component=\"p\">\r\n                    {translate('pos.dashboard.welcome.subtitle')}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions style={{ justifyContent: 'flex-end' }}>\r\n                <Button href=\"https://marmelab.com/react-admin\">\r\n                    <HomeIcon style={{ paddingRight: '0.5em' }} />\r\n                    {translate('pos.dashboard.welcome.aor_button')}\r\n                </Button>\r\n                <Button href=\"https://github.com/marmelab/react-admin/tree/master/examples/demo\">\r\n                    <CodeIcon style={{ paddingRight: '0.5em' }} />\r\n                    {translate('pos.dashboard.welcome.demo_button')}\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Welcome;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        float: 'left',\r\n        margin: '-20px 20px 0 15px',\r\n        zIndex: 100,\r\n        borderRadius: 3,\r\n    },\r\n    icon: {\r\n        float: 'right',\r\n        width: 54,\r\n        height: 54,\r\n        padding: 14,\r\n        color: '#fff',\r\n    },\r\n});\r\n\r\nconst CardIcon = ({ Icon, bgColor }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.card} style={{ backgroundColor: bgColor }}>\r\n            <Icon className={classes.icon} />\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default CardIcon;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport DollarIcon from '@material-ui/icons/AttachMoney';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useTranslate } from 'react-admin';\r\n\r\nimport CardIcon from './CardIcon';\r\n\r\nconst useStyles = makeStyles({\r\n    main: {\r\n        flex: '1',\r\n        marginRight: '1em',\r\n        marginTop: 20,\r\n    },\r\n    card: {\r\n        overflow: 'inherit',\r\n        textAlign: 'right',\r\n        padding: 16,\r\n        minHeight: 52,\r\n    },\r\n});\r\n\r\nconst MonthlyRevenue = ({ value }) => {\r\n    const translate = useTranslate();\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.main}>\r\n            <CardIcon Icon={DollarIcon} bgColor=\"#31708f\" />\r\n            <Card className={classes.card}>\r\n                <Typography className={classes.title} color=\"textSecondary\">\r\n                    {translate('pos.dashboard.monthly_revenue')}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    {value}\r\n                </Typography>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MonthlyRevenue;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useTranslate } from 'react-admin';\r\n\r\nimport CardIcon from './CardIcon';\r\n\r\nconst useStyles = makeStyles({\r\n    main: {\r\n        flex: '1',\r\n        marginLeft: '1em',\r\n        marginTop: 20,\r\n    },\r\n    card: {\r\n        overflow: 'inherit',\r\n        textAlign: 'right',\r\n        padding: 16,\r\n        minHeight: 52,\r\n    },\r\n});\r\n\r\nconst NbNewOrders = ({ value }) => {\r\n    const translate = useTranslate();\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.main}>\r\n            <CardIcon Icon={ShoppingCartIcon} bgColor=\"#ff9800\" />\r\n            <Card className={classes.card}>\r\n                <Typography className={classes.title} color=\"textSecondary\">\r\n                    {translate('pos.dashboard.new_orders')}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    {value}\r\n                </Typography>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NbNewOrders;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslate } from 'react-admin';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flex: 1,\r\n    },\r\n    cost: {\r\n        marginRight: '1em',\r\n        color: theme.palette.text.primary,\r\n    },\r\n}));\r\n\r\nconst PendingOrders = ({ orders = [], customers = {} }) => {\r\n    const classes = useStyles();\r\n    const translate = useTranslate();\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader title={translate('pos.dashboard.pending_orders')} />\r\n            <List dense={true}>\r\n                {orders.map(record => (\r\n                    <ListItem\r\n                        key={record.id}\r\n                        button\r\n                        component={Link}\r\n                        to={`/commands/${record.id}`}\r\n                    >\r\n                        <ListItemAvatar>\r\n                            {customers[record.customer_id] ? (\r\n                                <Avatar\r\n                                    src={`${\r\n                                        customers[record.customer_id].avatar\r\n                                    }?size=32x32`}\r\n                                />\r\n                            ) : (\r\n                                <Avatar />\r\n                            )}\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={new Date(record.date).toLocaleString(\r\n                                'en-GB'\r\n                            )}\r\n                            secondary={translate('pos.dashboard.order.items', {\r\n                                smart_count: record.basket.length,\r\n                                nb_items: record.basket.length,\r\n                                customer_name: customers[record.customer_id]\r\n                                    ? `${\r\n                                          customers[record.customer_id]\r\n                                              .first_name\r\n                                      } ${\r\n                                          customers[record.customer_id]\r\n                                              .last_name\r\n                                      }`\r\n                                    : '',\r\n                            })}\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                            <span className={classes.cost}>\r\n                                {record.total}$\r\n                            </span>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PendingOrders;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslate } from 'react-admin';\r\n\r\nimport CardIcon from './CardIcon';\r\n\r\nimport StarRatingField from '../reviews/StarRatingField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    main: {\r\n        flex: '1',\r\n        marginRight: '1em',\r\n        marginTop: 20,\r\n    },\r\n    titleLink: { textDecoration: 'none', color: 'inherit' },\r\n    card: {\r\n        padding: '16px 0',\r\n        overflow: 'inherit',\r\n        textAlign: 'right',\r\n    },\r\n    title: {\r\n        padding: '0 16px',\r\n    },\r\n    value: {\r\n        padding: '0 16px',\r\n        minHeight: 48,\r\n    },\r\n    avatar: {\r\n        background: theme.palette.background.avatar,\r\n    },\r\n    listItemText: {\r\n        overflowY: 'hidden',\r\n        height: '4em',\r\n        display: '-webkit-box',\r\n        WebkitLineClamp: 2,\r\n        WebkitBoxOrient: 'vertical',\r\n    },\r\n}));\r\n\r\nconst location = {\r\n    pathname: 'reviews',\r\n    query: { filter: JSON.stringify({ status: 'pending' }) },\r\n};\r\n\r\nconst PendingReviews = ({ reviews = [], customers = {}, nb }) => {\r\n    const classes = useStyles();\r\n    const translate = useTranslate();\r\n    return (\r\n        <div className={classes.main}>\r\n            <CardIcon Icon={CommentIcon} bgColor=\"#f44336\" />\r\n            <Card className={classes.card}>\r\n                <Typography className={classes.title} color=\"textSecondary\">\r\n                    {translate('pos.dashboard.pending_reviews')}\r\n                </Typography>\r\n                <Typography\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                    className={classes.value}\r\n                >\r\n                    <Link to={location} className={classes.titleLink}>\r\n                        {nb}\r\n                    </Link>\r\n                </Typography>\r\n                <Divider />\r\n                <List>\r\n                    {reviews.map(record => (\r\n                        <ListItem\r\n                            key={record.id}\r\n                            button\r\n                            component={Link}\r\n                            to={`/reviews/${record.id}`}\r\n                            alignItems=\"flex-start\"\r\n                        >\r\n                            <ListItemAvatar>\r\n                                {customers[record.customer_id] ? (\r\n                                    <Avatar\r\n                                        src={`${\r\n                                            customers[record.customer_id].avatar\r\n                                        }?size=32x32`}\r\n                                        className={classes.avatar}\r\n                                    />\r\n                                ) : (\r\n                                    <Avatar />\r\n                                )}\r\n                            </ListItemAvatar>\r\n\r\n                            <ListItemText\r\n                                primary={<StarRatingField record={record} />}\r\n                                secondary={record.comment}\r\n                                className={classes.listItemText}\r\n                                style={{ paddingRight: 0 }}\r\n                            />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PendingReviews;\r\n","import React, { useMemo } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CustomerIcon from '@material-ui/icons/PersonAdd';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslate, useQueryWithStore } from 'react-admin';\r\n\r\nimport CardIcon from './CardIcon';\r\n\r\nconst useStyles = makeStyles({\r\n    main: {\r\n        flex: '1',\r\n        marginLeft: '1em',\r\n        marginTop: 20,\r\n    },\r\n    card: {\r\n        padding: '16px 0',\r\n        overflow: 'inherit',\r\n        textAlign: 'right',\r\n    },\r\n    title: {\r\n        padding: '0 16px',\r\n    },\r\n    value: {\r\n        padding: '0 16px',\r\n        minHeight: 48,\r\n    },\r\n});\r\n\r\nconst NewCustomers = () => {\r\n    const classes = useStyles();\r\n    const translate = useTranslate();\r\n    const aMonthAgo = useMemo(() => {\r\n        const date = new Date();\r\n        date.setDate(date.getDate() - 30);\r\n        date.setHours(0);\r\n        date.setMinutes(0);\r\n        date.setSeconds(0);\r\n        date.setMilliseconds(0);\r\n        return date;\r\n    }, []);\r\n\r\n    const { loaded, data: visitors } = useQueryWithStore({\r\n        type: 'getList',\r\n        resource: 'customers',\r\n        payload: {\r\n            filter: {\r\n                has_ordered: true,\r\n                first_seen_gte: aMonthAgo.toISOString(),\r\n            },\r\n            sort: { field: 'first_seen', order: 'DESC' },\r\n            pagination: { page: 1, perPage: 100 },\r\n        },\r\n    });\r\n\r\n    if (!loaded) return null;\r\n\r\n    const nb = visitors.reduce(nb => ++nb, 0);\r\n    return (\r\n        <div className={classes.main}>\r\n            <CardIcon Icon={CustomerIcon} bgColor=\"#4caf50\" />\r\n            <Card className={classes.card}>\r\n                <Typography className={classes.title} color=\"textSecondary\">\r\n                    {translate('pos.dashboard.new_customers')}\r\n                </Typography>\r\n                <Typography\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                    className={classes.value}\r\n                >\r\n                    {nb}\r\n                </Typography>\r\n                <Divider />\r\n                <List>\r\n                    {visitors.map(record => (\r\n                        <ListItem\r\n                            button\r\n                            to={`/customers/${record.id}`}\r\n                            component={Link}\r\n                            key={record.id}\r\n                        >\r\n                            <ListItemAvatar>\r\n                                <Avatar src={`${record.avatar}?size=32x32`} />\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={`${record.first_name} ${\r\n                                    record.last_name\r\n                                }`}\r\n                            />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewCustomers;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useVersion, useDataProvider } from 'react-admin';\r\nimport { useMediaQuery } from '@material-ui/core';\r\n\r\nimport Welcome from './Welcome';\r\nimport MonthlyRevenue from './MonthlyRevenue';\r\nimport NbNewOrders from './NbNewOrders';\r\nimport PendingOrders from './PendingOrders';\r\nimport PendingReviews from './PendingReviews';\r\nimport NewCustomers from './NewCustomers';\r\n\r\nconst styles = {\r\n    flex: { display: 'flex' },\r\n    flexColumn: { display: 'flex', flexDirection: 'column' },\r\n    leftCol: { flex: 1, marginRight: '1em' },\r\n    rightCol: { flex: 1, marginLeft: '1em' },\r\n    singleCol: { marginTop: '2em', marginBottom: '2em' },\r\n};\r\n\r\nconst Dashboard = () => {\r\n    const [state, setState] = useState({});\r\n    const version = useVersion();\r\n    const dataProvider = useDataProvider();\r\n    const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\r\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n\r\n    const fetchOrders = useCallback(async () => {\r\n        const aMonthAgo = new Date();\r\n        aMonthAgo.setDate(aMonthAgo.getDate() - 30);\r\n        const { data: recentOrders } = await dataProvider.getList('commands', {\r\n            filter: { date_gte: aMonthAgo.toISOString() },\r\n            sort: { field: 'date', order: 'DESC' },\r\n            pagination: { page: 1, perPage: 50 },\r\n        });\r\n        const aggregations = recentOrders\r\n            .filter(order => order.status !== 'cancelled')\r\n            .reduce(\r\n                (stats, order) => {\r\n                    if (order.status !== 'cancelled') {\r\n                        stats.revenue += order.total;\r\n                        stats.nbNewOrders++;\r\n                    }\r\n                    if (order.status === 'ordered') {\r\n                        stats.pendingOrders.push(order);\r\n                    }\r\n                    return stats;\r\n                },\r\n                {\r\n                    revenue: 0,\r\n                    nbNewOrders: 0,\r\n                    pendingOrders: [],\r\n                }\r\n            );\r\n        setState(state => ({\r\n            ...state,\r\n            revenue: aggregations.revenue.toLocaleString(undefined, {\r\n                style: 'currency',\r\n                currency: 'USD',\r\n                minimumFractionDigits: 0,\r\n                maximumFractionDigits: 0,\r\n            }),\r\n            nbNewOrders: aggregations.nbNewOrders,\r\n            pendingOrders: aggregations.pendingOrders,\r\n        }));\r\n        const { data: customers } = await dataProvider.getMany('customers', {\r\n            ids: aggregations.pendingOrders.map(order => order.customer_id),\r\n        });\r\n        setState(state => ({\r\n            ...state,\r\n            pendingOrdersCustomers: customers.reduce((prev, customer) => {\r\n                prev[customer.id] = customer; // eslint-disable-line no-param-reassign\r\n                return prev;\r\n            }, {}),\r\n        }));\r\n    }, [dataProvider]);\r\n\r\n    const fetchReviews = useCallback(async () => {\r\n        const { data: reviews } = await dataProvider.getList('reviews', {\r\n            filter: { status: 'pending' },\r\n            sort: { field: 'date', order: 'DESC' },\r\n            pagination: { page: 1, perPage: 100 },\r\n        });\r\n        const nbPendingReviews = reviews.reduce(nb => ++nb, 0);\r\n        const pendingReviews = reviews.slice(0, Math.min(10, reviews.length));\r\n        setState(state => ({ ...state, pendingReviews, nbPendingReviews }));\r\n        const { data: customers } = await dataProvider.getMany('customers', {\r\n            ids: pendingReviews.map(review => review.customer_id),\r\n        });\r\n        setState(state => ({\r\n            ...state,\r\n            pendingReviewsCustomers: customers.reduce((prev, customer) => {\r\n                prev[customer.id] = customer; // eslint-disable-line no-param-reassign\r\n                return prev;\r\n            }, {}),\r\n        }));\r\n    }, [dataProvider]);\r\n\r\n    useEffect(() => {\r\n        fetchOrders();\r\n        fetchReviews();\r\n    }, [version]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const {\r\n        nbNewOrders,\r\n        nbPendingReviews,\r\n        pendingOrders,\r\n        pendingOrdersCustomers,\r\n        pendingReviews,\r\n        pendingReviewsCustomers,\r\n        revenue,\r\n    } = state;\r\n    return isXSmall ? (\r\n        <div>\r\n            <div style={styles.flexColumn}>\r\n                <div style={{ marginBottom: '2em' }}>\r\n                    <Welcome />\r\n                </div>\r\n                <div style={styles.flex}>\r\n                    <MonthlyRevenue value={revenue} />\r\n                    <NbNewOrders value={nbNewOrders} />\r\n                </div>\r\n                <div style={styles.singleCol}>\r\n                    <PendingOrders\r\n                        orders={pendingOrders}\r\n                        customers={pendingOrdersCustomers}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : isSmall ? (\r\n        <div style={styles.flexColumn}>\r\n            <div style={styles.singleCol}>\r\n                <Welcome />\r\n            </div>\r\n            <div style={styles.flex}>\r\n                <MonthlyRevenue value={revenue} />\r\n                <NbNewOrders value={nbNewOrders} />\r\n            </div>\r\n            <div style={styles.singleCol}>\r\n                <PendingOrders\r\n                    orders={pendingOrders}\r\n                    customers={pendingOrdersCustomers}\r\n                />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div style={styles.flex}>\r\n            <div style={styles.leftCol}>\r\n                <div style={styles.flex}>\r\n                    <MonthlyRevenue value={revenue} />\r\n                    <NbNewOrders value={nbNewOrders} />\r\n                </div>\r\n                <div style={styles.singleCol}>\r\n                    <Welcome />\r\n                </div>\r\n                <div style={styles.singleCol}>\r\n                    <PendingOrders\r\n                        orders={pendingOrders}\r\n                        customers={pendingOrdersCustomers}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div style={styles.rightCol}>\r\n                <div style={styles.flex}>\r\n                    <PendingReviews\r\n                        nb={nbPendingReviews}\r\n                        reviews={pendingReviews}\r\n                        customers={pendingReviewsCustomers}\r\n                    />\r\n                    <NewCustomers />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import DashboardComponent from './Dashboard';\r\n\r\nexport const Dashboard = DashboardComponent;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useTranslate, useLocale, useSetLocale, Title } from 'react-admin';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { changeTheme } from './actions';\r\n\r\nconst useStyles = makeStyles({\r\n    label: { width: '10em', display: 'inline-block' },\r\n    button: { margin: '1em' },\r\n});\r\n\r\nconst Configuration = () => {\r\n    const translate = useTranslate();\r\n    const locale = useLocale();\r\n    const setLocale = useSetLocale();\r\n    const classes = useStyles();\r\n    const theme = useSelector(state => state.theme);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Card>\r\n            <Title title={translate('pos.configuration')} />\r\n            <CardContent>\r\n                <div className={classes.label}>\r\n                    {translate('pos.theme.name')}\r\n                </div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    color={theme === 'light' ? 'primary' : 'default'}\r\n                    onClick={() => dispatch(changeTheme('light'))}\r\n                >\r\n                    {translate('pos.theme.light')}\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    color={theme === 'dark' ? 'primary' : 'default'}\r\n                    onClick={() => dispatch(changeTheme('dark'))}\r\n                >\r\n                    {translate('pos.theme.dark')}\r\n                </Button>\r\n            </CardContent>\r\n            <CardContent>\r\n                <div className={classes.label}>{translate('pos.language')}</div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    color={locale === 'en' ? 'primary' : 'default'}\r\n                    onClick={() => setLocale('en')}\r\n                >\r\n                    en\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    color={locale === 'fr' ? 'primary' : 'default'}\r\n                    onClick={() => setLocale('fr')}\r\n                >\r\n                    fr\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Configuration;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslate } from 'react-admin';\r\nimport { stringify } from 'query-string';\r\n\r\nimport visitors from '../visitors';\r\n\r\nconst useStyles = makeStyles({\r\n    icon: { paddingRight: '0.5em' },\r\n    link: {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nconst LinkToRelatedCustomers = ({ segment }) => {\r\n    const translate = useTranslate();\r\n    const classes = useStyles();\r\n    return (\r\n        <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            component={Link}\r\n            to={{\r\n                pathname: '/customers',\r\n                search: stringify({\r\n                    page: 1,\r\n                    perPage: 25,\r\n                    filter: JSON.stringify({ groups: segment }),\r\n                }),\r\n            }}\r\n            className={classes.link}\r\n        >\r\n            <visitors.icon className={classes.icon} />\r\n            {translate('resources.segments.fields.customers')}\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default LinkToRelatedCustomers;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTranslate, Title } from 'react-admin';\r\n\r\nimport LinkToRelatedCustomers from './LinkToRelatedCustomers';\r\nimport segments from './data';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: 16,\r\n    },\r\n});\r\n\r\nconst Segments = () => {\r\n    const translate = useTranslate();\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.root}>\r\n            <Title title={translate('resources.segments.name')} />\r\n            <Table size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            {translate('resources.segments.fields.name')}\r\n                        </TableCell>\r\n                        <TableCell />\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {segments.map(segment => (\r\n                        <TableRow key={segment.id}>\r\n                            <TableCell>{translate(segment.name)}</TableCell>\r\n                            <TableCell>\r\n                                <LinkToRelatedCustomers segment={segment.id} />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Segments;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Configuration from './configuration/Configuration';\r\nimport Segments from './segments/Segments';\r\n\r\nexport default [\r\n    <Route exact path=\"/configuration\" render={() => <Configuration />} />,\r\n    <Route exact path=\"/segments\" render={() => <Segments />} />,\r\n];\r\n","import englishMessages from 'ra-language-english';\r\n\r\nexport default {\r\n    ...englishMessages,\r\n    pos: {\r\n        search: 'Search',\r\n        configuration: 'Configuration',\r\n        language: 'Language',\r\n        theme: {\r\n            name: 'Theme',\r\n            light: 'Light',\r\n            dark: 'Dark',\r\n        },\r\n        dashboard: {\r\n            monthly_revenue: 'Monthly Revenue',\r\n            new_orders: 'New Orders',\r\n            pending_reviews: 'Pending Reviews',\r\n            new_customers: 'New Customers',\r\n            pending_orders: 'Pending Orders',\r\n            order: {\r\n                items:\r\n                    'by %{customer_name}, one item |||| by %{customer_name}, %{nb_items} items',\r\n            },\r\n            welcome: {\r\n                title: 'Welcome to react-admin demo',\r\n                subtitle:\r\n                    \"This is the admin of an imaginary poster shop. Feel free to explore and modify the data - it's local to your computer, and will reset each time you reload.\",\r\n                aor_button: 'react-admin site',\r\n                demo_button: 'Source for this demo',\r\n            },\r\n        },\r\n        menu: {\r\n            sales: 'Sales',\r\n            catalog: 'Catalog',\r\n            customers: 'Customers',\r\n        },\r\n    },\r\n    resources: {\r\n        customers: {\r\n            name: 'Customer |||| Customers',\r\n            fields: {\r\n                commands: 'Orders',\r\n                groups: 'Segments',\r\n                last_seen_gte: 'Visited Since',\r\n                name: 'Name',\r\n                total_spent: 'Total spent',\r\n            },\r\n            tabs: {\r\n                identity: 'Identity',\r\n                address: 'Address',\r\n                orders: 'Orders',\r\n                reviews: 'Reviews',\r\n                stats: 'Stats',\r\n            },\r\n            page: {\r\n                delete: 'Delete Customer',\r\n            },\r\n        },\r\n        commands: {\r\n            name: 'Order |||| Orders',\r\n            title: 'Order %{reference}',\r\n            fields: {\r\n                basket: {\r\n                    delivery: 'Delivery',\r\n                    reference: 'Reference',\r\n                    quantity: 'Quantity',\r\n                    sum: 'Sum',\r\n                    tax_rate: 'Tax Rate',\r\n                    total: 'Total',\r\n                    unit_price: 'Unit Price',\r\n                },\r\n                customer_id: 'Customer',\r\n                date_gte: 'Passed Since',\r\n                date_lte: 'Passed Before',\r\n                total_gte: 'Min amount',\r\n                status: 'Status',\r\n                returned: 'Returned',\r\n            },\r\n        },\r\n        invoices: {\r\n            name: 'Invoice |||| Invoices',\r\n            fields: {\r\n                date: 'Invoice date',\r\n                customer_id: 'Customer',\r\n                command_id: 'Order',\r\n                date_gte: 'Passed Since',\r\n                date_lte: 'Passed Before',\r\n                total_gte: 'Min amount',\r\n                address: 'Address',\r\n            },\r\n        },\r\n        products: {\r\n            name: 'Poster |||| Posters',\r\n            fields: {\r\n                category_id: 'Category',\r\n                height_gte: 'Min height',\r\n                height_lte: 'Max height',\r\n                height: 'Height',\r\n                image: 'Image',\r\n                price: 'Price',\r\n                reference: 'Reference',\r\n                stock_lte: 'Low Stock',\r\n                stock: 'Stock',\r\n                thumbnail: 'Thumbnail',\r\n                width_gte: 'Min width',\r\n                width_lte: 'Max width',\r\n                width: 'Width',\r\n            },\r\n            tabs: {\r\n                image: 'Image',\r\n                details: 'Details',\r\n                description: 'Description',\r\n                reviews: 'Reviews',\r\n            },\r\n        },\r\n        categories: {\r\n            name: 'Category |||| Categories',\r\n            fields: {\r\n                products: 'Products',\r\n            },\r\n        },\r\n        reviews: {\r\n            name: 'Review |||| Reviews',\r\n            detail: 'Review detail',\r\n            fields: {\r\n                customer_id: 'Customer',\r\n                command_id: 'Order',\r\n                product_id: 'Product',\r\n                date_gte: 'Posted since',\r\n                date_lte: 'Posted before',\r\n                date: 'Date',\r\n                comment: 'Comment',\r\n                rating: 'Rating',\r\n            },\r\n            action: {\r\n                accept: 'Accept',\r\n                reject: 'Reject',\r\n            },\r\n            notification: {\r\n                approved_success: 'Review approved',\r\n                approved_error: 'Error: Review not approved',\r\n                rejected_success: 'Review rejected',\r\n                rejected_error: 'Error: Review not rejected',\r\n            },\r\n        },\r\n        segments: {\r\n            name: 'Segments',\r\n            fields: {\r\n                customers: 'Customers',\r\n                name: 'Name',\r\n            },\r\n            data: {\r\n                compulsive: 'Compulsive',\r\n                collector: 'Collector',\r\n                ordered_once: 'Ordered once',\r\n                regular: 'Regular',\r\n                returns: 'Returns',\r\n                reviewer: 'Reviewer',\r\n            },\r\n        },\r\n    },\r\n};\r\n","export default type => {\r\n    switch (type) {\r\n        case 'graphql':\r\n            return import('./graphql').then(factory => factory.default());\r\n        default:\r\n            return import('./rest').then(provider => provider.default);\r\n    }\r\n};\r\n","export default type => {\r\n    switch (type) {\r\n        case 'graphql':\r\n            return import('./graphql').then(factory => factory.default());\r\n        default:\r\n            return import('./rest').then(factory => factory.default());\r\n    }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Admin, Resource } from 'react-admin';\r\nimport polyglotI18nProvider from 'ra-i18n-polyglot';\r\n\r\nimport './App.css';\r\n\r\nimport authProvider from './authProvider';\r\nimport themeReducer from './themeReducer';\r\nimport { Login, Layout } from './layout';\r\nimport { Dashboard } from './dashboard';\r\nimport customRoutes from './routes';\r\nimport englishMessages from './i18n/en';\r\n\r\nimport visitors from './visitors';\r\nimport orders from './orders';\r\nimport products from './products';\r\nimport invoices from './invoices';\r\nimport categories from './categories';\r\nimport reviews from './reviews';\r\n\r\nimport dataProviderFactory from './dataProvider';\r\nimport fakeServerFactory from './fakeServer';\r\n\r\nconst i18nProvider = polyglotI18nProvider(locale => {\r\n    if (locale === 'fr') {\r\n        return import('./i18n/fr').then(messages => messages.default);\r\n    }\r\n\r\n    // Always fallback on english\r\n    return englishMessages;\r\n}, 'en');\r\n\r\nclass App extends Component {\r\n    state = { dataProvider: null };\r\n\r\n    async componentDidMount() {\r\n        this.restoreFetch = await fakeServerFactory(\r\n            process.env.REACT_APP_DATA_PROVIDER\r\n        );\r\n\r\n        const dataProvider = await dataProviderFactory(\r\n            process.env.REACT_APP_DATA_PROVIDER\r\n        );\r\n\r\n        this.setState({ dataProvider });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.restoreFetch();\r\n    }\r\n\r\n    render() {\r\n        const { dataProvider } = this.state;\r\n\r\n        if (!dataProvider) {\r\n            return (\r\n                <div className=\"loader-container\">\r\n                    <div className=\"loader\">Loading...</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Admin\r\n                title=\"\"\r\n                dataProvider={dataProvider}\r\n                customReducers={{ theme: themeReducer }}\r\n                customRoutes={customRoutes}\r\n                authProvider={authProvider}\r\n                dashboard={Dashboard}\r\n                loginPage={Login}\r\n                layout={Layout}\r\n                i18nProvider={i18nProvider}\r\n            >\r\n                <Resource name=\"customers\" {...visitors} />\r\n                <Resource\r\n                    name=\"commands\"\r\n                    {...orders}\r\n                    options={{ label: 'Orders' }}\r\n                />\r\n                <Resource name=\"invoices\" {...invoices} />\r\n                <Resource name=\"products\" {...products} />\r\n                <Resource name=\"categories\" {...categories} />\r\n                <Resource name=\"reviews\" {...reviews} />\r\n            </Admin>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import \"react-app-polyfill/ie11\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}